<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180"><g><title>0x00007FFCC87FD6BB [[vdso]] (36 samples, 0.49%)</title><rect x="1.2498%" y="997" width="0.4891%" height="15" fill="rgb(227,0,7)"/><text x="1.4998%" y="1007.50"></text></g><g><title>aws_high_res_clock_get_ticks [mount-s3] (71 samples, 0.96%)</title><rect x="0.8423%" y="1045" width="0.9645%" height="15" fill="rgb(217,0,24)"/><text x="1.0923%" y="1055.50"></text></g><g><title>__clock_gettime [libc-2.17.so] (66 samples, 0.90%)</title><rect x="0.9102%" y="1029" width="0.8966%" height="15" fill="rgb(221,193,54)"/><text x="1.1602%" y="1039.50"></text></g><g><title>clock_gettime [[vdso]] (59 samples, 0.80%)</title><rect x="1.0053%" y="1013" width="0.8015%" height="15" fill="rgb(248,212,6)"/><text x="1.2553%" y="1023.50"></text></g><g><title>aws_event_loop_register_tick_end [mount-s3] (89 samples, 1.21%)</title><rect x="0.7200%" y="1061" width="1.2091%" height="15" fill="rgb(208,68,35)"/><text x="0.9700%" y="1071.50"></text></g><g><title>inline aws_timestamp_convert [mount-s3] (8 samples, 0.11%)</title><rect x="1.8204%" y="1045" width="0.1087%" height="15" fill="rgb(232,128,0)"/><text x="2.0704%" y="1055.50"></text></g><g><title>inline aws_timestamp_convert_u64 [mount-s3] (8 samples, 0.11%)</title><rect x="1.8204%" y="1029" width="0.1087%" height="15" fill="rgb(207,160,47)"/><text x="2.0704%" y="1039.50"></text></g><g><title>0x00007FFCC87FD6BB [[vdso]] (120 samples, 1.63%)</title><rect x="3.1653%" y="1013" width="1.6302%" height="15" fill="rgb(228,23,34)"/><text x="3.4153%" y="1023.50"></text></g><g><title>clock_gettime [[vdso]] (198 samples, 2.69%)</title><rect x="2.4861%" y="1029" width="2.6899%" height="15" fill="rgb(218,30,26)"/><text x="2.7361%" y="1039.50">cl..</text></g><g><title>aws_high_res_clock_get_ticks [mount-s3] (237 samples, 3.22%)</title><rect x="1.9698%" y="1061" width="3.2197%" height="15" fill="rgb(220,122,19)"/><text x="2.2198%" y="1071.50">aws..</text></g><g><title>__clock_gettime [libc-2.17.so] (219 samples, 2.98%)</title><rect x="2.2144%" y="1045" width="2.9751%" height="15" fill="rgb(250,228,42)"/><text x="2.4644%" y="1055.50">__c..</text></g><g><title>aws_logger_get [mount-s3] (9 samples, 0.12%)</title><rect x="5.1895%" y="1061" width="0.1223%" height="15" fill="rgb(240,193,28)"/><text x="5.4395%" y="1071.50"></text></g><g><title>aws_task_scheduler_has_tasks [mount-s3] (14 samples, 0.19%)</title><rect x="5.3118%" y="1061" width="0.1902%" height="15" fill="rgb(216,20,37)"/><text x="5.5618%" y="1071.50"></text></g><g><title>__libc_disable_asynccancel [libc-2.17.so] (28 samples, 0.38%)</title><rect x="15.4055%" y="1045" width="0.3804%" height="15" fill="rgb(206,188,39)"/><text x="15.6555%" y="1055.50"></text></g><g><title>__libc_enable_asynccancel [libc-2.17.so] (18 samples, 0.24%)</title><rect x="15.7859%" y="1045" width="0.2445%" height="15" fill="rgb(217,207,13)"/><text x="16.0359%" y="1055.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (24 samples, 0.33%)</title><rect x="16.1255%" y="1013" width="0.3260%" height="15" fill="rgb(231,73,38)"/><text x="16.3755%" y="1023.50"></text></g><g><title>__x64_sys_epoll_wait [linux] (25 samples, 0.34%)</title><rect x="16.1255%" y="1029" width="0.3396%" height="15" fill="rgb(225,20,46)"/><text x="16.3755%" y="1039.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (282 samples, 3.83%)</title><rect x="16.4652%" y="1013" width="3.8310%" height="15" fill="rgb(210,31,41)"/><text x="16.7152%" y="1023.50">0xFF..</text></g><g><title>0xFFFFFFFFFFFFFF80 (24 samples, 0.33%)</title><rect x="20.3233%" y="981" width="0.3260%" height="15" fill="rgb(221,200,47)"/><text x="20.5733%" y="991.50"></text></g><g><title>__fdget [linux] (59 samples, 0.80%)</title><rect x="20.6494%" y="981" width="0.8015%" height="15" fill="rgb(226,26,5)"/><text x="20.8994%" y="991.50"></text></g><g><title>__fget_light [linux] (53 samples, 0.72%)</title><rect x="20.7309%" y="965" width="0.7200%" height="15" fill="rgb(249,33,26)"/><text x="20.9809%" y="975.50"></text></g><g><title>__fget [linux] (51 samples, 0.69%)</title><rect x="20.7580%" y="949" width="0.6928%" height="15" fill="rgb(235,183,28)"/><text x="21.0080%" y="959.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (51 samples, 0.69%)</title><rect x="20.7580%" y="933" width="0.6928%" height="15" fill="rgb(221,5,38)"/><text x="21.0080%" y="943.50"></text></g><g><title>__fget_light [linux] (17 samples, 0.23%)</title><rect x="21.4509%" y="981" width="0.2309%" height="15" fill="rgb(247,18,42)"/><text x="21.7009%" y="991.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (17 samples, 0.23%)</title><rect x="21.4509%" y="965" width="0.2309%" height="15" fill="rgb(241,131,45)"/><text x="21.7009%" y="975.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (46 samples, 0.62%)</title><rect x="21.7090%" y="965" width="0.6249%" height="15" fill="rgb(249,31,29)"/><text x="21.9590%" y="975.50"></text></g><g><title>ep_item_poll.isra.0 [linux] (12 samples, 0.16%)</title><rect x="22.4290%" y="933" width="0.1630%" height="15" fill="rgb(225,111,53)"/><text x="22.6790%" y="943.50"></text></g><g><title>ep_send_events_proc [linux] (15 samples, 0.20%)</title><rect x="22.4018%" y="949" width="0.2038%" height="15" fill="rgb(238,160,17)"/><text x="22.6518%" y="959.50"></text></g><g><title>ep_scan_ready_list.constprop.0 [linux] (20 samples, 0.27%)</title><rect x="22.3611%" y="965" width="0.2717%" height="15" fill="rgb(214,148,48)"/><text x="22.6111%" y="975.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (43 samples, 0.58%)</title><rect x="22.9181%" y="885" width="0.5842%" height="15" fill="rgb(232,36,49)"/><text x="23.1681%" y="895.50"></text></g><g><title>schedule_hrtimeout_range [linux] (61 samples, 0.83%)</title><rect x="22.7007%" y="965" width="0.8287%" height="15" fill="rgb(209,103,24)"/><text x="22.9507%" y="975.50"></text></g><g><title>schedule_hrtimeout_range_clock [linux] (61 samples, 0.83%)</title><rect x="22.7007%" y="949" width="0.8287%" height="15" fill="rgb(229,88,8)"/><text x="22.9507%" y="959.50"></text></g><g><title>schedule [linux] (47 samples, 0.64%)</title><rect x="22.8909%" y="933" width="0.6385%" height="15" fill="rgb(213,181,19)"/><text x="23.1409%" y="943.50"></text></g><g><title>__sched_text_start [linux] (45 samples, 0.61%)</title><rect x="22.9181%" y="917" width="0.6113%" height="15" fill="rgb(254,191,54)"/><text x="23.1681%" y="927.50"></text></g><g><title>finish_task_switch [linux] (45 samples, 0.61%)</title><rect x="22.9181%" y="901" width="0.6113%" height="15" fill="rgb(241,83,37)"/><text x="23.1681%" y="911.50"></text></g><g><title>ep_poll [linux] (135 samples, 1.83%)</title><rect x="21.7090%" y="981" width="1.8340%" height="15" fill="rgb(233,36,39)"/><text x="21.9590%" y="991.50">e..</text></g><g><title>do_epoll_wait [linux] (273 samples, 3.71%)</title><rect x="20.3233%" y="997" width="3.7087%" height="15" fill="rgb(226,3,54)"/><text x="20.5733%" y="1007.50">do_e..</text></g><g><title>fput_many [linux] (34 samples, 0.46%)</title><rect x="23.5702%" y="981" width="0.4619%" height="15" fill="rgb(245,192,40)"/><text x="23.8202%" y="991.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (34 samples, 0.46%)</title><rect x="23.5702%" y="965" width="0.4619%" height="15" fill="rgb(238,167,29)"/><text x="23.8202%" y="975.50"></text></g><g><title>__x64_sys_epoll_wait [linux] (274 samples, 3.72%)</title><rect x="20.3233%" y="1013" width="3.7223%" height="15" fill="rgb(232,182,51)"/><text x="20.5733%" y="1023.50">__x6..</text></g><g><title>0xFFFFFFFFFFFFFF80 (10 samples, 0.14%)</title><rect x="24.1407%" y="981" width="0.1359%" height="15" fill="rgb(231,60,39)"/><text x="24.3907%" y="991.50"></text></g><g><title>__audit_syscall_exit [linux] (32 samples, 0.43%)</title><rect x="24.1407%" y="997" width="0.4347%" height="15" fill="rgb(208,69,12)"/><text x="24.3907%" y="1007.50"></text></g><g><title>syscall_slow_exit_work [linux] (38 samples, 0.52%)</title><rect x="24.1000%" y="1013" width="0.5162%" height="15" fill="rgb(235,93,37)"/><text x="24.3500%" y="1023.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (12 samples, 0.16%)</title><rect x="24.6162%" y="997" width="0.1630%" height="15" fill="rgb(213,116,39)"/><text x="24.8662%" y="1007.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (18 samples, 0.24%)</title><rect x="24.7792%" y="981" width="0.2445%" height="15" fill="rgb(222,207,29)"/><text x="25.0292%" y="991.50"></text></g><g><title>__audit_syscall_entry [linux] (22 samples, 0.30%)</title><rect x="24.7792%" y="997" width="0.2989%" height="15" fill="rgb(206,96,30)"/><text x="25.0292%" y="1007.50"></text></g><g><title>do_syscall_64 [linux] (635 samples, 8.63%)</title><rect x="16.4652%" y="1029" width="8.6265%" height="15" fill="rgb(218,138,4)"/><text x="16.7152%" y="1039.50">do_syscall_6..</text></g><g><title>syscall_trace_enter [linux] (35 samples, 0.48%)</title><rect x="24.6162%" y="1013" width="0.4755%" height="15" fill="rgb(250,191,14)"/><text x="24.8662%" y="1023.50"></text></g><g><title>epoll_wait [libc-2.17.so] (1,445 samples, 19.63%)</title><rect x="5.5156%" y="1061" width="19.6305%" height="15" fill="rgb(239,60,40)"/><text x="5.7656%" y="1071.50">epoll_wait [libc-2.17.so]</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (664 samples, 9.02%)</title><rect x="16.1255%" y="1045" width="9.0205%" height="15" fill="rgb(206,27,48)"/><text x="16.3755%" y="1055.50">entry_SYSCALL..</text></g><g><title>inline aws_timestamp_convert [mount-s3] (12 samples, 0.16%)</title><rect x="25.1460%" y="1061" width="0.1630%" height="15" fill="rgb(225,35,8)"/><text x="25.3960%" y="1071.50"></text></g><g><title>inline aws_timestamp_convert_u64 [mount-s3] (12 samples, 0.16%)</title><rect x="25.1460%" y="1045" width="0.1630%" height="15" fill="rgb(250,213,24)"/><text x="25.3960%" y="1055.50"></text></g><g><title>aws_mem_calloc [mount-s3] (11 samples, 0.15%)</title><rect x="25.4993%" y="1013" width="0.1494%" height="15" fill="rgb(247,123,22)"/><text x="25.7493%" y="1023.50"></text></g><g><title>s_default_calloc [mount-s3] (8 samples, 0.11%)</title><rect x="25.5400%" y="997" width="0.1087%" height="15" fill="rgb(231,138,38)"/><text x="25.7900%" y="1007.50"></text></g><g><title>s_default_malloc [mount-s3] (8 samples, 0.11%)</title><rect x="25.5400%" y="981" width="0.1087%" height="15" fill="rgb(231,145,46)"/><text x="25.7900%" y="991.50"></text></g><g><title>posix_memalign [libc-2.17.so] (8 samples, 0.11%)</title><rect x="25.5400%" y="965" width="0.1087%" height="15" fill="rgb(251,118,11)"/><text x="25.7900%" y="975.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}}::{{closure}} [mount-s3] (9 samples, 0.12%)</title><rect x="25.7574%" y="853" width="0.1223%" height="15" fill="rgb(217,147,25)"/><text x="26.0074%" y="863.50"></text></g><g><title>inline tracing_core::dispatcher::Dispatch::enabled [mount-s3] (8 samples, 0.11%)</title><rect x="25.7710%" y="837" width="0.1087%" height="15" fill="rgb(247,81,37)"/><text x="26.0210%" y="847.50"></text></g><g><title>inline &lt;alloc::sync::Arc&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled [mount-s3] (8 samples, 0.11%)</title><rect x="25.7710%" y="821" width="0.1087%" height="15" fill="rgb(209,12,38)"/><text x="26.0210%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled [mount-s3] (8 samples, 0.11%)</title><rect x="25.7710%" y="805" width="0.1087%" height="15" fill="rgb(227,1,9)"/><text x="26.0210%" y="815.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled [mount-s3] (10 samples, 0.14%)</title><rect x="25.7574%" y="949" width="0.1359%" height="15" fill="rgb(248,47,43)"/><text x="26.0074%" y="959.50"></text></g><g><title>inline tracing_log::log_tracer::try_cache_interest [mount-s3] (10 samples, 0.14%)</title><rect x="25.7574%" y="933" width="0.1359%" height="15" fill="rgb(221,10,30)"/><text x="26.0074%" y="943.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}} [mount-s3] (10 samples, 0.14%)</title><rect x="25.7574%" y="917" width="0.1359%" height="15" fill="rgb(210,229,1)"/><text x="26.0074%" y="927.50"></text></g><g><title>tracing_core::dispatcher::get_default [mount-s3] (10 samples, 0.14%)</title><rect x="25.7574%" y="901" width="0.1359%" height="15" fill="rgb(222,148,37)"/><text x="26.0074%" y="911.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (10 samples, 0.14%)</title><rect x="25.7574%" y="885" width="0.1359%" height="15" fill="rgb(234,67,33)"/><text x="26.0074%" y="895.50"></text></g><g><title>inline tracing_core::dispatcher::get_default::{{closure}} [mount-s3] (10 samples, 0.14%)</title><rect x="25.7574%" y="869" width="0.1359%" height="15" fill="rgb(247,98,35)"/><text x="26.0074%" y="879.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (23 samples, 0.31%)</title><rect x="25.6623%" y="997" width="0.3125%" height="15" fill="rgb(247,138,52)"/><text x="25.9123%" y="1007.50"></text></g><g><title>log::__private_api_log [mount-s3] (16 samples, 0.22%)</title><rect x="25.7574%" y="981" width="0.2174%" height="15" fill="rgb(213,79,30)"/><text x="26.0074%" y="991.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log [mount-s3] (16 samples, 0.22%)</title><rect x="25.7574%" y="965" width="0.2174%" height="15" fill="rgb(246,177,23)"/><text x="26.0074%" y="975.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (24 samples, 0.33%)</title><rect x="25.6623%" y="1013" width="0.3260%" height="15" fill="rgb(230,62,27)"/><text x="25.9123%" y="1023.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (10 samples, 0.14%)</title><rect x="26.2600%" y="981" width="0.1359%" height="15" fill="rgb(216,154,8)"/><text x="26.5100%" y="991.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (73 samples, 0.99%)</title><rect x="25.4721%" y="1045" width="0.9917%" height="15" fill="rgb(244,35,45)"/><text x="25.7221%" y="1055.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (73 samples, 0.99%)</title><rect x="25.4721%" y="1029" width="0.9917%" height="15" fill="rgb(251,115,12)"/><text x="25.7221%" y="1039.50"></text></g><g><title>vsnprintf [libc-2.17.so] (35 samples, 0.48%)</title><rect x="25.9883%" y="1013" width="0.4755%" height="15" fill="rgb(240,54,50)"/><text x="26.2383%" y="1023.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (32 samples, 0.43%)</title><rect x="26.0291%" y="997" width="0.4347%" height="15" fill="rgb(233,84,52)"/><text x="26.2791%" y="1007.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.12%)</title><rect x="26.5996%" y="997" width="0.1223%" height="15" fill="rgb(207,117,47)"/><text x="26.8496%" y="1007.50"></text></g><g><title>__x64_sys_read [linux] (14 samples, 0.19%)</title><rect x="26.7219%" y="997" width="0.1902%" height="15" fill="rgb(249,43,39)"/><text x="26.9719%" y="1007.50"></text></g><g><title>ksys_read [linux] (14 samples, 0.19%)</title><rect x="26.7219%" y="981" width="0.1902%" height="15" fill="rgb(209,38,44)"/><text x="26.9719%" y="991.50"></text></g><g><title>vfs_read [linux] (11 samples, 0.15%)</title><rect x="26.7627%" y="965" width="0.1494%" height="15" fill="rgb(236,212,23)"/><text x="27.0127%" y="975.50"></text></g><g><title>inline s_process_task_pre_queue [mount-s3] (122 samples, 1.66%)</title><rect x="25.3091%" y="1061" width="1.6574%" height="15" fill="rgb(242,79,21)"/><text x="25.5591%" y="1071.50"></text></g><g><title>read [libpthread-2.17.so] (36 samples, 0.49%)</title><rect x="26.4774%" y="1045" width="0.4891%" height="15" fill="rgb(211,96,35)"/><text x="26.7274%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (27 samples, 0.37%)</title><rect x="26.5996%" y="1029" width="0.3668%" height="15" fill="rgb(253,215,40)"/><text x="26.8496%" y="1039.50"></text></g><g><title>do_syscall_64 [linux] (27 samples, 0.37%)</title><rect x="26.5996%" y="1013" width="0.3668%" height="15" fill="rgb(211,81,21)"/><text x="26.8496%" y="1023.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::get_log_level [mount-s3] (25 samples, 0.34%)</title><rect x="27.1295%" y="1045" width="0.3396%" height="15" fill="rgb(208,190,38)"/><text x="27.3795%" y="1055.50"></text></g><g><title>inline log::LevelFilter::to_level [mount-s3] (14 samples, 0.19%)</title><rect x="27.2789%" y="1029" width="0.1902%" height="15" fill="rgb(235,213,38)"/><text x="27.5289%" y="1039.50"></text></g><g><title>log::Level::from_usize [mount-s3] (13 samples, 0.18%)</title><rect x="27.2925%" y="1013" width="0.1766%" height="15" fill="rgb(237,122,38)"/><text x="27.5425%" y="1023.50"></text></g><g><title>mountpoint_s3_crt::common::logging::logger_vtable_get_log_level_fn [mount-s3] (39 samples, 0.53%)</title><rect x="26.9664%" y="1061" width="0.5298%" height="15" fill="rgb(244,218,35)"/><text x="27.2164%" y="1071.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (8 samples, 0.11%)</title><rect x="27.5098%" y="1045" width="0.1087%" height="15" fill="rgb(240,68,47)"/><text x="27.7598%" y="1055.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (10 samples, 0.14%)</title><rect x="27.6185%" y="1029" width="0.1359%" height="15" fill="rgb(210,16,53)"/><text x="27.8685%" y="1039.50"></text></g><g><title>__x64_sys_epoll_ctl [linux] (10 samples, 0.14%)</title><rect x="27.8087%" y="965" width="0.1359%" height="15" fill="rgb(235,124,12)"/><text x="28.0587%" y="975.50"></text></g><g><title>aws_socket_assign_to_event_loop [mount-s3] (25 samples, 0.34%)</title><rect x="27.6185%" y="1045" width="0.3396%" height="15" fill="rgb(224,169,11)"/><text x="27.8685%" y="1055.50"></text></g><g><title>s_subscribe_to_io_events [mount-s3] (14 samples, 0.19%)</title><rect x="27.7680%" y="1029" width="0.1902%" height="15" fill="rgb(250,166,2)"/><text x="28.0180%" y="1039.50"></text></g><g><title>epoll_ctl [libc-2.17.so] (13 samples, 0.18%)</title><rect x="27.7816%" y="1013" width="0.1766%" height="15" fill="rgb(242,216,29)"/><text x="28.0316%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (12 samples, 0.16%)</title><rect x="27.7951%" y="997" width="0.1630%" height="15" fill="rgb(230,116,27)"/><text x="28.0451%" y="1007.50"></text></g><g><title>do_syscall_64 [linux] (12 samples, 0.16%)</title><rect x="27.7951%" y="981" width="0.1630%" height="15" fill="rgb(228,99,48)"/><text x="28.0451%" y="991.50"></text></g><g><title>aws_channel_new [mount-s3] (17 samples, 0.23%)</title><rect x="28.0668%" y="1029" width="0.2309%" height="15" fill="rgb(253,11,6)"/><text x="28.3168%" y="1039.50"></text></g><g><title>s_schedule_task_common [mount-s3] (8 samples, 0.11%)</title><rect x="28.1891%" y="1013" width="0.1087%" height="15" fill="rgb(247,143,39)"/><text x="28.4391%" y="1023.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (15 samples, 0.20%)</title><rect x="28.2978%" y="1029" width="0.2038%" height="15" fill="rgb(236,97,10)"/><text x="28.5478%" y="1039.50"></text></g><g><title>vsnprintf [libc-2.17.so] (10 samples, 0.14%)</title><rect x="28.3657%" y="1013" width="0.1359%" height="15" fill="rgb(233,208,19)"/><text x="28.6157%" y="1023.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (10 samples, 0.14%)</title><rect x="28.3657%" y="997" width="0.1359%" height="15" fill="rgb(216,164,2)"/><text x="28.6157%" y="1007.50"></text></g><g><title>s_on_client_connection_established [mount-s3] (36 samples, 0.49%)</title><rect x="28.0397%" y="1045" width="0.4891%" height="15" fill="rgb(220,129,5)"/><text x="28.2897%" y="1055.50"></text></g><g><title>epoll_ctl [libc-2.17.so] (9 samples, 0.12%)</title><rect x="28.5287%" y="1029" width="0.1223%" height="15" fill="rgb(242,17,10)"/><text x="28.7787%" y="1039.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (12 samples, 0.16%)</title><rect x="28.6510%" y="997" width="0.1630%" height="15" fill="rgb(242,107,0)"/><text x="28.9010%" y="1007.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (12 samples, 0.16%)</title><rect x="28.6510%" y="981" width="0.1630%" height="15" fill="rgb(251,28,31)"/><text x="28.9010%" y="991.50"></text></g><g><title>vsnprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="28.7053%" y="965" width="0.1087%" height="15" fill="rgb(233,223,10)"/><text x="28.9553%" y="975.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="28.7053%" y="949" width="0.1087%" height="15" fill="rgb(215,21,27)"/><text x="28.9553%" y="959.50"></text></g><g><title>s_unsubscribe_from_io_events [mount-s3] (22 samples, 0.30%)</title><rect x="28.5287%" y="1045" width="0.2989%" height="15" fill="rgb(232,23,21)"/><text x="28.7787%" y="1055.50"></text></g><g><title>inline s_schedule_task_now [mount-s3] (13 samples, 0.18%)</title><rect x="28.6510%" y="1029" width="0.1766%" height="15" fill="rgb(244,5,23)"/><text x="28.9010%" y="1039.50"></text></g><g><title>s_schedule_task_common [mount-s3] (13 samples, 0.18%)</title><rect x="28.6510%" y="1013" width="0.1766%" height="15" fill="rgb(226,81,46)"/><text x="28.9010%" y="1023.50"></text></g><g><title>s_on_connection_success [mount-s3] (112 samples, 1.52%)</title><rect x="27.4963%" y="1061" width="1.5215%" height="15" fill="rgb(247,70,30)"/><text x="27.7463%" y="1071.50"></text></g><g><title>s_update_local_endpoint [mount-s3] (14 samples, 0.19%)</title><rect x="28.8276%" y="1045" width="0.1902%" height="15" fill="rgb(212,68,19)"/><text x="29.0776%" y="1055.50"></text></g><g><title>inet_ntop [libc-2.17.so] (8 samples, 0.11%)</title><rect x="28.9091%" y="1029" width="0.1087%" height="15" fill="rgb(240,187,13)"/><text x="29.1591%" y="1039.50"></text></g><g><title>aws_message_pool_acquire [mount-s3] (11 samples, 0.15%)</title><rect x="29.1672%" y="997" width="0.1494%" height="15" fill="rgb(223,113,26)"/><text x="29.4172%" y="1007.50"></text></g><g><title>aws_channel_acquire_message_from_pool [mount-s3] (15 samples, 0.20%)</title><rect x="29.1401%" y="1013" width="0.2038%" height="15" fill="rgb(206,192,2)"/><text x="29.3901%" y="1023.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (9 samples, 0.12%)</title><rect x="29.8329%" y="805" width="0.1223%" height="15" fill="rgb(241,108,4)"/><text x="30.0829%" y="815.50"></text></g><g><title>skb_copy_datagram_iter [linux] (8 samples, 0.11%)</title><rect x="30.0639%" y="805" width="0.1087%" height="15" fill="rgb(247,173,49)"/><text x="30.3139%" y="815.50"></text></g><g><title>__vfs_read [linux] (32 samples, 0.43%)</title><rect x="29.7650%" y="901" width="0.4347%" height="15" fill="rgb(224,114,35)"/><text x="30.0150%" y="911.50"></text></g><g><title>new_sync_read [linux] (32 samples, 0.43%)</title><rect x="29.7650%" y="885" width="0.4347%" height="15" fill="rgb(245,159,27)"/><text x="30.0150%" y="895.50"></text></g><g><title>sock_read_iter [linux] (29 samples, 0.39%)</title><rect x="29.8057%" y="869" width="0.3940%" height="15" fill="rgb(245,172,44)"/><text x="30.0557%" y="879.50"></text></g><g><title>sock_recvmsg [linux] (28 samples, 0.38%)</title><rect x="29.8193%" y="853" width="0.3804%" height="15" fill="rgb(236,23,11)"/><text x="30.0693%" y="863.50"></text></g><g><title>inet_recvmsg [linux] (28 samples, 0.38%)</title><rect x="29.8193%" y="837" width="0.3804%" height="15" fill="rgb(205,117,38)"/><text x="30.0693%" y="847.50"></text></g><g><title>tcp_recvmsg [linux] (27 samples, 0.37%)</title><rect x="29.8329%" y="821" width="0.3668%" height="15" fill="rgb(237,72,25)"/><text x="30.0829%" y="831.50"></text></g><g><title>__x64_sys_read [linux] (39 samples, 0.53%)</title><rect x="29.6971%" y="949" width="0.5298%" height="15" fill="rgb(244,70,9)"/><text x="29.9471%" y="959.50"></text></g><g><title>ksys_read [linux] (39 samples, 0.53%)</title><rect x="29.6971%" y="933" width="0.5298%" height="15" fill="rgb(217,125,39)"/><text x="29.9471%" y="943.50"></text></g><g><title>vfs_read [linux] (34 samples, 0.46%)</title><rect x="29.7650%" y="917" width="0.4619%" height="15" fill="rgb(235,36,10)"/><text x="30.0150%" y="927.50"></text></g><g><title>do_syscall_64 [linux] (41 samples, 0.56%)</title><rect x="29.6835%" y="965" width="0.5570%" height="15" fill="rgb(251,123,47)"/><text x="29.9335%" y="975.50"></text></g><g><title>read [libpthread-2.17.so] (52 samples, 0.71%)</title><rect x="29.5476%" y="997" width="0.7064%" height="15" fill="rgb(221,13,13)"/><text x="29.7976%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (42 samples, 0.57%)</title><rect x="29.6835%" y="981" width="0.5706%" height="15" fill="rgb(238,131,9)"/><text x="29.9335%" y="991.50"></text></g><g><title>aws_socket_read [mount-s3] (65 samples, 0.88%)</title><rect x="29.4389%" y="1013" width="0.8830%" height="15" fill="rgb(211,50,8)"/><text x="29.6889%" y="1023.50"></text></g><g><title>inline s_find_entry [mount-s3] (9 samples, 0.12%)</title><rect x="30.6616%" y="869" width="0.1223%" height="15" fill="rgb(245,182,24)"/><text x="30.9116%" y="879.50"></text></g><g><title>aws_http_str_to_header_name [mount-s3] (20 samples, 0.27%)</title><rect x="30.5801%" y="917" width="0.2717%" height="15" fill="rgb(242,14,37)"/><text x="30.8301%" y="927.50"></text></g><g><title>inline s_find_in_str_to_enum_hash_table [mount-s3] (19 samples, 0.26%)</title><rect x="30.5937%" y="901" width="0.2581%" height="15" fill="rgb(246,228,12)"/><text x="30.8437%" y="911.50"></text></g><g><title>aws_hash_table_find [mount-s3] (19 samples, 0.26%)</title><rect x="30.5937%" y="885" width="0.2581%" height="15" fill="rgb(213,55,15)"/><text x="30.8437%" y="895.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (11 samples, 0.15%)</title><rect x="31.1642%" y="837" width="0.1494%" height="15" fill="rgb(209,9,3)"/><text x="31.4142%" y="847.50"></text></g><g><title>log::__private_api_log [mount-s3] (8 samples, 0.11%)</title><rect x="31.2050%" y="821" width="0.1087%" height="15" fill="rgb(230,59,30)"/><text x="31.4550%" y="831.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (13 samples, 0.18%)</title><rect x="31.1642%" y="853" width="0.1766%" height="15" fill="rgb(209,121,21)"/><text x="31.4142%" y="863.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (27 samples, 0.37%)</title><rect x="31.1642%" y="869" width="0.3668%" height="15" fill="rgb(220,109,13)"/><text x="31.4142%" y="879.50"></text></g><g><title>vsnprintf [libc-2.17.so] (14 samples, 0.19%)</title><rect x="31.3409%" y="853" width="0.1902%" height="15" fill="rgb(232,18,1)"/><text x="31.5909%" y="863.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (12 samples, 0.16%)</title><rect x="31.3680%" y="837" width="0.1630%" height="15" fill="rgb(215,41,42)"/><text x="31.6180%" y="847.50"></text></g><g><title>inline tracing_subscriber::fmt::format::Writer::write_fmt [mount-s3] (11 samples, 0.15%)</title><rect x="31.8571%" y="373" width="0.1494%" height="15" fill="rgb(224,123,36)"/><text x="32.1071%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt [mount-s3] (11 samples, 0.15%)</title><rect x="31.8571%" y="357" width="0.1494%" height="15" fill="rgb(240,125,3)"/><text x="32.1071%" y="367.50"></text></g><g><title>inline core::fmt::Write::write_fmt [mount-s3] (9 samples, 0.12%)</title><rect x="31.8843%" y="341" width="0.1223%" height="15" fill="rgb(205,98,50)"/><text x="32.1343%" y="351.50"></text></g><g><title>core::fmt::write [mount-s3] (9 samples, 0.12%)</title><rect x="31.8843%" y="325" width="0.1223%" height="15" fill="rgb(205,185,37)"/><text x="32.1343%" y="335.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt [mount-s3] (9 samples, 0.12%)</title><rect x="31.8843%" y="309" width="0.1223%" height="15" fill="rgb(238,207,15)"/><text x="32.1343%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt [mount-s3] (8 samples, 0.11%)</title><rect x="31.8978%" y="293" width="0.1087%" height="15" fill="rgb(213,199,42)"/><text x="32.1478%" y="303.50"></text></g><g><title>tracing_subscriber::fmt::format::Format&lt;F,T&gt;::format_timestamp [mount-s3] (16 samples, 0.22%)</title><rect x="31.8435%" y="405" width="0.2174%" height="15" fill="rgb(235,201,11)"/><text x="32.0935%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time [mount-s3] (16 samples, 0.22%)</title><rect x="31.8435%" y="389" width="0.2174%" height="15" fill="rgb(207,46,11)"/><text x="32.0935%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event [mount-s3] (33 samples, 0.45%)</title><rect x="31.6669%" y="421" width="0.4483%" height="15" fill="rgb(241,35,35)"/><text x="31.9169%" y="431.50"></text></g><g><title>__ext4_journal_start_sb [linux:ext4] (8 samples, 0.11%)</title><rect x="32.2103%" y="133" width="0.1087%" height="15" fill="rgb(243,32,47)"/><text x="32.4603%" y="143.50"></text></g><g><title>ext4_dirty_inode [linux:ext4] (10 samples, 0.14%)</title><rect x="32.2103%" y="149" width="0.1359%" height="15" fill="rgb(247,202,23)"/><text x="32.4603%" y="159.50"></text></g><g><title>__mark_inode_dirty [linux] (11 samples, 0.15%)</title><rect x="32.2103%" y="165" width="0.1494%" height="15" fill="rgb(219,102,11)"/><text x="32.4603%" y="175.50"></text></g><g><title>file_update_time [linux] (13 samples, 0.18%)</title><rect x="32.2103%" y="197" width="0.1766%" height="15" fill="rgb(243,110,44)"/><text x="32.4603%" y="207.50"></text></g><g><title>generic_update_time [linux] (13 samples, 0.18%)</title><rect x="32.2103%" y="181" width="0.1766%" height="15" fill="rgb(222,74,54)"/><text x="32.4603%" y="191.50"></text></g><g><title>ext4_da_write_begin [linux:ext4] (10 samples, 0.14%)</title><rect x="32.3869%" y="181" width="0.1359%" height="15" fill="rgb(216,99,12)"/><text x="32.6369%" y="191.50"></text></g><g><title>generic_perform_write [linux] (15 samples, 0.20%)</title><rect x="32.3869%" y="197" width="0.2038%" height="15" fill="rgb(226,22,26)"/><text x="32.6369%" y="207.50"></text></g><g><title>__generic_file_write_iter [linux] (30 samples, 0.41%)</title><rect x="32.1967%" y="213" width="0.4076%" height="15" fill="rgb(217,163,10)"/><text x="32.4467%" y="223.50"></text></g><g><title>ext4_file_write_iter [linux:ext4] (31 samples, 0.42%)</title><rect x="32.1967%" y="229" width="0.4211%" height="15" fill="rgb(213,25,53)"/><text x="32.4467%" y="239.50"></text></g><g><title>__vfs_write [linux] (32 samples, 0.43%)</title><rect x="32.1967%" y="261" width="0.4347%" height="15" fill="rgb(252,105,26)"/><text x="32.4467%" y="271.50"></text></g><g><title>new_sync_write [linux] (32 samples, 0.43%)</title><rect x="32.1967%" y="245" width="0.4347%" height="15" fill="rgb(220,39,43)"/><text x="32.4467%" y="255.50"></text></g><g><title>std::io::Write::write_all [mount-s3] (40 samples, 0.54%)</title><rect x="32.1152%" y="421" width="0.5434%" height="15" fill="rgb(229,68,48)"/><text x="32.3652%" y="431.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write [mount-s3] (40 samples, 0.54%)</title><rect x="32.1152%" y="405" width="0.5434%" height="15" fill="rgb(252,8,32)"/><text x="32.3652%" y="415.50"></text></g><g><title>inline std::sys::unix::fs::File::write [mount-s3] (40 samples, 0.54%)</title><rect x="32.1152%" y="389" width="0.5434%" height="15" fill="rgb(223,20,43)"/><text x="32.3652%" y="399.50"></text></g><g><title>inline std::sys::unix::fd::FileDesc::write [mount-s3] (40 samples, 0.54%)</title><rect x="32.1152%" y="373" width="0.5434%" height="15" fill="rgb(229,81,49)"/><text x="32.3652%" y="383.50"></text></g><g><title>write [libpthread-2.17.so] (40 samples, 0.54%)</title><rect x="32.1152%" y="357" width="0.5434%" height="15" fill="rgb(236,28,36)"/><text x="32.3652%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (37 samples, 0.50%)</title><rect x="32.1560%" y="341" width="0.5026%" height="15" fill="rgb(249,185,26)"/><text x="32.4060%" y="351.50"></text></g><g><title>do_syscall_64 [linux] (37 samples, 0.50%)</title><rect x="32.1560%" y="325" width="0.5026%" height="15" fill="rgb(249,174,33)"/><text x="32.4060%" y="335.50"></text></g><g><title>__x64_sys_write [linux] (37 samples, 0.50%)</title><rect x="32.1560%" y="309" width="0.5026%" height="15" fill="rgb(233,201,37)"/><text x="32.4060%" y="319.50"></text></g><g><title>ksys_write [linux] (37 samples, 0.50%)</title><rect x="32.1560%" y="293" width="0.5026%" height="15" fill="rgb(221,78,26)"/><text x="32.4060%" y="303.50"></text></g><g><title>vfs_write [linux] (37 samples, 0.50%)</title><rect x="32.1560%" y="277" width="0.5026%" height="15" fill="rgb(250,127,30)"/><text x="32.4060%" y="287.50"></text></g><g><title>inline tracing_core::dispatcher::Dispatch::event [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="661" width="1.0189%" height="15" fill="rgb(230,49,44)"/><text x="31.9033%" y="671.50"></text></g><g><title>inline &lt;alloc::sync::Arc&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::event [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="645" width="1.0189%" height="15" fill="rgb(229,67,23)"/><text x="31.9033%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="629" width="1.0189%" height="15" fill="rgb(249,83,47)"/><text x="31.9033%" y="639.50"></text></g><g><title>inline &lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="613" width="1.0189%" height="15" fill="rgb(215,43,3)"/><text x="31.9033%" y="623.50"></text></g><g><title>inline &lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="597" width="1.0189%" height="15" fill="rgb(238,154,13)"/><text x="31.9033%" y="607.50"></text></g><g><title>inline tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="581" width="1.0189%" height="15" fill="rgb(219,56,2)"/><text x="31.9033%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="565" width="1.0189%" height="15" fill="rgb(233,0,4)"/><text x="31.9033%" y="575.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="549" width="1.0189%" height="15" fill="rgb(235,30,7)"/><text x="31.9033%" y="559.50"></text></g><g><title>inline tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable::{{closure}} [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="533" width="1.0189%" height="15" fill="rgb(250,79,13)"/><text x="31.9033%" y="543.50"></text></g><g><title>inline tracing_subscriber::filter::layer_filters::FilterState::did_enable [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="517" width="1.0189%" height="15" fill="rgb(211,146,34)"/><text x="31.9033%" y="527.50"></text></g><g><title>inline &lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::{{closure}} [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="501" width="1.0189%" height="15" fill="rgb(228,22,38)"/><text x="31.9033%" y="511.50"></text></g><g><title>inline &lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="485" width="1.0189%" height="15" fill="rgb(235,168,5)"/><text x="31.9033%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with [mount-s3] (75 samples, 1.02%)</title><rect x="31.6533%" y="469" width="1.0189%" height="15" fill="rgb(221,155,16)"/><text x="31.9033%" y="479.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (74 samples, 1.01%)</title><rect x="31.6669%" y="453" width="1.0053%" height="15" fill="rgb(215,215,53)"/><text x="31.9169%" y="463.50"></text></g><g><title>inline &lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::{{closure}} [mount-s3] (74 samples, 1.01%)</title><rect x="31.6669%" y="437" width="1.0053%" height="15" fill="rgb(223,4,10)"/><text x="31.9169%" y="447.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (81 samples, 1.10%)</title><rect x="31.5854%" y="789" width="1.1004%" height="15" fill="rgb(234,103,6)"/><text x="31.8354%" y="799.50"></text></g><g><title>log::__private_api_log [mount-s3] (80 samples, 1.09%)</title><rect x="31.5990%" y="773" width="1.0868%" height="15" fill="rgb(227,97,0)"/><text x="31.8490%" y="783.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log [mount-s3] (79 samples, 1.07%)</title><rect x="31.6126%" y="757" width="1.0732%" height="15" fill="rgb(234,150,53)"/><text x="31.8626%" y="767.50"></text></g><g><title>inline tracing_log::dispatch_record [mount-s3] (78 samples, 1.06%)</title><rect x="31.6261%" y="741" width="1.0596%" height="15" fill="rgb(228,201,54)"/><text x="31.8761%" y="751.50"></text></g><g><title>tracing_core::dispatcher::get_default [mount-s3] (78 samples, 1.06%)</title><rect x="31.6261%" y="725" width="1.0596%" height="15" fill="rgb(222,22,37)"/><text x="31.8761%" y="735.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (78 samples, 1.06%)</title><rect x="31.6261%" y="709" width="1.0596%" height="15" fill="rgb(237,53,32)"/><text x="31.8761%" y="719.50"></text></g><g><title>inline tracing_core::dispatcher::get_default::{{closure}} [mount-s3] (78 samples, 1.06%)</title><rect x="31.6261%" y="693" width="1.0596%" height="15" fill="rgb(233,25,53)"/><text x="31.8761%" y="703.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} [mount-s3] (78 samples, 1.06%)</title><rect x="31.6261%" y="677" width="1.0596%" height="15" fill="rgb(210,40,34)"/><text x="31.8761%" y="687.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (82 samples, 1.11%)</title><rect x="31.5854%" y="805" width="1.1140%" height="15" fill="rgb(241,220,44)"/><text x="31.8354%" y="815.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (11 samples, 0.15%)</title><rect x="32.7809%" y="773" width="0.1494%" height="15" fill="rgb(235,28,35)"/><text x="33.0309%" y="783.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (105 samples, 1.43%)</title><rect x="31.5446%" y="821" width="1.4264%" height="15" fill="rgb(210,56,17)"/><text x="31.7946%" y="831.50"></text></g><g><title>vsnprintf [libc-2.17.so] (20 samples, 0.27%)</title><rect x="32.6994%" y="805" width="0.2717%" height="15" fill="rgb(224,130,29)"/><text x="32.9494%" y="815.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (18 samples, 0.24%)</title><rect x="32.7265%" y="789" width="0.2445%" height="15" fill="rgb(235,212,8)"/><text x="32.9765%" y="799.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (9 samples, 0.12%)</title><rect x="33.0118%" y="741" width="0.1223%" height="15" fill="rgb(223,33,50)"/><text x="33.2618%" y="751.50"></text></g><g><title>aws_channel_shutdown [mount-s3] (11 samples, 0.15%)</title><rect x="32.9982%" y="805" width="0.1494%" height="15" fill="rgb(219,149,13)"/><text x="33.2482%" y="815.50"></text></g><g><title>inline s_channel_shutdown [mount-s3] (11 samples, 0.15%)</title><rect x="32.9982%" y="789" width="0.1494%" height="15" fill="rgb(250,156,29)"/><text x="33.2482%" y="799.50"></text></g><g><title>s_schedule_task_common [mount-s3] (10 samples, 0.14%)</title><rect x="33.0118%" y="773" width="0.1359%" height="15" fill="rgb(216,193,19)"/><text x="33.2618%" y="783.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (10 samples, 0.14%)</title><rect x="33.0118%" y="757" width="0.1359%" height="15" fill="rgb(216,135,14)"/><text x="33.2618%" y="767.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (10 samples, 0.14%)</title><rect x="33.3243%" y="709" width="0.1359%" height="15" fill="rgb(241,47,5)"/><text x="33.5743%" y="719.50"></text></g><g><title>aws_http_connection_manager_release_connection [mount-s3] (26 samples, 0.35%)</title><rect x="33.1477%" y="805" width="0.3532%" height="15" fill="rgb(233,42,35)"/><text x="33.3977%" y="815.50"></text></g><g><title>s_aws_http_connection_manager_execute_transaction [mount-s3] (20 samples, 0.27%)</title><rect x="33.2292%" y="789" width="0.2717%" height="15" fill="rgb(231,13,6)"/><text x="33.4792%" y="799.50"></text></g><g><title>inline s_aws_http_connection_manager_log_snapshot [mount-s3] (18 samples, 0.24%)</title><rect x="33.2564%" y="773" width="0.2445%" height="15" fill="rgb(207,181,40)"/><text x="33.5064%" y="783.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (18 samples, 0.24%)</title><rect x="33.2564%" y="757" width="0.2445%" height="15" fill="rgb(254,173,49)"/><text x="33.5064%" y="767.50"></text></g><g><title>vsnprintf [libc-2.17.so] (16 samples, 0.22%)</title><rect x="33.2835%" y="741" width="0.2174%" height="15" fill="rgb(221,1,38)"/><text x="33.5335%" y="751.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (16 samples, 0.22%)</title><rect x="33.2835%" y="725" width="0.2174%" height="15" fill="rgb(206,124,46)"/><text x="33.5335%" y="735.50"></text></g><g><title>aws_http_headers_clear [mount-s3] (9 samples, 0.12%)</title><rect x="33.5552%" y="709" width="0.1223%" height="15" fill="rgb(249,21,11)"/><text x="33.8052%" y="719.50"></text></g><g><title>inline s_s3_request_clean_up_send_data_message [mount-s3] (12 samples, 0.16%)</title><rect x="33.5281%" y="757" width="0.1630%" height="15" fill="rgb(222,201,40)"/><text x="33.7781%" y="767.50"></text></g><g><title>aws_http_message_release [mount-s3] (12 samples, 0.16%)</title><rect x="33.5281%" y="741" width="0.1630%" height="15" fill="rgb(235,61,29)"/><text x="33.7781%" y="751.50"></text></g><g><title>aws_http_headers_release [mount-s3] (10 samples, 0.14%)</title><rect x="33.5552%" y="725" width="0.1359%" height="15" fill="rgb(219,207,3)"/><text x="33.8052%" y="735.50"></text></g><g><title>aws_ref_count_release [mount-s3] (15 samples, 0.20%)</title><rect x="33.5009%" y="805" width="0.2038%" height="15" fill="rgb(222,56,46)"/><text x="33.7509%" y="815.50"></text></g><g><title>s_s3_request_destroy [mount-s3] (14 samples, 0.19%)</title><rect x="33.5145%" y="789" width="0.1902%" height="15" fill="rgb(239,76,54)"/><text x="33.7645%" y="799.50"></text></g><g><title>aws_s3_request_clean_up_send_data [mount-s3] (14 samples, 0.19%)</title><rect x="33.5145%" y="773" width="0.1902%" height="15" fill="rgb(231,124,27)"/><text x="33.7645%" y="783.50"></text></g><g><title>s_s3_meta_request_default_request_finished [mount-s3] (15 samples, 0.20%)</title><rect x="33.8405%" y="805" width="0.2038%" height="15" fill="rgb(249,195,6)"/><text x="34.0905%" y="815.50"></text></g><g><title>mountpoint_s3_crt::s3::client::meta_request_headers_callback [mount-s3] (9 samples, 0.12%)</title><rect x="33.9220%" y="789" width="0.1223%" height="15" fill="rgb(237,174,47)"/><text x="34.1720%" y="799.50"></text></g><g><title>inline &lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut [mount-s3] (9 samples, 0.12%)</title><rect x="33.9220%" y="773" width="0.1223%" height="15" fill="rgb(206,201,31)"/><text x="34.1720%" y="783.50"></text></g><g><title>mountpoint_s3_client::s3_crt_client::S3CrtClient::make_meta_request::{{closure}} [mount-s3] (9 samples, 0.12%)</title><rect x="33.9220%" y="757" width="0.1223%" height="15" fill="rgb(231,57,52)"/><text x="34.1720%" y="767.50"></text></g><g><title>s_standard_retry_strategy_release_token [mount-s3] (9 samples, 0.12%)</title><rect x="34.0715%" y="805" width="0.1223%" height="15" fill="rgb(248,177,22)"/><text x="34.3215%" y="815.50"></text></g><g><title>aws_s3_client_notify_connection_finished [mount-s3] (96 samples, 1.30%)</title><rect x="32.9846%" y="821" width="1.3042%" height="15" fill="rgb(215,211,37)"/><text x="33.2346%" y="831.50"></text></g><g><title>inline s_mark_done [mount-s3] (240 samples, 3.26%)</title><rect x="31.0420%" y="917" width="3.2604%" height="15" fill="rgb(241,128,51)"/><text x="31.2920%" y="927.50">inl..</text></g><g><title>s_decoder_on_done [mount-s3] (240 samples, 3.26%)</title><rect x="31.0420%" y="901" width="3.2604%" height="15" fill="rgb(227,165,31)"/><text x="31.2920%" y="911.50">s_d..</text></g><g><title>s_stream_complete [mount-s3] (231 samples, 3.14%)</title><rect x="31.1642%" y="885" width="3.1382%" height="15" fill="rgb(228,167,24)"/><text x="31.4142%" y="895.50">s_s..</text></g><g><title>s_s3_meta_request_stream_complete [mount-s3] (204 samples, 2.77%)</title><rect x="31.5310%" y="869" width="2.7714%" height="15" fill="rgb(228,143,12)"/><text x="31.7810%" y="879.50">s_..</text></g><g><title>inline s_s3_meta_request_send_request_finish [mount-s3] (203 samples, 2.76%)</title><rect x="31.5446%" y="853" width="2.7578%" height="15" fill="rgb(249,149,8)"/><text x="31.7946%" y="863.50">in..</text></g><g><title>s_s3_meta_request_send_request_finish_helper [mount-s3] (203 samples, 2.76%)</title><rect x="31.5446%" y="837" width="2.7578%" height="15" fill="rgb(243,35,44)"/><text x="31.7946%" y="847.50">s_..</text></g><g><title>aws_mem_acquire [mount-s3] (19 samples, 0.26%)</title><rect x="34.4926%" y="837" width="0.2581%" height="15" fill="rgb(246,89,9)"/><text x="34.7426%" y="847.50"></text></g><g><title>s_default_malloc [mount-s3] (19 samples, 0.26%)</title><rect x="34.4926%" y="821" width="0.2581%" height="15" fill="rgb(233,213,13)"/><text x="34.7426%" y="831.50"></text></g><g><title>posix_memalign [libc-2.17.so] (19 samples, 0.26%)</title><rect x="34.4926%" y="805" width="0.2581%" height="15" fill="rgb(233,141,41)"/><text x="34.7426%" y="815.50"></text></g><g><title>__libc_malloc [libc-2.17.so] (17 samples, 0.23%)</title><rect x="34.5198%" y="789" width="0.2309%" height="15" fill="rgb(239,167,4)"/><text x="34.7698%" y="799.50"></text></g><g><title>_int_malloc [libc-2.17.so] (15 samples, 0.20%)</title><rect x="34.5469%" y="773" width="0.2038%" height="15" fill="rgb(209,217,16)"/><text x="34.7969%" y="783.50"></text></g><g><title>aws_http_headers_add [mount-s3] (27 samples, 0.37%)</title><rect x="34.4247%" y="885" width="0.3668%" height="15" fill="rgb(219,88,35)"/><text x="34.6747%" y="895.50"></text></g><g><title>aws_http_headers_add_header [mount-s3] (27 samples, 0.37%)</title><rect x="34.4247%" y="869" width="0.3668%" height="15" fill="rgb(220,193,23)"/><text x="34.6747%" y="879.50"></text></g><g><title>s_http_headers_add_header_impl [mount-s3] (26 samples, 0.35%)</title><rect x="34.4383%" y="853" width="0.3532%" height="15" fill="rgb(230,90,52)"/><text x="34.6883%" y="863.50"></text></g><g><title>s_linestate_header [mount-s3] (325 samples, 4.42%)</title><rect x="30.5393%" y="933" width="4.4152%" height="15" fill="rgb(252,106,19)"/><text x="30.7893%" y="943.50">s_lin..</text></g><g><title>s_decoder_on_header [mount-s3] (48 samples, 0.65%)</title><rect x="34.3024%" y="917" width="0.6521%" height="15" fill="rgb(206,74,20)"/><text x="34.5524%" y="927.50"></text></g><g><title>s_s3_meta_request_incoming_headers [mount-s3] (45 samples, 0.61%)</title><rect x="34.3432%" y="901" width="0.6113%" height="15" fill="rgb(230,138,44)"/><text x="34.5932%" y="911.50"></text></g><g><title>aws_http_headers_new [mount-s3] (12 samples, 0.16%)</title><rect x="34.7915%" y="885" width="0.1630%" height="15" fill="rgb(235,182,43)"/><text x="35.0415%" y="895.50"></text></g><g><title>s_state_getline [mount-s3] (339 samples, 4.61%)</title><rect x="30.4714%" y="949" width="4.6054%" height="15" fill="rgb(242,16,51)"/><text x="30.7214%" y="959.50">s_sta..</text></g><g><title>s_linestate_response [mount-s3] (9 samples, 0.12%)</title><rect x="34.9545%" y="933" width="0.1223%" height="15" fill="rgb(248,9,4)"/><text x="35.2045%" y="943.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log [mount-s3] (8 samples, 0.11%)</title><rect x="35.1447%" y="821" width="0.1087%" height="15" fill="rgb(210,31,22)"/><text x="35.3947%" y="831.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (9 samples, 0.12%)</title><rect x="35.1447%" y="853" width="0.1223%" height="15" fill="rgb(239,54,39)"/><text x="35.3947%" y="863.50"></text></g><g><title>log::__private_api_log [mount-s3] (9 samples, 0.12%)</title><rect x="35.1447%" y="837" width="0.1223%" height="15" fill="rgb(230,99,41)"/><text x="35.3947%" y="847.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (11 samples, 0.15%)</title><rect x="35.1447%" y="869" width="0.1494%" height="15" fill="rgb(253,106,12)"/><text x="35.3947%" y="879.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (27 samples, 0.37%)</title><rect x="35.1175%" y="885" width="0.3668%" height="15" fill="rgb(213,46,41)"/><text x="35.3675%" y="895.50"></text></g><g><title>vsnprintf [libc-2.17.so] (14 samples, 0.19%)</title><rect x="35.2941%" y="869" width="0.1902%" height="15" fill="rgb(215,133,35)"/><text x="35.5441%" y="879.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (14 samples, 0.19%)</title><rect x="35.2941%" y="853" width="0.1902%" height="15" fill="rgb(213,28,5)"/><text x="35.5441%" y="863.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (9 samples, 0.12%)</title><rect x="35.5386%" y="837" width="0.1223%" height="15" fill="rgb(215,77,49)"/><text x="35.7886%" y="847.50"></text></g><g><title>s_aws_http_connection_manager_execute_transaction [mount-s3] (12 samples, 0.16%)</title><rect x="35.7968%" y="805" width="0.1630%" height="15" fill="rgb(248,100,22)"/><text x="36.0468%" y="815.50"></text></g><g><title>inline s_aws_http_connection_manager_log_snapshot [mount-s3] (12 samples, 0.16%)</title><rect x="35.7968%" y="789" width="0.1630%" height="15" fill="rgb(208,67,9)"/><text x="36.0468%" y="799.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (12 samples, 0.16%)</title><rect x="35.7968%" y="773" width="0.1630%" height="15" fill="rgb(219,133,21)"/><text x="36.0468%" y="783.50"></text></g><g><title>vsnprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="35.8511%" y="757" width="0.1087%" height="15" fill="rgb(246,46,29)"/><text x="36.1011%" y="767.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="35.8511%" y="741" width="0.1087%" height="15" fill="rgb(246,185,52)"/><text x="36.1011%" y="751.50"></text></g><g><title>aws_http_connection_manager_release_connection [mount-s3] (21 samples, 0.29%)</title><rect x="35.7017%" y="821" width="0.2853%" height="15" fill="rgb(252,136,11)"/><text x="35.9517%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (37 samples, 0.50%)</title><rect x="36.3266%" y="645" width="0.5026%" height="15" fill="rgb(219,138,53)"/><text x="36.5766%" y="655.50"></text></g><g><title>__vfs_write [linux] (38 samples, 0.52%)</title><rect x="36.3266%" y="677" width="0.5162%" height="15" fill="rgb(211,51,23)"/><text x="36.5766%" y="687.50"></text></g><g><title>eventfd_write [linux] (38 samples, 0.52%)</title><rect x="36.3266%" y="661" width="0.5162%" height="15" fill="rgb(247,221,28)"/><text x="36.5766%" y="671.50"></text></g><g><title>__x64_sys_write [linux] (41 samples, 0.56%)</title><rect x="36.2994%" y="725" width="0.5570%" height="15" fill="rgb(251,222,45)"/><text x="36.5494%" y="735.50"></text></g><g><title>ksys_write [linux] (41 samples, 0.56%)</title><rect x="36.2994%" y="709" width="0.5570%" height="15" fill="rgb(217,162,53)"/><text x="36.5494%" y="719.50"></text></g><g><title>vfs_write [linux] (40 samples, 0.54%)</title><rect x="36.3130%" y="693" width="0.5434%" height="15" fill="rgb(229,93,14)"/><text x="36.5630%" y="703.50"></text></g><g><title>aws_s3_meta_request_stream_response_body_synced [mount-s3] (58 samples, 0.79%)</title><rect x="36.0821%" y="805" width="0.7879%" height="15" fill="rgb(209,67,49)"/><text x="36.3321%" y="815.50"></text></g><g><title>s_schedule_task_common [mount-s3] (48 samples, 0.65%)</title><rect x="36.2179%" y="789" width="0.6521%" height="15" fill="rgb(213,87,29)"/><text x="36.4679%" y="799.50"></text></g><g><title>write [libpthread-2.17.so] (47 samples, 0.64%)</title><rect x="36.2315%" y="773" width="0.6385%" height="15" fill="rgb(205,151,52)"/><text x="36.4815%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (44 samples, 0.60%)</title><rect x="36.2722%" y="757" width="0.5977%" height="15" fill="rgb(253,215,39)"/><text x="36.5222%" y="767.50"></text></g><g><title>do_syscall_64 [linux] (42 samples, 0.57%)</title><rect x="36.2994%" y="741" width="0.5706%" height="15" fill="rgb(221,220,41)"/><text x="36.5494%" y="751.50"></text></g><g><title>s_s3_meta_request_default_request_finished [mount-s3] (68 samples, 0.92%)</title><rect x="36.0821%" y="821" width="0.9238%" height="15" fill="rgb(218,133,21)"/><text x="36.3321%" y="831.50"></text></g><g><title>mountpoint_s3_crt::s3::client::meta_request_headers_callback [mount-s3] (10 samples, 0.14%)</title><rect x="36.8700%" y="805" width="0.1359%" height="15" fill="rgb(221,193,43)"/><text x="37.1200%" y="815.50"></text></g><g><title>inline &lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut [mount-s3] (9 samples, 0.12%)</title><rect x="36.8836%" y="789" width="0.1223%" height="15" fill="rgb(240,128,52)"/><text x="37.1336%" y="799.50"></text></g><g><title>mountpoint_s3_client::s3_crt_client::S3CrtClient::make_meta_request::{{closure}} [mount-s3] (9 samples, 0.12%)</title><rect x="36.8836%" y="773" width="0.1223%" height="15" fill="rgb(253,114,12)"/><text x="37.1336%" y="783.50"></text></g><g><title>s_standard_retry_strategy_record_success [mount-s3] (13 samples, 0.18%)</title><rect x="37.0058%" y="821" width="0.1766%" height="15" fill="rgb(215,223,47)"/><text x="37.2558%" y="831.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (13 samples, 0.18%)</title><rect x="37.0058%" y="805" width="0.1766%" height="15" fill="rgb(248,225,23)"/><text x="37.2558%" y="815.50"></text></g><g><title>vsnprintf [libc-2.17.so] (11 samples, 0.15%)</title><rect x="37.0330%" y="789" width="0.1494%" height="15" fill="rgb(250,108,0)"/><text x="37.2830%" y="799.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (11 samples, 0.15%)</title><rect x="37.0330%" y="773" width="0.1494%" height="15" fill="rgb(228,208,7)"/><text x="37.2830%" y="783.50"></text></g><g><title>aws_s3_client_notify_connection_finished [mount-s3] (113 samples, 1.54%)</title><rect x="35.6609%" y="837" width="1.5351%" height="15" fill="rgb(244,45,10)"/><text x="35.9109%" y="847.50"></text></g><g><title>s_advance_to_closing_tag [mount-s3] (8 samples, 0.11%)</title><rect x="37.2775%" y="789" width="0.1087%" height="15" fill="rgb(207,125,25)"/><text x="37.5275%" y="799.50"></text></g><g><title>inline s_mark_done [mount-s3] (171 samples, 2.32%)</title><rect x="35.0768%" y="933" width="2.3231%" height="15" fill="rgb(210,195,18)"/><text x="35.3268%" y="943.50">i..</text></g><g><title>s_decoder_on_done [mount-s3] (171 samples, 2.32%)</title><rect x="35.0768%" y="917" width="2.3231%" height="15" fill="rgb(249,80,12)"/><text x="35.3268%" y="927.50">s..</text></g><g><title>s_stream_complete [mount-s3] (168 samples, 2.28%)</title><rect x="35.1175%" y="901" width="2.2823%" height="15" fill="rgb(221,65,9)"/><text x="35.3675%" y="911.50">s..</text></g><g><title>s_s3_meta_request_stream_complete [mount-s3] (140 samples, 1.90%)</title><rect x="35.4979%" y="885" width="1.9019%" height="15" fill="rgb(235,49,36)"/><text x="35.7479%" y="895.50">s..</text></g><g><title>inline s_s3_meta_request_send_request_finish [mount-s3] (139 samples, 1.89%)</title><rect x="35.5115%" y="869" width="1.8883%" height="15" fill="rgb(225,32,20)"/><text x="35.7615%" y="879.50">i..</text></g><g><title>s_s3_meta_request_send_request_finish_helper [mount-s3] (139 samples, 1.89%)</title><rect x="35.5115%" y="853" width="1.8883%" height="15" fill="rgb(215,141,46)"/><text x="35.7615%" y="863.50">s..</text></g><g><title>inline s_s3_meta_request_error_code_from_response_body [mount-s3] (15 samples, 0.20%)</title><rect x="37.1960%" y="837" width="0.2038%" height="15" fill="rgb(250,160,47)"/><text x="37.4460%" y="847.50"></text></g><g><title>aws_xml_get_top_level_tag_with_root_name [mount-s3] (15 samples, 0.20%)</title><rect x="37.1960%" y="821" width="0.2038%" height="15" fill="rgb(216,222,40)"/><text x="37.4460%" y="831.50"></text></g><g><title>s_node_next_sibling [mount-s3] (10 samples, 0.14%)</title><rect x="37.2640%" y="805" width="0.1359%" height="15" fill="rgb(234,217,39)"/><text x="37.5140%" y="815.50"></text></g><g><title>aws_byte_buf_init [mount-s3] (16 samples, 0.22%)</title><rect x="37.4134%" y="901" width="0.2174%" height="15" fill="rgb(207,178,40)"/><text x="37.6634%" y="911.50"></text></g><g><title>aws_mem_acquire [mount-s3] (16 samples, 0.22%)</title><rect x="37.4134%" y="885" width="0.2174%" height="15" fill="rgb(221,136,13)"/><text x="37.6634%" y="895.50"></text></g><g><title>s_default_malloc [mount-s3] (16 samples, 0.22%)</title><rect x="37.4134%" y="869" width="0.2174%" height="15" fill="rgb(249,199,10)"/><text x="37.6634%" y="879.50"></text></g><g><title>posix_memalign [libc-2.17.so] (16 samples, 0.22%)</title><rect x="37.4134%" y="853" width="0.2174%" height="15" fill="rgb(249,222,13)"/><text x="37.6634%" y="863.50"></text></g><g><title>__libc_malloc [libc-2.17.so] (16 samples, 0.22%)</title><rect x="37.4134%" y="837" width="0.2174%" height="15" fill="rgb(244,185,38)"/><text x="37.6634%" y="847.50"></text></g><g><title>_int_malloc [libc-2.17.so] (16 samples, 0.22%)</title><rect x="37.4134%" y="821" width="0.2174%" height="15" fill="rgb(236,202,9)"/><text x="37.6634%" y="831.50"></text></g><g><title>malloc_consolidate [libc-2.17.so] (14 samples, 0.19%)</title><rect x="37.4406%" y="805" width="0.1902%" height="15" fill="rgb(250,229,37)"/><text x="37.6906%" y="815.50"></text></g><g><title>aws_h1_decode [mount-s3] (531 samples, 7.21%)</title><rect x="30.4442%" y="965" width="7.2137%" height="15" fill="rgb(206,174,23)"/><text x="30.6942%" y="975.50">aws_h1_dec..</text></g><g><title>s_state_unchunked_body [mount-s3] (190 samples, 2.58%)</title><rect x="35.0768%" y="949" width="2.5812%" height="15" fill="rgb(211,33,43)"/><text x="35.3268%" y="959.50">s_..</text></g><g><title>s_decoder_on_body [mount-s3] (19 samples, 0.26%)</title><rect x="37.3998%" y="933" width="0.2581%" height="15" fill="rgb(245,58,50)"/><text x="37.6498%" y="943.50"></text></g><g><title>s_s3_meta_request_incoming_body [mount-s3] (18 samples, 0.24%)</title><rect x="37.4134%" y="917" width="0.2445%" height="15" fill="rgb(244,68,36)"/><text x="37.6634%" y="927.50"></text></g><g><title>inline s_try_process_next_stream_read_message [mount-s3] (543 samples, 7.38%)</title><rect x="30.3899%" y="981" width="7.3767%" height="15" fill="rgb(232,229,15)"/><text x="30.6399%" y="991.50">inline s_t..</text></g><g><title>s_on_readable_notification [mount-s3] (639 samples, 8.68%)</title><rect x="29.1129%" y="1045" width="8.6809%" height="15" fill="rgb(254,30,23)"/><text x="29.3629%" y="1055.50">s_on_readabl..</text></g><g><title>s_do_read [mount-s3] (638 samples, 8.67%)</title><rect x="29.1265%" y="1029" width="8.6673%" height="15" fill="rgb(235,160,14)"/><text x="29.3765%" y="1039.50">s_do_read [m..</text></g><g><title>s_handler_process_read_message [mount-s3] (550 samples, 7.47%)</title><rect x="30.3220%" y="1013" width="7.4718%" height="15" fill="rgb(212,155,44)"/><text x="30.5720%" y="1023.50">s_handler_..</text></g><g><title>aws_h1_connection_try_process_read_messages [mount-s3] (546 samples, 7.42%)</title><rect x="30.3763%" y="997" width="7.4175%" height="15" fill="rgb(226,2,50)"/><text x="30.6263%" y="1007.50">aws_h1_con..</text></g><g><title>s_on_socket_io_event [mount-s3] (650 samples, 8.83%)</title><rect x="29.0178%" y="1061" width="8.8303%" height="15" fill="rgb(234,177,6)"/><text x="29.2678%" y="1071.50">s_on_socket_..</text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (16 samples, 0.22%)</title><rect x="38.4051%" y="1029" width="0.2174%" height="15" fill="rgb(217,24,9)"/><text x="38.6551%" y="1039.50"></text></g><g><title>vsnprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="38.5002%" y="1013" width="0.1223%" height="15" fill="rgb(220,13,46)"/><text x="38.7502%" y="1023.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="38.5002%" y="997" width="0.1223%" height="15" fill="rgb(239,221,27)"/><text x="38.7502%" y="1007.50"></text></g><g><title>aws_channel_slot_on_handler_shutdown_complete [mount-s3] (24 samples, 0.33%)</title><rect x="38.4051%" y="1045" width="0.3260%" height="15" fill="rgb(222,198,25)"/><text x="38.6551%" y="1055.50"></text></g><g><title>aws_ref_count_release [mount-s3] (14 samples, 0.19%)</title><rect x="38.7855%" y="1045" width="0.1902%" height="15" fill="rgb(211,99,13)"/><text x="39.0355%" y="1055.50"></text></g><g><title>s_client_connection_args_destroy [mount-s3] (12 samples, 0.16%)</title><rect x="38.8127%" y="1029" width="0.1630%" height="15" fill="rgb(232,111,31)"/><text x="39.0627%" y="1039.50"></text></g><g><title>inline core::fmt::Write::write_fmt [mount-s3] (10 samples, 0.14%)</title><rect x="39.2474%" y="981" width="0.1359%" height="15" fill="rgb(245,82,37)"/><text x="39.4974%" y="991.50"></text></g><g><title>core::fmt::write [mount-s3] (10 samples, 0.14%)</title><rect x="39.2474%" y="965" width="0.1359%" height="15" fill="rgb(227,149,46)"/><text x="39.4974%" y="975.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str [mount-s3] (10 samples, 0.14%)</title><rect x="39.2474%" y="949" width="0.1359%" height="15" fill="rgb(218,36,50)"/><text x="39.4974%" y="959.50"></text></g><g><title>inline &lt;smallstr::string::SmallString&lt;A&gt; as core::fmt::Write&gt;::write_str [mount-s3] (10 samples, 0.14%)</title><rect x="39.2474%" y="933" width="0.1359%" height="15" fill="rgb(226,80,48)"/><text x="39.4974%" y="943.50"></text></g><g><title>inline smallstr::string::SmallString&lt;A&gt;::push_str [mount-s3] (10 samples, 0.14%)</title><rect x="39.2474%" y="917" width="0.1359%" height="15" fill="rgb(238,224,15)"/><text x="39.4974%" y="927.50"></text></g><g><title>inline smallvec::SmallVec&lt;A&gt;::extend_from_slice [mount-s3] (10 samples, 0.14%)</title><rect x="39.2474%" y="901" width="0.1359%" height="15" fill="rgb(241,136,10)"/><text x="39.4974%" y="911.50"></text></g><g><title>inline smallvec::SmallVec&lt;A&gt;::insert_from_slice [mount-s3] (10 samples, 0.14%)</title><rect x="39.2474%" y="885" width="0.1359%" height="15" fill="rgb(208,32,45)"/><text x="39.4974%" y="895.50"></text></g><g><title>inline &lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled [mount-s3] (8 samples, 0.11%)</title><rect x="39.5463%" y="789" width="0.1087%" height="15" fill="rgb(207,135,9)"/><text x="39.7963%" y="799.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled [mount-s3] (15 samples, 0.20%)</title><rect x="39.4647%" y="949" width="0.2038%" height="15" fill="rgb(206,86,44)"/><text x="39.7147%" y="959.50"></text></g><g><title>inline tracing_log::log_tracer::try_cache_interest [mount-s3] (15 samples, 0.20%)</title><rect x="39.4647%" y="933" width="0.2038%" height="15" fill="rgb(245,177,15)"/><text x="39.7147%" y="943.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}} [mount-s3] (15 samples, 0.20%)</title><rect x="39.4647%" y="917" width="0.2038%" height="15" fill="rgb(206,64,50)"/><text x="39.7147%" y="927.50"></text></g><g><title>tracing_core::dispatcher::get_default [mount-s3] (15 samples, 0.20%)</title><rect x="39.4647%" y="901" width="0.2038%" height="15" fill="rgb(234,36,40)"/><text x="39.7147%" y="911.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (15 samples, 0.20%)</title><rect x="39.4647%" y="885" width="0.2038%" height="15" fill="rgb(213,64,8)"/><text x="39.7147%" y="895.50"></text></g><g><title>inline tracing_core::dispatcher::get_default::{{closure}} [mount-s3] (15 samples, 0.20%)</title><rect x="39.4647%" y="869" width="0.2038%" height="15" fill="rgb(210,75,36)"/><text x="39.7147%" y="879.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}}::{{closure}} [mount-s3] (15 samples, 0.20%)</title><rect x="39.4647%" y="853" width="0.2038%" height="15" fill="rgb(229,88,21)"/><text x="39.7147%" y="863.50"></text></g><g><title>inline tracing_core::dispatcher::Dispatch::enabled [mount-s3] (10 samples, 0.14%)</title><rect x="39.5327%" y="837" width="0.1359%" height="15" fill="rgb(252,204,47)"/><text x="39.7827%" y="847.50"></text></g><g><title>inline &lt;alloc::sync::Arc&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled [mount-s3] (10 samples, 0.14%)</title><rect x="39.5327%" y="821" width="0.1359%" height="15" fill="rgb(208,77,27)"/><text x="39.7827%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled [mount-s3] (10 samples, 0.14%)</title><rect x="39.5327%" y="805" width="0.1359%" height="15" fill="rgb(221,76,26)"/><text x="39.7827%" y="815.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log [mount-s3] (32 samples, 0.43%)</title><rect x="39.4647%" y="965" width="0.4347%" height="15" fill="rgb(225,139,18)"/><text x="39.7147%" y="975.50"></text></g><g><title>inline tracing_log::dispatch_record [mount-s3] (15 samples, 0.20%)</title><rect x="39.6957%" y="949" width="0.2038%" height="15" fill="rgb(230,137,11)"/><text x="39.9457%" y="959.50"></text></g><g><title>tracing_core::dispatcher::get_default [mount-s3] (15 samples, 0.20%)</title><rect x="39.6957%" y="933" width="0.2038%" height="15" fill="rgb(212,28,1)"/><text x="39.9457%" y="943.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (14 samples, 0.19%)</title><rect x="39.7093%" y="917" width="0.1902%" height="15" fill="rgb(248,164,17)"/><text x="39.9593%" y="927.50"></text></g><g><title>inline tracing_core::dispatcher::get_default::{{closure}} [mount-s3] (14 samples, 0.19%)</title><rect x="39.7093%" y="901" width="0.1902%" height="15" fill="rgb(222,171,42)"/><text x="39.9593%" y="911.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} [mount-s3] (12 samples, 0.16%)</title><rect x="39.7364%" y="885" width="0.1630%" height="15" fill="rgb(243,84,45)"/><text x="39.9864%" y="895.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (51 samples, 0.69%)</title><rect x="39.2202%" y="997" width="0.6928%" height="15" fill="rgb(252,49,23)"/><text x="39.4702%" y="1007.50"></text></g><g><title>log::__private_api_log [mount-s3] (34 samples, 0.46%)</title><rect x="39.4512%" y="981" width="0.4619%" height="15" fill="rgb(215,19,7)"/><text x="39.7012%" y="991.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (54 samples, 0.73%)</title><rect x="39.2202%" y="1013" width="0.7336%" height="15" fill="rgb(238,81,41)"/><text x="39.4702%" y="1023.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (40 samples, 0.54%)</title><rect x="40.8233%" y="981" width="0.5434%" height="15" fill="rgb(210,199,37)"/><text x="41.0733%" y="991.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (194 samples, 2.64%)</title><rect x="39.0029%" y="1029" width="2.6355%" height="15" fill="rgb(244,192,49)"/><text x="39.2529%" y="1039.50">aw..</text></g><g><title>vsnprintf [libc-2.17.so] (124 samples, 1.68%)</title><rect x="39.9538%" y="1013" width="1.6846%" height="15" fill="rgb(226,211,11)"/><text x="40.2038%" y="1023.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (118 samples, 1.60%)</title><rect x="40.0353%" y="997" width="1.6030%" height="15" fill="rgb(236,162,54)"/><text x="40.2853%" y="1007.50"></text></g><g><title>strchrnul [libc-2.17.so] (13 samples, 0.18%)</title><rect x="41.4618%" y="981" width="0.1766%" height="15" fill="rgb(220,229,9)"/><text x="41.7118%" y="991.50"></text></g><g><title>aws_task_run [mount-s3] (197 samples, 2.68%)</title><rect x="38.9757%" y="1045" width="2.6763%" height="15" fill="rgb(250,87,22)"/><text x="39.2257%" y="1055.50">aw..</text></g><g><title>__inet_hash_connect [linux] (10 samples, 0.14%)</title><rect x="42.0595%" y="869" width="0.1359%" height="15" fill="rgb(239,43,17)"/><text x="42.3095%" y="879.50"></text></g><g><title>inet_hash_connect [linux] (14 samples, 0.19%)</title><rect x="42.0459%" y="885" width="0.1902%" height="15" fill="rgb(231,177,25)"/><text x="42.2959%" y="895.50"></text></g><g><title>ip_route_output_key_hash [linux] (10 samples, 0.14%)</title><rect x="42.3176%" y="885" width="0.1359%" height="15" fill="rgb(219,179,1)"/><text x="42.5676%" y="895.50"></text></g><g><title>ip_route_output_key_hash_rcu [linux] (10 samples, 0.14%)</title><rect x="42.3176%" y="869" width="0.1359%" height="15" fill="rgb(238,219,53)"/><text x="42.5676%" y="879.50"></text></g><g><title>fib_table_lookup [linux] (8 samples, 0.11%)</title><rect x="42.3448%" y="853" width="0.1087%" height="15" fill="rgb(232,167,36)"/><text x="42.5948%" y="863.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (8 samples, 0.11%)</title><rect x="42.3448%" y="837" width="0.1087%" height="15" fill="rgb(244,19,51)"/><text x="42.5948%" y="847.50"></text></g><g><title>__nf_conntrack_find_get [linux:nf_conntrack] (11 samples, 0.15%)</title><rect x="42.6165%" y="741" width="0.1494%" height="15" fill="rgb(224,6,22)"/><text x="42.8665%" y="751.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (11 samples, 0.15%)</title><rect x="42.6165%" y="725" width="0.1494%" height="15" fill="rgb(224,145,5)"/><text x="42.8665%" y="735.50"></text></g><g><title>init_conntrack.isra.0 [linux:nf_conntrack] (9 samples, 0.12%)</title><rect x="42.8203%" y="741" width="0.1223%" height="15" fill="rgb(234,130,49)"/><text x="43.0703%" y="751.50"></text></g><g><title>nf_ct_delete [linux:nf_conntrack] (17 samples, 0.23%)</title><rect x="43.0240%" y="725" width="0.2309%" height="15" fill="rgb(254,6,2)"/><text x="43.2740%" y="735.50"></text></g><g><title>nf_conntrack_tcp_packet [linux:nf_conntrack] (18 samples, 0.24%)</title><rect x="43.0240%" y="741" width="0.2445%" height="15" fill="rgb(208,96,46)"/><text x="43.2740%" y="751.50"></text></g><g><title>ipv4_conntrack_local [linux:nf_conntrack] (50 samples, 0.68%)</title><rect x="42.6165%" y="773" width="0.6793%" height="15" fill="rgb(239,3,39)"/><text x="42.8665%" y="783.50"></text></g><g><title>nf_conntrack_in [linux:nf_conntrack] (50 samples, 0.68%)</title><rect x="42.6165%" y="757" width="0.6793%" height="15" fill="rgb(233,210,1)"/><text x="42.8665%" y="767.50"></text></g><g><title>__ip_local_out [linux] (68 samples, 0.92%)</title><rect x="42.5622%" y="805" width="0.9238%" height="15" fill="rgb(244,137,37)"/><text x="42.8122%" y="815.50"></text></g><g><title>nf_hook_slow [linux] (67 samples, 0.91%)</title><rect x="42.5757%" y="789" width="0.9102%" height="15" fill="rgb(240,136,2)"/><text x="42.8257%" y="799.50"></text></g><g><title>nf_nat_ipv4_local_fn [linux:nf_nat] (14 samples, 0.19%)</title><rect x="43.2957%" y="773" width="0.1902%" height="15" fill="rgb(239,18,37)"/><text x="43.5457%" y="783.50"></text></g><g><title>nf_nat_ipv4_fn [linux:nf_nat] (14 samples, 0.19%)</title><rect x="43.2957%" y="757" width="0.1902%" height="15" fill="rgb(218,185,22)"/><text x="43.5457%" y="767.50"></text></g><g><title>nf_nat_inet_fn [linux:nf_nat] (13 samples, 0.18%)</title><rect x="43.3093%" y="741" width="0.1766%" height="15" fill="rgb(225,218,4)"/><text x="43.5593%" y="751.50"></text></g><g><title>__ip_local_out [linux] (10 samples, 0.14%)</title><rect x="43.9750%" y="405" width="0.1359%" height="15" fill="rgb(230,182,32)"/><text x="44.2250%" y="415.50"></text></g><g><title>nf_hook_slow [linux] (10 samples, 0.14%)</title><rect x="43.9750%" y="389" width="0.1359%" height="15" fill="rgb(242,56,43)"/><text x="44.2250%" y="399.50"></text></g><g><title>ip_build_and_send_pkt [linux] (15 samples, 0.20%)</title><rect x="43.9614%" y="437" width="0.2038%" height="15" fill="rgb(233,99,24)"/><text x="44.2114%" y="447.50"></text></g><g><title>ip_local_out [linux] (14 samples, 0.19%)</title><rect x="43.9750%" y="421" width="0.1902%" height="15" fill="rgb(234,209,42)"/><text x="44.2250%" y="431.50"></text></g><g><title>ip_local_deliver_finish [linux] (40 samples, 0.54%)</title><rect x="43.6761%" y="565" width="0.5434%" height="15" fill="rgb(227,7,12)"/><text x="43.9261%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu [linux] (40 samples, 0.54%)</title><rect x="43.6761%" y="549" width="0.5434%" height="15" fill="rgb(245,203,43)"/><text x="43.9261%" y="559.50"></text></g><g><title>tcp_v4_rcv [linux] (40 samples, 0.54%)</title><rect x="43.6761%" y="533" width="0.5434%" height="15" fill="rgb(238,205,33)"/><text x="43.9261%" y="543.50"></text></g><g><title>tcp_v4_do_rcv [linux] (35 samples, 0.48%)</title><rect x="43.7441%" y="517" width="0.4755%" height="15" fill="rgb(231,56,7)"/><text x="43.9941%" y="527.50"></text></g><g><title>tcp_rcv_state_process [linux] (35 samples, 0.48%)</title><rect x="43.7441%" y="501" width="0.4755%" height="15" fill="rgb(244,186,29)"/><text x="43.9941%" y="511.50"></text></g><g><title>tcp_v4_conn_request [linux] (33 samples, 0.45%)</title><rect x="43.7712%" y="485" width="0.4483%" height="15" fill="rgb(234,111,31)"/><text x="44.0212%" y="495.50"></text></g><g><title>tcp_conn_request [linux] (32 samples, 0.43%)</title><rect x="43.7848%" y="469" width="0.4347%" height="15" fill="rgb(241,149,10)"/><text x="44.0348%" y="479.50"></text></g><g><title>tcp_v4_send_synack [linux] (19 samples, 0.26%)</title><rect x="43.9614%" y="453" width="0.2581%" height="15" fill="rgb(249,206,44)"/><text x="44.2114%" y="463.50"></text></g><g><title>ip_local_deliver [linux] (44 samples, 0.60%)</title><rect x="43.6761%" y="581" width="0.5977%" height="15" fill="rgb(251,153,30)"/><text x="43.9261%" y="591.50"></text></g><g><title>ip_rcv_finish [linux] (46 samples, 0.62%)</title><rect x="43.6625%" y="597" width="0.6249%" height="15" fill="rgb(239,152,38)"/><text x="43.9125%" y="607.50"></text></g><g><title>ip_rcv [linux] (52 samples, 0.71%)</title><rect x="43.6218%" y="613" width="0.7064%" height="15" fill="rgb(249,139,47)"/><text x="43.8718%" y="623.50"></text></g><g><title>__netif_receive_skb [linux] (53 samples, 0.72%)</title><rect x="43.6218%" y="645" width="0.7200%" height="15" fill="rgb(244,64,35)"/><text x="43.8718%" y="655.50"></text></g><g><title>__netif_receive_skb_one_core [linux] (53 samples, 0.72%)</title><rect x="43.6218%" y="629" width="0.7200%" height="15" fill="rgb(216,46,15)"/><text x="43.8718%" y="639.50"></text></g><g><title>__local_bh_enable_ip [linux] (58 samples, 0.79%)</title><rect x="43.5675%" y="741" width="0.7879%" height="15" fill="rgb(250,74,19)"/><text x="43.8175%" y="751.50"></text></g><g><title>do_softirq.part.0 [linux] (58 samples, 0.79%)</title><rect x="43.5675%" y="725" width="0.7879%" height="15" fill="rgb(249,42,33)"/><text x="43.8175%" y="735.50"></text></g><g><title>do_softirq_own_stack [linux] (57 samples, 0.77%)</title><rect x="43.5810%" y="709" width="0.7744%" height="15" fill="rgb(242,149,17)"/><text x="43.8310%" y="719.50"></text></g><g><title>__softirqentry_text_start [linux] (57 samples, 0.77%)</title><rect x="43.5810%" y="693" width="0.7744%" height="15" fill="rgb(244,29,21)"/><text x="43.8310%" y="703.50"></text></g><g><title>net_rx_action [linux] (56 samples, 0.76%)</title><rect x="43.5946%" y="677" width="0.7608%" height="15" fill="rgb(220,130,37)"/><text x="43.8446%" y="687.50"></text></g><g><title>process_backlog [linux] (55 samples, 0.75%)</title><rect x="43.6082%" y="661" width="0.7472%" height="15" fill="rgb(211,67,2)"/><text x="43.8582%" y="671.50"></text></g><g><title>dev_hard_start_xmit [linux] (8 samples, 0.11%)</title><rect x="44.3554%" y="709" width="0.1087%" height="15" fill="rgb(235,68,52)"/><text x="44.6054%" y="719.50"></text></g><g><title>loopback_xmit [linux] (8 samples, 0.11%)</title><rect x="44.3554%" y="693" width="0.1087%" height="15" fill="rgb(246,142,3)"/><text x="44.6054%" y="703.50"></text></g><g><title>__ip_finish_output [linux] (71 samples, 0.96%)</title><rect x="43.5267%" y="773" width="0.9645%" height="15" fill="rgb(241,25,7)"/><text x="43.7767%" y="783.50"></text></g><g><title>ip_finish_output2 [linux] (71 samples, 0.96%)</title><rect x="43.5267%" y="757" width="0.9645%" height="15" fill="rgb(242,119,39)"/><text x="43.7767%" y="767.50"></text></g><g><title>dev_queue_xmit [linux] (10 samples, 0.14%)</title><rect x="44.3554%" y="741" width="0.1359%" height="15" fill="rgb(241,98,45)"/><text x="44.6054%" y="751.50"></text></g><g><title>__dev_queue_xmit [linux] (10 samples, 0.14%)</title><rect x="44.3554%" y="725" width="0.1359%" height="15" fill="rgb(254,28,30)"/><text x="44.6054%" y="735.50"></text></g><g><title>ip_finish_output [linux] (72 samples, 0.98%)</title><rect x="43.5267%" y="789" width="0.9781%" height="15" fill="rgb(241,142,54)"/><text x="43.7767%" y="799.50"></text></g><g><title>ip_local_out [linux] (156 samples, 2.12%)</title><rect x="42.5622%" y="821" width="2.1193%" height="15" fill="rgb(222,85,15)"/><text x="42.8122%" y="831.50">i..</text></g><g><title>ip_output [linux] (88 samples, 1.20%)</title><rect x="43.4859%" y="805" width="1.1955%" height="15" fill="rgb(210,85,47)"/><text x="43.7359%" y="815.50"></text></g><g><title>nf_hook_slow [linux] (12 samples, 0.16%)</title><rect x="44.5184%" y="789" width="0.1630%" height="15" fill="rgb(224,206,25)"/><text x="44.7684%" y="799.50"></text></g><g><title>nf_nat_ipv4_out [linux:nf_nat] (8 samples, 0.11%)</title><rect x="44.5727%" y="773" width="0.1087%" height="15" fill="rgb(243,201,19)"/><text x="44.8227%" y="783.50"></text></g><g><title>nf_nat_ipv4_fn [linux:nf_nat] (8 samples, 0.11%)</title><rect x="44.5727%" y="757" width="0.1087%" height="15" fill="rgb(236,59,4)"/><text x="44.8227%" y="767.50"></text></g><g><title>nf_nat_inet_fn [linux:nf_nat] (8 samples, 0.11%)</title><rect x="44.5727%" y="741" width="0.1087%" height="15" fill="rgb(254,179,45)"/><text x="44.8227%" y="751.50"></text></g><g><title>ip_queue_xmit [linux] (158 samples, 2.15%)</title><rect x="42.5486%" y="853" width="2.1464%" height="15" fill="rgb(226,14,10)"/><text x="42.7986%" y="863.50">i..</text></g><g><title>__ip_queue_xmit [linux] (158 samples, 2.15%)</title><rect x="42.5486%" y="837" width="2.1464%" height="15" fill="rgb(244,27,41)"/><text x="42.7986%" y="847.50">_..</text></g><g><title>__tcp_transmit_skb [linux] (165 samples, 2.24%)</title><rect x="42.4806%" y="869" width="2.2415%" height="15" fill="rgb(235,35,32)"/><text x="42.7306%" y="879.50">_..</text></g><g><title>tcp_connect [linux] (180 samples, 2.45%)</title><rect x="42.4535%" y="885" width="2.4453%" height="15" fill="rgb(218,68,31)"/><text x="42.7035%" y="895.50">tc..</text></g><g><title>__inet_stream_connect [linux] (217 samples, 2.95%)</title><rect x="41.9780%" y="917" width="2.9480%" height="15" fill="rgb(207,120,37)"/><text x="42.2280%" y="927.50">__..</text></g><g><title>tcp_v4_connect [linux] (215 samples, 2.92%)</title><rect x="42.0052%" y="901" width="2.9208%" height="15" fill="rgb(227,98,0)"/><text x="42.2552%" y="911.50">tc..</text></g><g><title>tcp_ack [linux] (9 samples, 0.12%)</title><rect x="44.9939%" y="837" width="0.1223%" height="15" fill="rgb(207,7,3)"/><text x="45.2439%" y="847.50"></text></g><g><title>tcp_create_openreq_child [linux] (10 samples, 0.14%)</title><rect x="45.5916%" y="421" width="0.1359%" height="15" fill="rgb(206,98,19)"/><text x="45.8416%" y="431.50"></text></g><g><title>inet_csk_clone_lock [linux] (10 samples, 0.14%)</title><rect x="45.5916%" y="405" width="0.1359%" height="15" fill="rgb(217,5,26)"/><text x="45.8416%" y="415.50"></text></g><g><title>sk_clone_lock [linux] (8 samples, 0.11%)</title><rect x="45.6188%" y="389" width="0.1087%" height="15" fill="rgb(235,190,38)"/><text x="45.8688%" y="399.50"></text></g><g><title>tcp_check_req [linux] (25 samples, 0.34%)</title><rect x="45.4014%" y="453" width="0.3396%" height="15" fill="rgb(247,86,24)"/><text x="45.6514%" y="463.50"></text></g><g><title>tcp_v4_syn_recv_sock [linux] (17 samples, 0.23%)</title><rect x="45.5101%" y="437" width="0.2309%" height="15" fill="rgb(205,101,16)"/><text x="45.7601%" y="447.50"></text></g><g><title>sock_def_readable [linux] (44 samples, 0.60%)</title><rect x="45.7411%" y="437" width="0.5977%" height="15" fill="rgb(246,168,33)"/><text x="45.9911%" y="447.50"></text></g><g><title>__wake_up_sync_key [linux] (44 samples, 0.60%)</title><rect x="45.7411%" y="421" width="0.5977%" height="15" fill="rgb(231,114,1)"/><text x="45.9911%" y="431.50"></text></g><g><title>__wake_up_common_lock [linux] (44 samples, 0.60%)</title><rect x="45.7411%" y="405" width="0.5977%" height="15" fill="rgb(207,184,53)"/><text x="45.9911%" y="415.50"></text></g><g><title>__lock_text_start [linux] (44 samples, 0.60%)</title><rect x="45.7411%" y="389" width="0.5977%" height="15" fill="rgb(224,95,51)"/><text x="45.9911%" y="399.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (44 samples, 0.60%)</title><rect x="45.7411%" y="373" width="0.5977%" height="15" fill="rgb(212,188,45)"/><text x="45.9911%" y="383.50"></text></g><g><title>ip_rcv_finish [linux] (77 samples, 1.05%)</title><rect x="45.3879%" y="533" width="1.0461%" height="15" fill="rgb(223,154,38)"/><text x="45.6379%" y="543.50"></text></g><g><title>ip_local_deliver [linux] (77 samples, 1.05%)</title><rect x="45.3879%" y="517" width="1.0461%" height="15" fill="rgb(251,22,52)"/><text x="45.6379%" y="527.50"></text></g><g><title>ip_local_deliver_finish [linux] (77 samples, 1.05%)</title><rect x="45.3879%" y="501" width="1.0461%" height="15" fill="rgb(229,209,22)"/><text x="45.6379%" y="511.50"></text></g><g><title>ip_protocol_deliver_rcu [linux] (77 samples, 1.05%)</title><rect x="45.3879%" y="485" width="1.0461%" height="15" fill="rgb(234,138,34)"/><text x="45.6379%" y="495.50"></text></g><g><title>tcp_v4_rcv [linux] (77 samples, 1.05%)</title><rect x="45.3879%" y="469" width="1.0461%" height="15" fill="rgb(212,95,11)"/><text x="45.6379%" y="479.50"></text></g><g><title>tcp_child_process [linux] (51 samples, 0.69%)</title><rect x="45.7411%" y="453" width="0.6928%" height="15" fill="rgb(240,179,47)"/><text x="45.9911%" y="463.50"></text></g><g><title>ip_rcv [linux] (78 samples, 1.06%)</title><rect x="45.3879%" y="549" width="1.0596%" height="15" fill="rgb(240,163,11)"/><text x="45.6379%" y="559.50"></text></g><g><title>net_rx_action [linux] (79 samples, 1.07%)</title><rect x="45.3879%" y="613" width="1.0732%" height="15" fill="rgb(236,37,12)"/><text x="45.6379%" y="623.50"></text></g><g><title>process_backlog [linux] (79 samples, 1.07%)</title><rect x="45.3879%" y="597" width="1.0732%" height="15" fill="rgb(232,164,16)"/><text x="45.6379%" y="607.50"></text></g><g><title>__netif_receive_skb [linux] (79 samples, 1.07%)</title><rect x="45.3879%" y="581" width="1.0732%" height="15" fill="rgb(244,205,15)"/><text x="45.6379%" y="591.50"></text></g><g><title>__netif_receive_skb_one_core [linux] (79 samples, 1.07%)</title><rect x="45.3879%" y="565" width="1.0732%" height="15" fill="rgb(223,117,47)"/><text x="45.6379%" y="575.50"></text></g><g><title>__local_bh_enable_ip [linux] (81 samples, 1.10%)</title><rect x="45.3879%" y="677" width="1.1004%" height="15" fill="rgb(244,107,35)"/><text x="45.6379%" y="687.50"></text></g><g><title>do_softirq.part.0 [linux] (81 samples, 1.10%)</title><rect x="45.3879%" y="661" width="1.1004%" height="15" fill="rgb(205,140,8)"/><text x="45.6379%" y="671.50"></text></g><g><title>do_softirq_own_stack [linux] (81 samples, 1.10%)</title><rect x="45.3879%" y="645" width="1.1004%" height="15" fill="rgb(228,84,46)"/><text x="45.6379%" y="655.50"></text></g><g><title>__softirqentry_text_start [linux] (81 samples, 1.10%)</title><rect x="45.3879%" y="629" width="1.1004%" height="15" fill="rgb(254,188,9)"/><text x="45.6379%" y="639.50"></text></g><g><title>ip_finish_output [linux] (84 samples, 1.14%)</title><rect x="45.3607%" y="725" width="1.1411%" height="15" fill="rgb(206,112,54)"/><text x="45.6107%" y="735.50"></text></g><g><title>__ip_finish_output [linux] (84 samples, 1.14%)</title><rect x="45.3607%" y="709" width="1.1411%" height="15" fill="rgb(216,84,49)"/><text x="45.6107%" y="719.50"></text></g><g><title>ip_finish_output2 [linux] (84 samples, 1.14%)</title><rect x="45.3607%" y="693" width="1.1411%" height="15" fill="rgb(214,194,35)"/><text x="45.6107%" y="703.50"></text></g><g><title>__release_sock [linux] (116 samples, 1.58%)</title><rect x="44.9395%" y="901" width="1.5759%" height="15" fill="rgb(249,28,3)"/><text x="45.1895%" y="911.50"></text></g><g><title>tcp_v4_do_rcv [linux] (116 samples, 1.58%)</title><rect x="44.9395%" y="885" width="1.5759%" height="15" fill="rgb(222,56,52)"/><text x="45.1895%" y="895.50"></text></g><g><title>tcp_rcv_state_process [linux] (115 samples, 1.56%)</title><rect x="44.9531%" y="869" width="1.5623%" height="15" fill="rgb(245,217,50)"/><text x="45.2031%" y="879.50"></text></g><g><title>tcp_rcv_synsent_state_process [linux] (113 samples, 1.54%)</title><rect x="44.9803%" y="853" width="1.5351%" height="15" fill="rgb(213,201,24)"/><text x="45.2303%" y="863.50"></text></g><g><title>tcp_send_ack [linux] (94 samples, 1.28%)</title><rect x="45.2384%" y="837" width="1.2770%" height="15" fill="rgb(248,116,28)"/><text x="45.4884%" y="847.50"></text></g><g><title>__tcp_send_ack.part.0 [linux] (93 samples, 1.26%)</title><rect x="45.2520%" y="821" width="1.2634%" height="15" fill="rgb(219,72,43)"/><text x="45.5020%" y="831.50"></text></g><g><title>__tcp_transmit_skb [linux] (92 samples, 1.25%)</title><rect x="45.2656%" y="805" width="1.2498%" height="15" fill="rgb(209,138,14)"/><text x="45.5156%" y="815.50"></text></g><g><title>ip_queue_xmit [linux] (91 samples, 1.24%)</title><rect x="45.2792%" y="789" width="1.2362%" height="15" fill="rgb(222,18,33)"/><text x="45.5292%" y="799.50"></text></g><g><title>__ip_queue_xmit [linux] (91 samples, 1.24%)</title><rect x="45.2792%" y="773" width="1.2362%" height="15" fill="rgb(213,199,7)"/><text x="45.5292%" y="783.50"></text></g><g><title>ip_local_out [linux] (91 samples, 1.24%)</title><rect x="45.2792%" y="757" width="1.2362%" height="15" fill="rgb(250,110,10)"/><text x="45.5292%" y="767.50"></text></g><g><title>ip_output [linux] (85 samples, 1.15%)</title><rect x="45.3607%" y="741" width="1.1547%" height="15" fill="rgb(248,123,6)"/><text x="45.6107%" y="751.50"></text></g><g><title>inet_stream_connect [linux] (335 samples, 4.55%)</title><rect x="41.9780%" y="933" width="4.5510%" height="15" fill="rgb(206,91,31)"/><text x="42.2280%" y="943.50">inet_..</text></g><g><title>release_sock [linux] (117 samples, 1.59%)</title><rect x="44.9395%" y="917" width="1.5895%" height="15" fill="rgb(211,154,13)"/><text x="45.1895%" y="927.50"></text></g><g><title>__connect [libpthread-2.17.so] (343 samples, 4.66%)</title><rect x="41.9237%" y="1013" width="4.6597%" height="15" fill="rgb(225,148,7)"/><text x="42.1737%" y="1023.50">__con..</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (340 samples, 4.62%)</title><rect x="41.9644%" y="997" width="4.6189%" height="15" fill="rgb(220,160,43)"/><text x="42.2144%" y="1007.50">entry..</text></g><g><title>do_syscall_64 [linux] (339 samples, 4.61%)</title><rect x="41.9780%" y="981" width="4.6054%" height="15" fill="rgb(213,52,39)"/><text x="42.2280%" y="991.50">do_sy..</text></g><g><title>__x64_sys_connect [linux] (339 samples, 4.61%)</title><rect x="41.9780%" y="965" width="4.6054%" height="15" fill="rgb(243,137,7)"/><text x="42.2280%" y="975.50">__x64..</text></g><g><title>__sys_connect [linux] (339 samples, 4.61%)</title><rect x="41.9780%" y="949" width="4.6054%" height="15" fill="rgb(230,79,13)"/><text x="42.2280%" y="959.50">__sys..</text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (15 samples, 0.20%)</title><rect x="46.5833%" y="1013" width="0.2038%" height="15" fill="rgb(247,105,23)"/><text x="46.8333%" y="1023.50"></text></g><g><title>vsnprintf [libc-2.17.so] (13 samples, 0.18%)</title><rect x="46.6105%" y="997" width="0.1766%" height="15" fill="rgb(223,179,41)"/><text x="46.8605%" y="1007.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (11 samples, 0.15%)</title><rect x="46.6377%" y="981" width="0.1494%" height="15" fill="rgb(218,9,34)"/><text x="46.8877%" y="991.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (12 samples, 0.16%)</title><rect x="46.8958%" y="981" width="0.1630%" height="15" fill="rgb(222,106,8)"/><text x="47.1458%" y="991.50"></text></g><g><title>aws_task_scheduler_schedule_future [mount-s3] (19 samples, 0.26%)</title><rect x="46.8822%" y="997" width="0.2581%" height="15" fill="rgb(211,220,0)"/><text x="47.1322%" y="1007.50"></text></g><g><title>s_schedule_task_common [mount-s3] (21 samples, 0.29%)</title><rect x="46.8686%" y="1013" width="0.2853%" height="15" fill="rgb(229,52,16)"/><text x="47.1186%" y="1023.50"></text></g><g><title>aws_socket_connect [mount-s3] (401 samples, 5.45%)</title><rect x="41.9101%" y="1029" width="5.4476%" height="15" fill="rgb(212,155,18)"/><text x="42.1601%" y="1039.50">aws_soc..</text></g><g><title>s_subscribe_to_io_events [mount-s3] (15 samples, 0.20%)</title><rect x="47.1539%" y="1013" width="0.2038%" height="15" fill="rgb(242,21,14)"/><text x="47.4039%" y="1023.50"></text></g><g><title>epoll_ctl [libc-2.17.so] (13 samples, 0.18%)</title><rect x="47.1811%" y="997" width="0.1766%" height="15" fill="rgb(222,19,48)"/><text x="47.4311%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (9 samples, 0.12%)</title><rect x="47.2354%" y="981" width="0.1223%" height="15" fill="rgb(232,45,27)"/><text x="47.4854%" y="991.50"></text></g><g><title>do_syscall_64 [linux] (9 samples, 0.12%)</title><rect x="47.2354%" y="965" width="0.1223%" height="15" fill="rgb(249,103,42)"/><text x="47.4854%" y="975.50"></text></g><g><title>__x64_sys_epoll_ctl [linux] (8 samples, 0.11%)</title><rect x="47.2490%" y="949" width="0.1087%" height="15" fill="rgb(246,81,33)"/><text x="47.4990%" y="959.50"></text></g><g><title>__fcntl [libpthread-2.17.so] (9 samples, 0.12%)</title><rect x="47.3849%" y="997" width="0.1223%" height="15" fill="rgb(252,33,42)"/><text x="47.6349%" y="1007.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (19 samples, 0.26%)</title><rect x="47.5071%" y="997" width="0.2581%" height="15" fill="rgb(209,212,41)"/><text x="47.7571%" y="1007.50"></text></g><g><title>vsnprintf [libc-2.17.so] (11 samples, 0.15%)</title><rect x="47.6158%" y="981" width="0.1494%" height="15" fill="rgb(207,154,6)"/><text x="47.8658%" y="991.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (10 samples, 0.14%)</title><rect x="47.6294%" y="965" width="0.1359%" height="15" fill="rgb(223,64,47)"/><text x="47.8794%" y="975.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (8 samples, 0.11%)</title><rect x="47.8332%" y="933" width="0.1087%" height="15" fill="rgb(211,161,38)"/><text x="48.0832%" y="943.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (16 samples, 0.22%)</title><rect x="47.7652%" y="981" width="0.2174%" height="15" fill="rgb(219,138,40)"/><text x="48.0152%" y="991.50"></text></g><g><title>vsnprintf [libc-2.17.so] (13 samples, 0.18%)</title><rect x="47.8060%" y="965" width="0.1766%" height="15" fill="rgb(241,228,46)"/><text x="48.0560%" y="975.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (13 samples, 0.18%)</title><rect x="47.8060%" y="949" width="0.1766%" height="15" fill="rgb(223,209,38)"/><text x="48.0560%" y="959.50"></text></g><g><title>aws_socket_set_options [mount-s3] (20 samples, 0.27%)</title><rect x="47.7652%" y="997" width="0.2717%" height="15" fill="rgb(236,164,45)"/><text x="48.0152%" y="1007.50"></text></g><g><title>sk_alloc [linux] (8 samples, 0.11%)</title><rect x="48.1049%" y="885" width="0.1087%" height="15" fill="rgb(231,15,5)"/><text x="48.3549%" y="895.50"></text></g><g><title>inet_create [linux] (9 samples, 0.12%)</title><rect x="48.1049%" y="901" width="0.1223%" height="15" fill="rgb(252,35,15)"/><text x="48.3549%" y="911.50"></text></g><g><title>alloc_inode [linux] (10 samples, 0.14%)</title><rect x="48.2679%" y="869" width="0.1359%" height="15" fill="rgb(248,181,18)"/><text x="48.5179%" y="879.50"></text></g><g><title>__sock_create [linux] (23 samples, 0.31%)</title><rect x="48.1049%" y="917" width="0.3125%" height="15" fill="rgb(233,39,42)"/><text x="48.3549%" y="927.50"></text></g><g><title>sock_alloc [linux] (13 samples, 0.18%)</title><rect x="48.2407%" y="901" width="0.1766%" height="15" fill="rgb(238,110,33)"/><text x="48.4907%" y="911.50"></text></g><g><title>new_inode_pseudo [linux] (11 samples, 0.15%)</title><rect x="48.2679%" y="885" width="0.1494%" height="15" fill="rgb(233,195,10)"/><text x="48.5179%" y="895.50"></text></g><g><title>s_attempt_connection [mount-s3] (503 samples, 6.83%)</title><rect x="41.8150%" y="1045" width="6.8333%" height="15" fill="rgb(254,105,3)"/><text x="42.0650%" y="1055.50">s_attempt..</text></g><g><title>s_socket_init [mount-s3] (95 samples, 1.29%)</title><rect x="47.3577%" y="1029" width="1.2906%" height="15" fill="rgb(221,225,9)"/><text x="47.6077%" y="1039.50"></text></g><g><title>inline s_create_socket [mount-s3] (94 samples, 1.28%)</title><rect x="47.3713%" y="1013" width="1.2770%" height="15" fill="rgb(224,227,45)"/><text x="47.6213%" y="1023.50"></text></g><g><title>socket [libc-2.17.so] (45 samples, 0.61%)</title><rect x="48.0370%" y="997" width="0.6113%" height="15" fill="rgb(229,198,43)"/><text x="48.2870%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (43 samples, 0.58%)</title><rect x="48.0641%" y="981" width="0.5842%" height="15" fill="rgb(206,209,35)"/><text x="48.3141%" y="991.50"></text></g><g><title>do_syscall_64 [linux] (42 samples, 0.57%)</title><rect x="48.0777%" y="965" width="0.5706%" height="15" fill="rgb(245,195,53)"/><text x="48.3277%" y="975.50"></text></g><g><title>__x64_sys_socket [linux] (40 samples, 0.54%)</title><rect x="48.1049%" y="949" width="0.5434%" height="15" fill="rgb(240,92,26)"/><text x="48.3549%" y="959.50"></text></g><g><title>__sys_socket [linux] (40 samples, 0.54%)</title><rect x="48.1049%" y="933" width="0.5434%" height="15" fill="rgb(207,40,23)"/><text x="48.3549%" y="943.50"></text></g><g><title>sock_alloc_file [linux] (12 samples, 0.16%)</title><rect x="48.4853%" y="917" width="0.1630%" height="15" fill="rgb(223,111,35)"/><text x="48.7353%" y="927.50"></text></g><g><title>alloc_file_pseudo [linux] (12 samples, 0.16%)</title><rect x="48.4853%" y="901" width="0.1630%" height="15" fill="rgb(229,147,28)"/><text x="48.7353%" y="911.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (11 samples, 0.15%)</title><rect x="48.8249%" y="1013" width="0.1494%" height="15" fill="rgb(211,29,28)"/><text x="49.0749%" y="1023.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (8 samples, 0.11%)</title><rect x="49.0015%" y="981" width="0.1087%" height="15" fill="rgb(228,72,33)"/><text x="49.2515%" y="991.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (8 samples, 0.11%)</title><rect x="49.0015%" y="965" width="0.1087%" height="15" fill="rgb(205,214,31)"/><text x="49.2515%" y="975.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (13 samples, 0.18%)</title><rect x="48.9879%" y="997" width="0.1766%" height="15" fill="rgb(224,111,15)"/><text x="49.2379%" y="1007.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (8 samples, 0.11%)</title><rect x="49.1917%" y="981" width="0.1087%" height="15" fill="rgb(253,21,26)"/><text x="49.4417%" y="991.50"></text></g><g><title>inline s_aws_http_connection_manager_log_snapshot [mount-s3] (16 samples, 0.22%)</title><rect x="49.3547%" y="981" width="0.2174%" height="15" fill="rgb(245,139,43)"/><text x="49.6047%" y="991.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (16 samples, 0.22%)</title><rect x="49.3547%" y="965" width="0.2174%" height="15" fill="rgb(252,170,7)"/><text x="49.6047%" y="975.50"></text></g><g><title>vsnprintf [libc-2.17.so] (10 samples, 0.14%)</title><rect x="49.4362%" y="949" width="0.1359%" height="15" fill="rgb(231,118,14)"/><text x="49.6862%" y="959.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (10 samples, 0.14%)</title><rect x="49.4362%" y="933" width="0.1359%" height="15" fill="rgb(238,83,0)"/><text x="49.6862%" y="943.50"></text></g><g><title>aws_client_bootstrap_acquire [mount-s3] (13 samples, 0.18%)</title><rect x="49.6536%" y="917" width="0.1766%" height="15" fill="rgb(221,39,39)"/><text x="49.9036%" y="927.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (12 samples, 0.16%)</title><rect x="49.6672%" y="901" width="0.1630%" height="15" fill="rgb(222,119,46)"/><text x="49.9172%" y="911.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (11 samples, 0.15%)</title><rect x="49.8845%" y="885" width="0.1494%" height="15" fill="rgb(222,165,49)"/><text x="50.1345%" y="895.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (11 samples, 0.15%)</title><rect x="49.8845%" y="869" width="0.1494%" height="15" fill="rgb(219,113,52)"/><text x="50.1345%" y="879.50"></text></g><g><title>log::__private_api_log [mount-s3] (8 samples, 0.11%)</title><rect x="49.9253%" y="853" width="0.1087%" height="15" fill="rgb(214,7,15)"/><text x="50.1753%" y="863.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (27 samples, 0.37%)</title><rect x="49.8574%" y="901" width="0.3668%" height="15" fill="rgb(235,32,4)"/><text x="50.1074%" y="911.50"></text></g><g><title>vsnprintf [libc-2.17.so] (14 samples, 0.19%)</title><rect x="50.0340%" y="885" width="0.1902%" height="15" fill="rgb(238,90,54)"/><text x="50.2840%" y="895.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (14 samples, 0.19%)</title><rect x="50.0340%" y="869" width="0.1902%" height="15" fill="rgb(213,208,19)"/><text x="50.2840%" y="879.50"></text></g><g><title>__vfs_read [linux] (9 samples, 0.12%)</title><rect x="50.5366%" y="709" width="0.1223%" height="15" fill="rgb(233,156,4)"/><text x="50.7866%" y="719.50"></text></g><g><title>urandom_read [linux] (8 samples, 0.11%)</title><rect x="50.5502%" y="693" width="0.1087%" height="15" fill="rgb(207,194,5)"/><text x="50.8002%" y="703.50"></text></g><g><title>aws_device_random_u32 [mount-s3] (14 samples, 0.19%)</title><rect x="50.4823%" y="853" width="0.1902%" height="15" fill="rgb(206,111,30)"/><text x="50.7323%" y="863.50"></text></g><g><title>aws_device_random_buffer [mount-s3] (14 samples, 0.19%)</title><rect x="50.4823%" y="837" width="0.1902%" height="15" fill="rgb(243,70,54)"/><text x="50.7323%" y="847.50"></text></g><g><title>inline s_fallback_device_random_buffer [mount-s3] (14 samples, 0.19%)</title><rect x="50.4823%" y="821" width="0.1902%" height="15" fill="rgb(242,28,8)"/><text x="50.7323%" y="831.50"></text></g><g><title>read [libpthread-2.17.so] (14 samples, 0.19%)</title><rect x="50.4823%" y="805" width="0.1902%" height="15" fill="rgb(219,106,18)"/><text x="50.7323%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (12 samples, 0.16%)</title><rect x="50.5094%" y="789" width="0.1630%" height="15" fill="rgb(244,222,10)"/><text x="50.7594%" y="799.50"></text></g><g><title>do_syscall_64 [linux] (12 samples, 0.16%)</title><rect x="50.5094%" y="773" width="0.1630%" height="15" fill="rgb(236,179,52)"/><text x="50.7594%" y="783.50"></text></g><g><title>__x64_sys_read [linux] (11 samples, 0.15%)</title><rect x="50.5230%" y="757" width="0.1494%" height="15" fill="rgb(213,23,39)"/><text x="50.7730%" y="767.50"></text></g><g><title>ksys_read [linux] (11 samples, 0.15%)</title><rect x="50.5230%" y="741" width="0.1494%" height="15" fill="rgb(238,48,10)"/><text x="50.7730%" y="751.50"></text></g><g><title>vfs_read [linux] (10 samples, 0.14%)</title><rect x="50.5366%" y="725" width="0.1359%" height="15" fill="rgb(251,196,23)"/><text x="50.7866%" y="735.50"></text></g><g><title>inline s_get_connection_event_loop [mount-s3] (15 samples, 0.20%)</title><rect x="50.4823%" y="885" width="0.2038%" height="15" fill="rgb(250,152,24)"/><text x="50.7323%" y="895.50"></text></g><g><title>aws_event_loop_group_get_next_loop [mount-s3] (15 samples, 0.20%)</title><rect x="50.4823%" y="869" width="0.2038%" height="15" fill="rgb(209,150,17)"/><text x="50.7323%" y="879.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (13 samples, 0.18%)</title><rect x="50.6996%" y="853" width="0.1766%" height="15" fill="rgb(234,202,34)"/><text x="50.9496%" y="863.50"></text></g><g><title>vsnprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="50.7540%" y="837" width="0.1223%" height="15" fill="rgb(253,148,53)"/><text x="51.0040%" y="847.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="50.7540%" y="821" width="0.1223%" height="15" fill="rgb(218,129,16)"/><text x="51.0040%" y="831.50"></text></g><g><title>aws_client_bootstrap_new_socket_channel [mount-s3] (91 samples, 1.24%)</title><rect x="49.6536%" y="933" width="1.2362%" height="15" fill="rgb(216,85,19)"/><text x="49.9036%" y="943.50"></text></g><g><title>default_resolve_host [mount-s3] (76 samples, 1.03%)</title><rect x="49.8574%" y="917" width="1.0325%" height="15" fill="rgb(235,228,7)"/><text x="50.1074%" y="927.50"></text></g><g><title>s_on_host_resolved [mount-s3] (35 samples, 0.48%)</title><rect x="50.4143%" y="901" width="0.4755%" height="15" fill="rgb(245,175,0)"/><text x="50.6643%" y="911.50"></text></g><g><title>s_schedule_task_common [mount-s3] (15 samples, 0.20%)</title><rect x="50.6860%" y="885" width="0.2038%" height="15" fill="rgb(208,168,36)"/><text x="50.9360%" y="895.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (15 samples, 0.20%)</title><rect x="50.6860%" y="869" width="0.2038%" height="15" fill="rgb(246,171,24)"/><text x="50.9360%" y="879.50"></text></g><g><title>aws_http_client_connect_internal [mount-s3] (97 samples, 1.32%)</title><rect x="49.6400%" y="949" width="1.3178%" height="15" fill="rgb(215,142,24)"/><text x="49.8900%" y="959.50"></text></g><g><title>aws_http_connection_manager_acquire_connection [mount-s3] (154 samples, 2.09%)</title><rect x="48.9743%" y="1013" width="2.0921%" height="15" fill="rgb(250,187,7)"/><text x="49.2243%" y="1023.50">a..</text></g><g><title>s_aws_http_connection_manager_execute_transaction [mount-s3] (138 samples, 1.87%)</title><rect x="49.1917%" y="997" width="1.8747%" height="15" fill="rgb(228,66,33)"/><text x="49.4417%" y="1007.50">s..</text></g><g><title>inline s_aws_http_connection_manager_new_connection [mount-s3] (110 samples, 1.49%)</title><rect x="49.5721%" y="981" width="1.4944%" height="15" fill="rgb(234,215,21)"/><text x="49.8221%" y="991.50"></text></g><g><title>s_connect_proxy_via_env_variable [mount-s3] (105 samples, 1.43%)</title><rect x="49.6400%" y="965" width="1.4264%" height="15" fill="rgb(222,191,20)"/><text x="49.8900%" y="975.50"></text></g><g><title>s_exponential_retry_task [mount-s3] (176 samples, 2.39%)</title><rect x="48.7026%" y="1045" width="2.3910%" height="15" fill="rgb(245,79,54)"/><text x="48.9526%" y="1055.50">s_..</text></g><g><title>s_on_standard_retry_token_acquired [mount-s3] (168 samples, 2.28%)</title><rect x="48.8113%" y="1029" width="2.2823%" height="15" fill="rgb(240,10,37)"/><text x="49.0613%" y="1039.50">s..</text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (17 samples, 0.23%)</title><rect x="51.1479%" y="1013" width="0.2309%" height="15" fill="rgb(214,192,32)"/><text x="51.3979%" y="1023.50"></text></g><g><title>vsnprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="51.2702%" y="997" width="0.1087%" height="15" fill="rgb(209,36,54)"/><text x="51.5202%" y="1007.50"></text></g><g><title>aws_channel_slot_on_handler_shutdown_complete [mount-s3] (24 samples, 0.33%)</title><rect x="51.1344%" y="1029" width="0.3260%" height="15" fill="rgb(220,10,11)"/><text x="51.3844%" y="1039.50"></text></g><g><title>evict [linux] (9 samples, 0.12%)</title><rect x="51.7321%" y="821" width="0.1223%" height="15" fill="rgb(221,106,17)"/><text x="51.9821%" y="831.50"></text></g><g><title>dput [linux] (18 samples, 0.24%)</title><rect x="51.6234%" y="885" width="0.2445%" height="15" fill="rgb(251,142,44)"/><text x="51.8734%" y="895.50"></text></g><g><title>__dentry_kill [linux] (18 samples, 0.24%)</title><rect x="51.6234%" y="869" width="0.2445%" height="15" fill="rgb(238,13,15)"/><text x="51.8734%" y="879.50"></text></g><g><title>dentry_unlink_inode [linux] (15 samples, 0.20%)</title><rect x="51.6642%" y="853" width="0.2038%" height="15" fill="rgb(208,107,27)"/><text x="51.9142%" y="863.50"></text></g><g><title>iput [linux] (11 samples, 0.15%)</title><rect x="51.7185%" y="837" width="0.1494%" height="15" fill="rgb(205,136,37)"/><text x="51.9685%" y="847.50"></text></g><g><title>nf_conntrack_in [linux:nf_conntrack] (12 samples, 0.16%)</title><rect x="52.2619%" y="661" width="0.1630%" height="15" fill="rgb(250,205,27)"/><text x="52.5119%" y="671.50"></text></g><g><title>ipv4_conntrack_local [linux:nf_conntrack] (15 samples, 0.20%)</title><rect x="52.2483%" y="677" width="0.2038%" height="15" fill="rgb(210,80,43)"/><text x="52.4983%" y="687.50"></text></g><g><title>__ip_local_out [linux] (21 samples, 0.29%)</title><rect x="52.1940%" y="709" width="0.2853%" height="15" fill="rgb(247,160,36)"/><text x="52.4440%" y="719.50"></text></g><g><title>nf_hook_slow [linux] (20 samples, 0.27%)</title><rect x="52.2076%" y="693" width="0.2717%" height="15" fill="rgb(234,13,49)"/><text x="52.4576%" y="703.50"></text></g><g><title>tcp_fin [linux] (18 samples, 0.24%)</title><rect x="52.9548%" y="373" width="0.2445%" height="15" fill="rgb(234,122,0)"/><text x="53.2048%" y="383.50"></text></g><g><title>sock_def_wakeup [linux] (18 samples, 0.24%)</title><rect x="52.9548%" y="357" width="0.2445%" height="15" fill="rgb(207,146,38)"/><text x="53.2048%" y="367.50"></text></g><g><title>__wake_up [linux] (18 samples, 0.24%)</title><rect x="52.9548%" y="341" width="0.2445%" height="15" fill="rgb(207,177,25)"/><text x="53.2048%" y="351.50"></text></g><g><title>__wake_up_common_lock [linux] (18 samples, 0.24%)</title><rect x="52.9548%" y="325" width="0.2445%" height="15" fill="rgb(211,178,42)"/><text x="53.2048%" y="335.50"></text></g><g><title>__lock_text_start [linux] (18 samples, 0.24%)</title><rect x="52.9548%" y="309" width="0.2445%" height="15" fill="rgb(230,69,54)"/><text x="53.2048%" y="319.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (18 samples, 0.24%)</title><rect x="52.9548%" y="293" width="0.2445%" height="15" fill="rgb(214,135,41)"/><text x="53.2048%" y="303.50"></text></g><g><title>tcp_v4_do_rcv [linux] (33 samples, 0.45%)</title><rect x="52.7646%" y="421" width="0.4483%" height="15" fill="rgb(237,67,25)"/><text x="53.0146%" y="431.50"></text></g><g><title>tcp_rcv_established [linux] (32 samples, 0.43%)</title><rect x="52.7782%" y="405" width="0.4347%" height="15" fill="rgb(222,189,50)"/><text x="53.0282%" y="415.50"></text></g><g><title>tcp_data_queue [linux] (24 samples, 0.33%)</title><rect x="52.8868%" y="389" width="0.3260%" height="15" fill="rgb(245,148,34)"/><text x="53.1368%" y="399.50"></text></g><g><title>ip_local_deliver_finish [linux] (41 samples, 0.56%)</title><rect x="52.6695%" y="469" width="0.5570%" height="15" fill="rgb(222,29,6)"/><text x="52.9195%" y="479.50"></text></g><g><title>ip_protocol_deliver_rcu [linux] (41 samples, 0.56%)</title><rect x="52.6695%" y="453" width="0.5570%" height="15" fill="rgb(221,189,43)"/><text x="52.9195%" y="463.50"></text></g><g><title>tcp_v4_rcv [linux] (40 samples, 0.54%)</title><rect x="52.6831%" y="437" width="0.5434%" height="15" fill="rgb(207,36,27)"/><text x="52.9331%" y="447.50"></text></g><g><title>ip_local_deliver [linux] (43 samples, 0.58%)</title><rect x="52.6695%" y="485" width="0.5842%" height="15" fill="rgb(217,90,24)"/><text x="52.9195%" y="495.50"></text></g><g><title>ip_rcv_finish [linux] (44 samples, 0.60%)</title><rect x="52.6695%" y="501" width="0.5977%" height="15" fill="rgb(224,66,35)"/><text x="52.9195%" y="511.50"></text></g><g><title>__local_bh_enable_ip [linux] (57 samples, 0.77%)</title><rect x="52.5472%" y="645" width="0.7744%" height="15" fill="rgb(221,13,50)"/><text x="52.7972%" y="655.50"></text></g><g><title>do_softirq.part.0 [linux] (57 samples, 0.77%)</title><rect x="52.5472%" y="629" width="0.7744%" height="15" fill="rgb(236,68,49)"/><text x="52.7972%" y="639.50"></text></g><g><title>do_softirq_own_stack [linux] (56 samples, 0.76%)</title><rect x="52.5608%" y="613" width="0.7608%" height="15" fill="rgb(229,146,28)"/><text x="52.8108%" y="623.50"></text></g><g><title>__softirqentry_text_start [linux] (56 samples, 0.76%)</title><rect x="52.5608%" y="597" width="0.7608%" height="15" fill="rgb(225,31,38)"/><text x="52.8108%" y="607.50"></text></g><g><title>net_rx_action [linux] (55 samples, 0.75%)</title><rect x="52.5744%" y="581" width="0.7472%" height="15" fill="rgb(250,208,3)"/><text x="52.8244%" y="591.50"></text></g><g><title>process_backlog [linux] (54 samples, 0.73%)</title><rect x="52.5880%" y="565" width="0.7336%" height="15" fill="rgb(246,54,23)"/><text x="52.8380%" y="575.50"></text></g><g><title>__netif_receive_skb [linux] (49 samples, 0.67%)</title><rect x="52.6559%" y="549" width="0.6657%" height="15" fill="rgb(243,76,11)"/><text x="52.9059%" y="559.50"></text></g><g><title>__netif_receive_skb_one_core [linux] (49 samples, 0.67%)</title><rect x="52.6559%" y="533" width="0.6657%" height="15" fill="rgb(245,21,50)"/><text x="52.9059%" y="543.50"></text></g><g><title>ip_rcv [linux] (48 samples, 0.65%)</title><rect x="52.6695%" y="517" width="0.6521%" height="15" fill="rgb(228,9,43)"/><text x="52.9195%" y="527.50"></text></g><g><title>ip_finish_output [linux] (68 samples, 0.92%)</title><rect x="52.4793%" y="693" width="0.9238%" height="15" fill="rgb(208,100,47)"/><text x="52.7293%" y="703.50"></text></g><g><title>__ip_finish_output [linux] (66 samples, 0.90%)</title><rect x="52.5065%" y="677" width="0.8966%" height="15" fill="rgb(232,26,8)"/><text x="52.7565%" y="687.50"></text></g><g><title>ip_finish_output2 [linux] (65 samples, 0.88%)</title><rect x="52.5200%" y="661" width="0.8830%" height="15" fill="rgb(216,166,38)"/><text x="52.7700%" y="671.50"></text></g><g><title>ip_output [linux] (77 samples, 1.05%)</title><rect x="52.4793%" y="709" width="1.0461%" height="15" fill="rgb(251,202,51)"/><text x="52.7293%" y="719.50"></text></g><g><title>nf_hook_slow [linux] (9 samples, 0.12%)</title><rect x="53.4031%" y="693" width="0.1223%" height="15" fill="rgb(254,216,34)"/><text x="53.6531%" y="703.50"></text></g><g><title>__tcp_transmit_skb [linux] (103 samples, 1.40%)</title><rect x="52.1397%" y="773" width="1.3993%" height="15" fill="rgb(251,32,27)"/><text x="52.3897%" y="783.50"></text></g><g><title>ip_queue_xmit [linux] (101 samples, 1.37%)</title><rect x="52.1668%" y="757" width="1.3721%" height="15" fill="rgb(208,127,28)"/><text x="52.4168%" y="767.50"></text></g><g><title>__ip_queue_xmit [linux] (101 samples, 1.37%)</title><rect x="52.1668%" y="741" width="1.3721%" height="15" fill="rgb(224,137,22)"/><text x="52.4168%" y="751.50"></text></g><g><title>ip_local_out [linux] (99 samples, 1.34%)</title><rect x="52.1940%" y="725" width="1.3449%" height="15" fill="rgb(254,70,32)"/><text x="52.4440%" y="735.50"></text></g><g><title>inet_release [linux] (125 samples, 1.70%)</title><rect x="51.8951%" y="853" width="1.6981%" height="15" fill="rgb(229,75,37)"/><text x="52.1451%" y="863.50"></text></g><g><title>tcp_close [linux] (123 samples, 1.67%)</title><rect x="51.9223%" y="837" width="1.6710%" height="15" fill="rgb(252,64,23)"/><text x="52.1723%" y="847.50"></text></g><g><title>tcp_send_fin [linux] (112 samples, 1.52%)</title><rect x="52.0717%" y="821" width="1.5215%" height="15" fill="rgb(232,162,48)"/><text x="52.3217%" y="831.50"></text></g><g><title>__tcp_push_pending_frames [linux] (107 samples, 1.45%)</title><rect x="52.1397%" y="805" width="1.4536%" height="15" fill="rgb(246,160,12)"/><text x="52.3897%" y="815.50"></text></g><g><title>tcp_write_xmit [linux] (107 samples, 1.45%)</title><rect x="52.1397%" y="789" width="1.4536%" height="15" fill="rgb(247,166,0)"/><text x="52.3897%" y="799.50"></text></g><g><title>__sock_release [linux] (126 samples, 1.71%)</title><rect x="51.8951%" y="869" width="1.7117%" height="15" fill="rgb(249,219,21)"/><text x="52.1451%" y="879.50"></text></g><g><title>__fput [linux] (149 samples, 2.02%)</title><rect x="51.5963%" y="901" width="2.0242%" height="15" fill="rgb(205,209,3)"/><text x="51.8463%" y="911.50">_..</text></g><g><title>sock_close [linux] (127 samples, 1.73%)</title><rect x="51.8951%" y="885" width="1.7253%" height="15" fill="rgb(243,44,1)"/><text x="52.1451%" y="895.50"></text></g><g><title>__close [libpthread-2.17.so] (160 samples, 2.17%)</title><rect x="51.4604%" y="997" width="2.1736%" height="15" fill="rgb(206,159,16)"/><text x="51.7104%" y="1007.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (156 samples, 2.12%)</title><rect x="51.5147%" y="981" width="2.1193%" height="15" fill="rgb(244,77,30)"/><text x="51.7647%" y="991.50">e..</text></g><g><title>do_syscall_64 [linux] (155 samples, 2.11%)</title><rect x="51.5283%" y="965" width="2.1057%" height="15" fill="rgb(218,69,12)"/><text x="51.7783%" y="975.50">d..</text></g><g><title>exit_to_usermode_loop [linux] (151 samples, 2.05%)</title><rect x="51.5827%" y="949" width="2.0514%" height="15" fill="rgb(212,87,7)"/><text x="51.8327%" y="959.50">e..</text></g><g><title>task_work_run [linux] (150 samples, 2.04%)</title><rect x="51.5963%" y="933" width="2.0378%" height="15" fill="rgb(245,114,25)"/><text x="51.8463%" y="943.50">t..</text></g><g><title>____fput [linux] (150 samples, 2.04%)</title><rect x="51.5963%" y="917" width="2.0378%" height="15" fill="rgb(210,61,42)"/><text x="51.8463%" y="927.50">_..</text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (8 samples, 0.11%)</title><rect x="53.6340%" y="997" width="0.1087%" height="15" fill="rgb(211,52,33)"/><text x="53.8840%" y="1007.50"></text></g><g><title>vsnprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="53.6340%" y="981" width="0.1087%" height="15" fill="rgb(234,58,33)"/><text x="53.8840%" y="991.50"></text></g><g><title>epoll_ctl [libc-2.17.so] (14 samples, 0.19%)</title><rect x="53.7699%" y="981" width="0.1902%" height="15" fill="rgb(220,115,36)"/><text x="54.0199%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (11 samples, 0.15%)</title><rect x="53.8106%" y="965" width="0.1494%" height="15" fill="rgb(243,153,54)"/><text x="54.0606%" y="975.50"></text></g><g><title>do_syscall_64 [linux] (11 samples, 0.15%)</title><rect x="53.8106%" y="949" width="0.1494%" height="15" fill="rgb(251,47,18)"/><text x="54.0606%" y="959.50"></text></g><g><title>__x64_sys_epoll_ctl [linux] (11 samples, 0.15%)</title><rect x="53.8106%" y="933" width="0.1494%" height="15" fill="rgb(242,102,42)"/><text x="54.0606%" y="943.50"></text></g><g><title>ep_remove [linux] (9 samples, 0.12%)</title><rect x="53.8378%" y="917" width="0.1223%" height="15" fill="rgb(234,31,38)"/><text x="54.0878%" y="927.50"></text></g><g><title>aws_socket_close [mount-s3] (196 samples, 2.66%)</title><rect x="51.4604%" y="1013" width="2.6627%" height="15" fill="rgb(221,117,51)"/><text x="51.7104%" y="1023.50">aw..</text></g><g><title>s_unsubscribe_from_io_events [mount-s3] (26 samples, 0.35%)</title><rect x="53.7699%" y="997" width="0.3532%" height="15" fill="rgb(212,20,18)"/><text x="54.0199%" y="1007.50"></text></g><g><title>inline s_schedule_task_now [mount-s3] (12 samples, 0.16%)</title><rect x="53.9601%" y="981" width="0.1630%" height="15" fill="rgb(245,133,36)"/><text x="54.2101%" y="991.50"></text></g><g><title>s_schedule_task_common [mount-s3] (12 samples, 0.16%)</title><rect x="53.9601%" y="965" width="0.1630%" height="15" fill="rgb(212,6,19)"/><text x="54.2101%" y="975.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (12 samples, 0.16%)</title><rect x="53.9601%" y="949" width="0.1630%" height="15" fill="rgb(218,1,36)"/><text x="54.2101%" y="959.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (12 samples, 0.16%)</title><rect x="53.9601%" y="933" width="0.1630%" height="15" fill="rgb(246,84,54)"/><text x="54.2101%" y="943.50"></text></g><g><title>vsnprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="54.0008%" y="917" width="0.1223%" height="15" fill="rgb(242,110,6)"/><text x="54.2508%" y="927.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="54.0008%" y="901" width="0.1223%" height="15" fill="rgb(214,47,5)"/><text x="54.2508%" y="911.50"></text></g><g><title>s_socket_shutdown [mount-s3] (214 samples, 2.91%)</title><rect x="51.4604%" y="1029" width="2.9072%" height="15" fill="rgb(218,159,25)"/><text x="51.7104%" y="1039.50">s_..</text></g><g><title>s_schedule_task_common [mount-s3] (13 samples, 0.18%)</title><rect x="54.1910%" y="1013" width="0.1766%" height="15" fill="rgb(215,211,28)"/><text x="54.4410%" y="1023.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (12 samples, 0.16%)</title><rect x="54.2046%" y="997" width="0.1630%" height="15" fill="rgb(238,59,32)"/><text x="54.4546%" y="1007.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (12 samples, 0.16%)</title><rect x="54.2046%" y="981" width="0.1630%" height="15" fill="rgb(226,82,3)"/><text x="54.4546%" y="991.50"></text></g><g><title>s_handler_shutdown [mount-s3] (245 samples, 3.33%)</title><rect x="51.0936%" y="1045" width="3.3284%" height="15" fill="rgb(240,164,32)"/><text x="51.3436%" y="1055.50">s_h..</text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (17 samples, 0.23%)</title><rect x="54.4355%" y="1029" width="0.2309%" height="15" fill="rgb(232,46,7)"/><text x="54.6855%" y="1039.50"></text></g><g><title>vsnprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="54.5442%" y="1013" width="0.1223%" height="15" fill="rgb(229,129,53)"/><text x="54.7942%" y="1023.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="54.5442%" y="997" width="0.1223%" height="15" fill="rgb(234,188,29)"/><text x="54.7942%" y="1007.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (9 samples, 0.12%)</title><rect x="54.7616%" y="997" width="0.1223%" height="15" fill="rgb(246,141,4)"/><text x="55.0116%" y="1007.50"></text></g><g><title>aws_http_connection_new_http1_1_client [mount-s3] (8 samples, 0.11%)</title><rect x="54.9382%" y="981" width="0.1087%" height="15" fill="rgb(229,23,39)"/><text x="55.1882%" y="991.50"></text></g><g><title>aws_http_connection_new_channel_handler [mount-s3] (14 samples, 0.19%)</title><rect x="54.8838%" y="997" width="0.1902%" height="15" fill="rgb(206,12,3)"/><text x="55.1338%" y="1007.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (11 samples, 0.15%)</title><rect x="55.0740%" y="981" width="0.1494%" height="15" fill="rgb(252,226,20)"/><text x="55.3240%" y="991.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (13 samples, 0.18%)</title><rect x="55.2371%" y="965" width="0.1766%" height="15" fill="rgb(216,123,35)"/><text x="55.4871%" y="975.50"></text></g><g><title>s_aws_http_connection_manager_build_transaction [mount-s3] (16 samples, 0.22%)</title><rect x="55.2371%" y="981" width="0.2174%" height="15" fill="rgb(212,68,40)"/><text x="55.4871%" y="991.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (9 samples, 0.12%)</title><rect x="55.4680%" y="949" width="0.1223%" height="15" fill="rgb(254,125,32)"/><text x="55.7180%" y="959.50"></text></g><g><title>aws_h1_stream_activate [mount-s3] (12 samples, 0.16%)</title><rect x="55.6582%" y="917" width="0.1630%" height="15" fill="rgb(253,97,22)"/><text x="55.9082%" y="927.50"></text></g><g><title>s_schedule_task_common [mount-s3] (10 samples, 0.14%)</title><rect x="55.6854%" y="901" width="0.1359%" height="15" fill="rgb(241,101,14)"/><text x="55.9354%" y="911.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (9 samples, 0.12%)</title><rect x="55.6990%" y="885" width="0.1223%" height="15" fill="rgb(238,103,29)"/><text x="55.9490%" y="895.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (9 samples, 0.12%)</title><rect x="55.6990%" y="869" width="0.1223%" height="15" fill="rgb(233,195,47)"/><text x="55.9490%" y="879.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (24 samples, 0.33%)</title><rect x="55.8620%" y="885" width="0.3260%" height="15" fill="rgb(246,218,30)"/><text x="56.1120%" y="895.50"></text></g><g><title>vsnprintf [libc-2.17.so] (18 samples, 0.24%)</title><rect x="55.9435%" y="869" width="0.2445%" height="15" fill="rgb(219,145,47)"/><text x="56.1935%" y="879.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (15 samples, 0.20%)</title><rect x="55.9842%" y="853" width="0.2038%" height="15" fill="rgb(243,12,26)"/><text x="56.2342%" y="863.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (10 samples, 0.14%)</title><rect x="56.0522%" y="837" width="0.1359%" height="15" fill="rgb(214,87,16)"/><text x="56.3022%" y="847.50"></text></g><g><title>aws_http_str_to_header_name [mount-s3] (11 samples, 0.15%)</title><rect x="56.3782%" y="837" width="0.1494%" height="15" fill="rgb(208,99,42)"/><text x="56.6282%" y="847.50"></text></g><g><title>inline s_find_in_str_to_enum_hash_table [mount-s3] (11 samples, 0.15%)</title><rect x="56.3782%" y="821" width="0.1494%" height="15" fill="rgb(253,99,2)"/><text x="56.6282%" y="831.50"></text></g><g><title>aws_hash_table_find [mount-s3] (10 samples, 0.14%)</title><rect x="56.3918%" y="805" width="0.1359%" height="15" fill="rgb(220,168,23)"/><text x="56.6418%" y="815.50"></text></g><g><title>s_scan_outgoing_headers [mount-s3] (18 samples, 0.24%)</title><rect x="56.3239%" y="853" width="0.2445%" height="15" fill="rgb(242,38,24)"/><text x="56.5739%" y="863.50"></text></g><g><title>aws_h1_encoder_message_init_from_request [mount-s3] (38 samples, 0.52%)</title><rect x="56.2016%" y="869" width="0.5162%" height="15" fill="rgb(225,182,9)"/><text x="56.4516%" y="879.50"></text></g><g><title>s_write_headers [mount-s3] (11 samples, 0.15%)</title><rect x="56.5684%" y="853" width="0.1494%" height="15" fill="rgb(243,178,37)"/><text x="56.8184%" y="863.50"></text></g><g><title>aws_h1_stream_new_request [mount-s3] (40 samples, 0.54%)</title><rect x="56.2016%" y="885" width="0.5434%" height="15" fill="rgb(232,139,19)"/><text x="56.4516%" y="895.50"></text></g><g><title>aws_http_connection_make_request [mount-s3] (74 samples, 1.01%)</title><rect x="55.8212%" y="917" width="1.0053%" height="15" fill="rgb(225,201,24)"/><text x="56.0712%" y="927.50"></text></g><g><title>s_make_request [mount-s3] (72 samples, 0.98%)</title><rect x="55.8484%" y="901" width="0.9781%" height="15" fill="rgb(221,47,46)"/><text x="56.0984%" y="911.50"></text></g><g><title>inline s_aws_http_connection_manager_complete_acquisitions [mount-s3] (102 samples, 1.39%)</title><rect x="55.4680%" y="965" width="1.3857%" height="15" fill="rgb(249,23,13)"/><text x="55.7180%" y="975.50"></text></g><g><title>s_s3_client_on_acquire_http_connection [mount-s3] (89 samples, 1.21%)</title><rect x="55.6446%" y="949" width="1.2091%" height="15" fill="rgb(219,9,5)"/><text x="55.8946%" y="959.50"></text></g><g><title>aws_s3_meta_request_send_request [mount-s3] (88 samples, 1.20%)</title><rect x="55.6582%" y="933" width="1.1955%" height="15" fill="rgb(254,171,16)"/><text x="55.9082%" y="943.50"></text></g><g><title>s_aws_http_connection_manager_execute_transaction [mount-s3] (120 samples, 1.63%)</title><rect x="55.4544%" y="981" width="1.6302%" height="15" fill="rgb(230,171,20)"/><text x="55.7044%" y="991.50"></text></g><g><title>inline s_aws_http_connection_manager_log_snapshot [mount-s3] (17 samples, 0.23%)</title><rect x="56.8537%" y="965" width="0.2309%" height="15" fill="rgb(210,71,41)"/><text x="57.1037%" y="975.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (17 samples, 0.23%)</title><rect x="56.8537%" y="949" width="0.2309%" height="15" fill="rgb(206,173,20)"/><text x="57.1037%" y="959.50"></text></g><g><title>vsnprintf [libc-2.17.so] (10 samples, 0.14%)</title><rect x="56.9488%" y="933" width="0.1359%" height="15" fill="rgb(233,88,34)"/><text x="57.1988%" y="943.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="56.9624%" y="917" width="0.1223%" height="15" fill="rgb(223,209,46)"/><text x="57.2124%" y="927.50"></text></g><g><title>s_connection_args_setup_callback [mount-s3] (176 samples, 2.39%)</title><rect x="54.7344%" y="1029" width="2.3910%" height="15" fill="rgb(250,43,18)"/><text x="54.9844%" y="1039.50">s_..</text></g><g><title>s_client_bootstrap_on_channel_setup [mount-s3] (175 samples, 2.38%)</title><rect x="54.7480%" y="1013" width="2.3774%" height="15" fill="rgb(208,13,10)"/><text x="54.9980%" y="1023.50">s_..</text></g><g><title>s_aws_http_connection_manager_on_connection_setup [mount-s3] (151 samples, 2.05%)</title><rect x="55.0740%" y="997" width="2.0514%" height="15" fill="rgb(212,200,36)"/><text x="55.3240%" y="1007.50">s..</text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (11 samples, 0.15%)</title><rect x="57.1933%" y="1013" width="0.1494%" height="15" fill="rgb(225,90,30)"/><text x="57.4433%" y="1023.50"></text></g><g><title>aws_socket_handler_new [mount-s3] (8 samples, 0.11%)</title><rect x="57.3428%" y="1013" width="0.1087%" height="15" fill="rgb(236,182,39)"/><text x="57.5928%" y="1023.50"></text></g><g><title>s_on_channel_setup_complete [mount-s3] (224 samples, 3.04%)</title><rect x="54.4220%" y="1045" width="3.0431%" height="15" fill="rgb(212,144,35)"/><text x="54.6720%" y="1055.50">s_o..</text></g><g><title>s_on_client_channel_on_setup_completed [mount-s3] (25 samples, 0.34%)</title><rect x="57.1254%" y="1029" width="0.3396%" height="15" fill="rgb(228,63,44)"/><text x="57.3754%" y="1039.50"></text></g><g><title>aws_channel_destroy [mount-s3] (11 samples, 0.15%)</title><rect x="57.5329%" y="1029" width="0.1494%" height="15" fill="rgb(228,109,6)"/><text x="57.7829%" y="1039.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (11 samples, 0.15%)</title><rect x="57.5329%" y="1013" width="0.1494%" height="15" fill="rgb(238,117,24)"/><text x="57.7829%" y="1023.50"></text></g><g><title>vsnprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="57.5737%" y="997" width="0.1087%" height="15" fill="rgb(242,26,26)"/><text x="57.8237%" y="1007.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (12 samples, 0.16%)</title><rect x="57.8454%" y="997" width="0.1630%" height="15" fill="rgb(221,92,48)"/><text x="58.0954%" y="1007.50"></text></g><g><title>vsnprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="57.8997%" y="981" width="0.1087%" height="15" fill="rgb(209,209,32)"/><text x="58.1497%" y="991.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="57.8997%" y="965" width="0.1087%" height="15" fill="rgb(221,70,22)"/><text x="58.1497%" y="975.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (9 samples, 0.12%)</title><rect x="58.0084%" y="981" width="0.1223%" height="15" fill="rgb(248,145,5)"/><text x="58.2584%" y="991.50"></text></g><g><title>inline s_aws_connection_management_transaction_clean_up [mount-s3] (12 samples, 0.16%)</title><rect x="58.2122%" y="965" width="0.1630%" height="15" fill="rgb(226,116,26)"/><text x="58.4622%" y="975.50"></text></g><g><title>aws_ref_count_release [mount-s3] (12 samples, 0.16%)</title><rect x="58.2122%" y="949" width="0.1630%" height="15" fill="rgb(244,5,17)"/><text x="58.4622%" y="959.50"></text></g><g><title>s_aws_http_connection_manager_finish_destroy [mount-s3] (10 samples, 0.14%)</title><rect x="58.2394%" y="933" width="0.1359%" height="15" fill="rgb(252,159,33)"/><text x="58.4894%" y="943.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (10 samples, 0.14%)</title><rect x="58.5382%" y="901" width="0.1359%" height="15" fill="rgb(206,71,0)"/><text x="58.7882%" y="911.50"></text></g><g><title>inline s_connection_args_shutdown_callback [mount-s3] (66 samples, 0.90%)</title><rect x="57.8182%" y="1029" width="0.8966%" height="15" fill="rgb(233,118,54)"/><text x="58.0682%" y="1039.50"></text></g><g><title>s_client_bootstrap_on_channel_shutdown [mount-s3] (65 samples, 0.88%)</title><rect x="57.8318%" y="1013" width="0.8830%" height="15" fill="rgb(234,83,48)"/><text x="58.0818%" y="1023.50"></text></g><g><title>s_aws_http_connection_manager_on_connection_shutdown [mount-s3] (52 samples, 0.71%)</title><rect x="58.0084%" y="997" width="0.7064%" height="15" fill="rgb(228,3,54)"/><text x="58.2584%" y="1007.50"></text></g><g><title>s_aws_http_connection_manager_execute_transaction [mount-s3] (37 samples, 0.50%)</title><rect x="58.2122%" y="981" width="0.5026%" height="15" fill="rgb(226,155,13)"/><text x="58.4622%" y="991.50"></text></g><g><title>inline s_aws_http_connection_manager_log_snapshot [mount-s3] (25 samples, 0.34%)</title><rect x="58.3752%" y="965" width="0.3396%" height="15" fill="rgb(241,28,37)"/><text x="58.6252%" y="975.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (24 samples, 0.33%)</title><rect x="58.3888%" y="949" width="0.3260%" height="15" fill="rgb(233,93,10)"/><text x="58.6388%" y="959.50"></text></g><g><title>vsnprintf [libc-2.17.so] (22 samples, 0.30%)</title><rect x="58.4160%" y="933" width="0.2989%" height="15" fill="rgb(225,113,19)"/><text x="58.6660%" y="943.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (21 samples, 0.29%)</title><rect x="58.4296%" y="917" width="0.2853%" height="15" fill="rgb(241,2,18)"/><text x="58.6796%" y="927.50"></text></g><g><title>s_on_client_channel_on_shutdown [mount-s3] (100 samples, 1.36%)</title><rect x="57.4650%" y="1045" width="1.3585%" height="15" fill="rgb(228,207,21)"/><text x="57.7150%" y="1055.50"></text></g><g><title>s_final_channel_deletion_task [mount-s3] (8 samples, 0.11%)</title><rect x="58.7148%" y="1029" width="0.1087%" height="15" fill="rgb(213,211,35)"/><text x="58.9648%" y="1039.50"></text></g><g><title>s_compare_timestamps [mount-s3] (12 samples, 0.16%)</title><rect x="58.8915%" y="997" width="0.1630%" height="15" fill="rgb(209,83,10)"/><text x="59.1415%" y="1007.50"></text></g><g><title>inline s_sift_either [mount-s3] (23 samples, 0.31%)</title><rect x="58.8779%" y="1029" width="0.3125%" height="15" fill="rgb(209,164,1)"/><text x="59.1279%" y="1039.50"></text></g><g><title>inline s_sift_down [mount-s3] (23 samples, 0.31%)</title><rect x="58.8779%" y="1013" width="0.3125%" height="15" fill="rgb(213,184,43)"/><text x="59.1279%" y="1023.50"></text></g><g><title>s_swap [mount-s3] (10 samples, 0.14%)</title><rect x="59.0545%" y="997" width="0.1359%" height="15" fill="rgb(231,61,34)"/><text x="59.3045%" y="1007.50"></text></g><g><title>s_remove_node [mount-s3] (31 samples, 0.42%)</title><rect x="58.8235%" y="1045" width="0.4211%" height="15" fill="rgb(235,75,3)"/><text x="59.0735%" y="1055.50"></text></g><g><title>aws_mem_calloc [mount-s3] (23 samples, 0.31%)</title><rect x="59.4484%" y="1013" width="0.3125%" height="15" fill="rgb(220,106,47)"/><text x="59.6984%" y="1023.50"></text></g><g><title>s_default_calloc [mount-s3] (20 samples, 0.27%)</title><rect x="59.4892%" y="997" width="0.2717%" height="15" fill="rgb(210,196,33)"/><text x="59.7392%" y="1007.50"></text></g><g><title>s_default_malloc [mount-s3] (17 samples, 0.23%)</title><rect x="59.5300%" y="981" width="0.2309%" height="15" fill="rgb(229,154,42)"/><text x="59.7800%" y="991.50"></text></g><g><title>posix_memalign [libc-2.17.so] (17 samples, 0.23%)</title><rect x="59.5300%" y="965" width="0.2309%" height="15" fill="rgb(228,114,26)"/><text x="59.7800%" y="975.50"></text></g><g><title>__libc_malloc [libc-2.17.so] (17 samples, 0.23%)</title><rect x="59.5300%" y="949" width="0.2309%" height="15" fill="rgb(208,144,1)"/><text x="59.7800%" y="959.50"></text></g><g><title>_int_malloc [libc-2.17.so] (16 samples, 0.22%)</title><rect x="59.5435%" y="933" width="0.2174%" height="15" fill="rgb(239,112,37)"/><text x="59.7935%" y="943.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}}::{{closure}} [mount-s3] (12 samples, 0.16%)</title><rect x="59.8832%" y="853" width="0.1630%" height="15" fill="rgb(210,96,50)"/><text x="60.1332%" y="863.50"></text></g><g><title>inline tracing_core::dispatcher::Dispatch::enabled [mount-s3] (8 samples, 0.11%)</title><rect x="59.9375%" y="837" width="0.1087%" height="15" fill="rgb(222,178,2)"/><text x="60.1875%" y="847.50"></text></g><g><title>inline &lt;alloc::sync::Arc&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled [mount-s3] (8 samples, 0.11%)</title><rect x="59.9375%" y="821" width="0.1087%" height="15" fill="rgb(226,74,18)"/><text x="60.1875%" y="831.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled [mount-s3] (13 samples, 0.18%)</title><rect x="59.8832%" y="949" width="0.1766%" height="15" fill="rgb(225,67,54)"/><text x="60.1332%" y="959.50"></text></g><g><title>inline tracing_log::log_tracer::try_cache_interest [mount-s3] (13 samples, 0.18%)</title><rect x="59.8832%" y="933" width="0.1766%" height="15" fill="rgb(251,92,32)"/><text x="60.1332%" y="943.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}} [mount-s3] (13 samples, 0.18%)</title><rect x="59.8832%" y="917" width="0.1766%" height="15" fill="rgb(228,149,22)"/><text x="60.1332%" y="927.50"></text></g><g><title>tracing_core::dispatcher::get_default [mount-s3] (13 samples, 0.18%)</title><rect x="59.8832%" y="901" width="0.1766%" height="15" fill="rgb(243,54,13)"/><text x="60.1332%" y="911.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (13 samples, 0.18%)</title><rect x="59.8832%" y="885" width="0.1766%" height="15" fill="rgb(243,180,28)"/><text x="60.1332%" y="895.50"></text></g><g><title>inline tracing_core::dispatcher::get_default::{{closure}} [mount-s3] (13 samples, 0.18%)</title><rect x="59.8832%" y="869" width="0.1766%" height="15" fill="rgb(208,167,24)"/><text x="60.1332%" y="879.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log [mount-s3] (36 samples, 0.49%)</title><rect x="59.8832%" y="965" width="0.4891%" height="15" fill="rgb(245,73,45)"/><text x="60.1332%" y="975.50"></text></g><g><title>inline tracing_log::dispatch_record [mount-s3] (23 samples, 0.31%)</title><rect x="60.0598%" y="949" width="0.3125%" height="15" fill="rgb(237,203,48)"/><text x="60.3098%" y="959.50"></text></g><g><title>tracing_core::dispatcher::get_default [mount-s3] (23 samples, 0.31%)</title><rect x="60.0598%" y="933" width="0.3125%" height="15" fill="rgb(211,197,16)"/><text x="60.3098%" y="943.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (22 samples, 0.30%)</title><rect x="60.0734%" y="917" width="0.2989%" height="15" fill="rgb(243,99,51)"/><text x="60.3234%" y="927.50"></text></g><g><title>inline tracing_core::dispatcher::get_default::{{closure}} [mount-s3] (22 samples, 0.30%)</title><rect x="60.0734%" y="901" width="0.2989%" height="15" fill="rgb(215,123,29)"/><text x="60.3234%" y="911.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} [mount-s3] (22 samples, 0.30%)</title><rect x="60.0734%" y="885" width="0.2989%" height="15" fill="rgb(239,186,37)"/><text x="60.3234%" y="895.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (46 samples, 0.62%)</title><rect x="59.7609%" y="997" width="0.6249%" height="15" fill="rgb(252,136,39)"/><text x="60.0109%" y="1007.50"></text></g><g><title>log::__private_api_log [mount-s3] (38 samples, 0.52%)</title><rect x="59.8696%" y="981" width="0.5162%" height="15" fill="rgb(223,213,32)"/><text x="60.1196%" y="991.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (52 samples, 0.71%)</title><rect x="59.7609%" y="1013" width="0.7064%" height="15" fill="rgb(233,115,5)"/><text x="60.0109%" y="1023.50"></text></g><g><title>_IO_strn_overflow [libc-2.17.so] (14 samples, 0.19%)</title><rect x="61.5406%" y="965" width="0.1902%" height="15" fill="rgb(207,226,44)"/><text x="61.7906%" y="975.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (49 samples, 0.67%)</title><rect x="61.1602%" y="981" width="0.6657%" height="15" fill="rgb(208,126,0)"/><text x="61.4102%" y="991.50"></text></g><g><title>_itoa_word [libc-2.17.so] (9 samples, 0.12%)</title><rect x="61.8258%" y="981" width="0.1223%" height="15" fill="rgb(244,66,21)"/><text x="62.0758%" y="991.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (203 samples, 2.76%)</title><rect x="59.3533%" y="1029" width="2.7578%" height="15" fill="rgb(222,97,12)"/><text x="59.6033%" y="1039.50">aw..</text></g><g><title>vsnprintf [libc-2.17.so] (121 samples, 1.64%)</title><rect x="60.4673%" y="1013" width="1.6438%" height="15" fill="rgb(219,213,19)"/><text x="60.7173%" y="1023.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (109 samples, 1.48%)</title><rect x="60.6303%" y="997" width="1.4808%" height="15" fill="rgb(252,169,30)"/><text x="60.8803%" y="1007.50"></text></g><g><title>strchrnul [libc-2.17.so] (11 samples, 0.15%)</title><rect x="61.9617%" y="981" width="0.1494%" height="15" fill="rgb(206,32,51)"/><text x="62.2117%" y="991.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (18 samples, 0.24%)</title><rect x="62.3692%" y="965" width="0.2445%" height="15" fill="rgb(250,172,42)"/><text x="62.6192%" y="975.50"></text></g><g><title>vsnprintf [libc-2.17.so] (12 samples, 0.16%)</title><rect x="62.4508%" y="949" width="0.1630%" height="15" fill="rgb(209,34,43)"/><text x="62.7008%" y="959.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (12 samples, 0.16%)</title><rect x="62.4508%" y="933" width="0.1630%" height="15" fill="rgb(223,11,35)"/><text x="62.7008%" y="943.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (14 samples, 0.19%)</title><rect x="62.7496%" y="949" width="0.1902%" height="15" fill="rgb(251,219,26)"/><text x="62.9996%" y="959.50"></text></g><g><title>__vfs_read [linux] (10 samples, 0.14%)</title><rect x="63.1300%" y="789" width="0.1359%" height="15" fill="rgb(231,119,3)"/><text x="63.3800%" y="799.50"></text></g><g><title>urandom_read [linux] (10 samples, 0.14%)</title><rect x="63.1300%" y="773" width="0.1359%" height="15" fill="rgb(216,97,11)"/><text x="63.3800%" y="783.50"></text></g><g><title>__x64_sys_read [linux] (16 samples, 0.22%)</title><rect x="63.0757%" y="837" width="0.2174%" height="15" fill="rgb(223,59,9)"/><text x="63.3257%" y="847.50"></text></g><g><title>ksys_read [linux] (16 samples, 0.22%)</title><rect x="63.0757%" y="821" width="0.2174%" height="15" fill="rgb(233,93,31)"/><text x="63.3257%" y="831.50"></text></g><g><title>vfs_read [linux] (12 samples, 0.16%)</title><rect x="63.1300%" y="805" width="0.1630%" height="15" fill="rgb(239,81,33)"/><text x="63.3800%" y="815.50"></text></g><g><title>aws_device_random_u32 [mount-s3] (27 samples, 0.37%)</title><rect x="62.9398%" y="933" width="0.3668%" height="15" fill="rgb(213,120,34)"/><text x="63.1898%" y="943.50"></text></g><g><title>aws_device_random_buffer [mount-s3] (27 samples, 0.37%)</title><rect x="62.9398%" y="917" width="0.3668%" height="15" fill="rgb(243,49,53)"/><text x="63.1898%" y="927.50"></text></g><g><title>inline s_fallback_device_random_buffer [mount-s3] (27 samples, 0.37%)</title><rect x="62.9398%" y="901" width="0.3668%" height="15" fill="rgb(247,216,33)"/><text x="63.1898%" y="911.50"></text></g><g><title>read [libpthread-2.17.so] (26 samples, 0.35%)</title><rect x="62.9534%" y="885" width="0.3532%" height="15" fill="rgb(226,26,14)"/><text x="63.2034%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (18 samples, 0.24%)</title><rect x="63.0621%" y="869" width="0.2445%" height="15" fill="rgb(215,49,53)"/><text x="63.3121%" y="879.50"></text></g><g><title>do_syscall_64 [linux] (18 samples, 0.24%)</title><rect x="63.0621%" y="853" width="0.2445%" height="15" fill="rgb(245,162,40)"/><text x="63.3121%" y="863.50"></text></g><g><title>aws_event_loop_group_get_next_loop [mount-s3] (28 samples, 0.38%)</title><rect x="62.9398%" y="949" width="0.3804%" height="15" fill="rgb(229,68,17)"/><text x="63.1898%" y="959.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (11 samples, 0.15%)</title><rect x="63.3745%" y="933" width="0.1494%" height="15" fill="rgb(213,182,10)"/><text x="63.6245%" y="943.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (11 samples, 0.15%)</title><rect x="63.3745%" y="917" width="0.1494%" height="15" fill="rgb(245,125,30)"/><text x="63.6245%" y="927.50"></text></g><g><title>aws_s3_client_update_connections_threaded [mount-s3] (96 samples, 1.30%)</title><rect x="62.2334%" y="1029" width="1.3042%" height="15" fill="rgb(232,202,2)"/><text x="62.4834%" y="1039.50"></text></g><g><title>inline s_s3_client_create_connection_for_request [mount-s3] (94 samples, 1.28%)</title><rect x="62.2606%" y="1013" width="1.2770%" height="15" fill="rgb(237,140,51)"/><text x="62.5106%" y="1023.50"></text></g><g><title>inline s_s3_client_create_connection_for_request_default [mount-s3] (94 samples, 1.28%)</title><rect x="62.2606%" y="997" width="1.2770%" height="15" fill="rgb(236,157,25)"/><text x="62.5106%" y="1007.50"></text></g><g><title>s_standard_retry_acquire_token [mount-s3] (87 samples, 1.18%)</title><rect x="62.3557%" y="981" width="1.1819%" height="15" fill="rgb(219,209,0)"/><text x="62.6057%" y="991.50"></text></g><g><title>s_exponential_retry_acquire_token [mount-s3] (58 samples, 0.79%)</title><rect x="62.7496%" y="965" width="0.7879%" height="15" fill="rgb(240,116,54)"/><text x="62.9996%" y="975.50"></text></g><g><title>s_schedule_task_common [mount-s3] (12 samples, 0.16%)</title><rect x="63.3745%" y="949" width="0.1630%" height="15" fill="rgb(216,10,36)"/><text x="63.6245%" y="959.50"></text></g><g><title>aws_hash_table_find [mount-s3] (10 samples, 0.14%)</title><rect x="63.6598%" y="997" width="0.1359%" height="15" fill="rgb(222,72,44)"/><text x="63.9098%" y="1007.50"></text></g><g><title>default_get_host_address_count [mount-s3] (22 samples, 0.30%)</title><rect x="63.6055%" y="1013" width="0.2989%" height="15" fill="rgb(232,159,9)"/><text x="63.8555%" y="1023.50"></text></g><g><title>aws_cached_signing_config_destroy [mount-s3] (8 samples, 0.11%)</title><rect x="63.9859%" y="949" width="0.1087%" height="15" fill="rgb(210,39,32)"/><text x="64.2359%" y="959.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (8 samples, 0.11%)</title><rect x="64.0946%" y="949" width="0.1087%" height="15" fill="rgb(216,194,45)"/><text x="64.3446%" y="959.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn core::ops::function::FnMut&lt;(&amp;mountpoint_s3_crt::http::request_response::Headers,i32)&gt;+Output = ()+core::marker::Send&gt;&gt;&gt; [mount-s3] (9 samples, 0.12%)</title><rect x="64.2576%" y="885" width="0.1223%" height="15" fill="rgb(218,18,35)"/><text x="64.5076%" y="895.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::ops::function::FnMut&lt;(&amp;mountpoint_s3_crt::http::request_response::Headers,i32)&gt;+Output = ()+core::marker::Send&gt;&gt; [mount-s3] (9 samples, 0.12%)</title><rect x="64.2576%" y="869" width="0.1223%" height="15" fill="rgb(207,83,51)"/><text x="64.5076%" y="879.50"></text></g><g><title>inline s_s3_client_remove_meta_request_threaded [mount-s3] (59 samples, 0.80%)</title><rect x="63.9179%" y="1013" width="0.8015%" height="15" fill="rgb(225,63,43)"/><text x="64.1679%" y="1023.50"></text></g><g><title>aws_s3_meta_request_release [mount-s3] (59 samples, 0.80%)</title><rect x="63.9179%" y="997" width="0.8015%" height="15" fill="rgb(207,57,36)"/><text x="64.1679%" y="1007.50"></text></g><g><title>aws_ref_count_release [mount-s3] (59 samples, 0.80%)</title><rect x="63.9179%" y="981" width="0.8015%" height="15" fill="rgb(216,99,33)"/><text x="64.1679%" y="991.50"></text></g><g><title>s_s3_meta_request_destroy [mount-s3] (59 samples, 0.80%)</title><rect x="63.9179%" y="965" width="0.8015%" height="15" fill="rgb(225,42,16)"/><text x="64.1679%" y="975.50"></text></g><g><title>mountpoint_s3_crt::s3::client::meta_request_shutdown_callback [mount-s3] (35 samples, 0.48%)</title><rect x="64.2440%" y="949" width="0.4755%" height="15" fill="rgb(220,201,45)"/><text x="64.4940%" y="959.50"></text></g><g><title>inline core::mem::drop [mount-s3] (35 samples, 0.48%)</title><rect x="64.2440%" y="933" width="0.4755%" height="15" fill="rgb(225,33,4)"/><text x="64.4940%" y="943.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;mountpoint_s3_crt::s3::client::MetaRequestOptionsInner&gt;&gt; [mount-s3] (35 samples, 0.48%)</title><rect x="64.2440%" y="917" width="0.4755%" height="15" fill="rgb(224,33,50)"/><text x="64.4940%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;mountpoint_s3_crt::s3::client::MetaRequestOptionsInner&gt; [mount-s3] (35 samples, 0.48%)</title><rect x="64.2440%" y="901" width="0.4755%" height="15" fill="rgb(246,198,51)"/><text x="64.4940%" y="911.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;core::option::Option&lt;mountpoint_s3_crt::http::request_response::Message&gt;&gt; [mount-s3] (16 samples, 0.22%)</title><rect x="64.5021%" y="885" width="0.2174%" height="15" fill="rgb(205,22,4)"/><text x="64.7521%" y="895.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;mountpoint_s3_crt::http::request_response::Message&gt; [mount-s3] (15 samples, 0.20%)</title><rect x="64.5157%" y="869" width="0.2038%" height="15" fill="rgb(206,3,8)"/><text x="64.7657%" y="879.50"></text></g><g><title>inline &lt;mountpoint_s3_crt::http::request_response::Message as core::ops::drop::Drop&gt;::drop [mount-s3] (15 samples, 0.20%)</title><rect x="64.5157%" y="853" width="0.2038%" height="15" fill="rgb(251,23,15)"/><text x="64.7657%" y="863.50"></text></g><g><title>aws_http_message_release [mount-s3] (15 samples, 0.20%)</title><rect x="64.5157%" y="837" width="0.2038%" height="15" fill="rgb(252,88,28)"/><text x="64.7657%" y="847.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (11 samples, 0.15%)</title><rect x="64.7466%" y="997" width="0.1494%" height="15" fill="rgb(212,127,14)"/><text x="64.9966%" y="1007.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (18 samples, 0.24%)</title><rect x="64.9640%" y="981" width="0.2445%" height="15" fill="rgb(247,145,37)"/><text x="65.2140%" y="991.50"></text></g><g><title>vsnprintf [libc-2.17.so] (11 samples, 0.15%)</title><rect x="65.0591%" y="965" width="0.1494%" height="15" fill="rgb(209,117,53)"/><text x="65.3091%" y="975.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="65.0999%" y="949" width="0.1087%" height="15" fill="rgb(212,90,42)"/><text x="65.3499%" y="959.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (13 samples, 0.18%)</title><rect x="65.2085%" y="965" width="0.1766%" height="15" fill="rgb(218,164,37)"/><text x="65.4585%" y="975.50"></text></g><g><title>s_aws_http_connection_manager_build_transaction [mount-s3] (11 samples, 0.15%)</title><rect x="65.3851%" y="965" width="0.1494%" height="15" fill="rgb(246,65,34)"/><text x="65.6351%" y="975.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (11 samples, 0.15%)</title><rect x="65.3851%" y="949" width="0.1494%" height="15" fill="rgb(231,100,33)"/><text x="65.6351%" y="959.50"></text></g><g><title>aws_http_connection_release [mount-s3] (8 samples, 0.11%)</title><rect x="65.5889%" y="949" width="0.1087%" height="15" fill="rgb(228,126,14)"/><text x="65.8389%" y="959.50"></text></g><g><title>inline s_aws_http_connection_manager_log_snapshot [mount-s3] (10 samples, 0.14%)</title><rect x="65.6976%" y="949" width="0.1359%" height="15" fill="rgb(215,173,21)"/><text x="65.9476%" y="959.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (10 samples, 0.14%)</title><rect x="65.6976%" y="933" width="0.1359%" height="15" fill="rgb(210,6,40)"/><text x="65.9476%" y="943.50"></text></g><g><title>aws_http_connection_manager_release [mount-s3] (47 samples, 0.64%)</title><rect x="65.2085%" y="981" width="0.6385%" height="15" fill="rgb(212,48,18)"/><text x="65.4585%" y="991.50"></text></g><g><title>s_aws_http_connection_manager_execute_transaction [mount-s3] (23 samples, 0.31%)</title><rect x="65.5346%" y="965" width="0.3125%" height="15" fill="rgb(230,214,11)"/><text x="65.7846%" y="975.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;futures_channel::oneshot::Sender&lt;core::result::Result&lt;alloc::vec::Vec&lt;u8&gt;,mountpoint_s3_client::object_client::ObjectClientError&lt;mountpoint_s3_client::object_client::ListObjectsError,mountpoint_s3_client::s3_crt_client::S3RequestError&gt;&gt;&gt;&gt; [mount-s3] (22 samples, 0.30%)</title><rect x="66.1459%" y="901" width="0.2989%" height="15" fill="rgb(254,105,39)"/><text x="66.3959%" y="911.50"></text></g><g><title>inline &lt;futures_channel::oneshot::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop [mount-s3] (22 samples, 0.30%)</title><rect x="66.1459%" y="885" width="0.2989%" height="15" fill="rgb(245,158,5)"/><text x="66.3959%" y="895.50"></text></g><g><title>inline futures_channel::oneshot::Inner&lt;T&gt;::drop_tx [mount-s3] (22 samples, 0.30%)</title><rect x="66.1459%" y="869" width="0.2989%" height="15" fill="rgb(249,208,11)"/><text x="66.3959%" y="879.50"></text></g><g><title>inline core::task::wake::Waker::wake [mount-s3] (22 samples, 0.30%)</title><rect x="66.1459%" y="853" width="0.2989%" height="15" fill="rgb(210,39,28)"/><text x="66.3959%" y="863.50"></text></g><g><title>futures_task::waker::wake_arc_raw [mount-s3] (22 samples, 0.30%)</title><rect x="66.1459%" y="837" width="0.2989%" height="15" fill="rgb(211,56,53)"/><text x="66.3959%" y="847.50"></text></g><g><title>inline futures_task::arc_wake::ArcWake::wake [mount-s3] (22 samples, 0.30%)</title><rect x="66.1459%" y="821" width="0.2989%" height="15" fill="rgb(226,201,30)"/><text x="66.3959%" y="831.50"></text></g><g><title>std::sys::unix::futex::futex_wake [mount-s3] (19 samples, 0.26%)</title><rect x="66.1867%" y="805" width="0.2581%" height="15" fill="rgb(239,101,34)"/><text x="66.4367%" y="815.50"></text></g><g><title>syscall [libc-2.17.so] (19 samples, 0.26%)</title><rect x="66.1867%" y="789" width="0.2581%" height="15" fill="rgb(226,209,5)"/><text x="66.4367%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (19 samples, 0.26%)</title><rect x="66.1867%" y="773" width="0.2581%" height="15" fill="rgb(250,105,47)"/><text x="66.4367%" y="783.50"></text></g><g><title>do_syscall_64 [linux] (19 samples, 0.26%)</title><rect x="66.1867%" y="757" width="0.2581%" height="15" fill="rgb(230,72,3)"/><text x="66.4367%" y="767.50"></text></g><g><title>__x64_sys_futex [linux] (19 samples, 0.26%)</title><rect x="66.1867%" y="741" width="0.2581%" height="15" fill="rgb(232,218,39)"/><text x="66.4367%" y="751.50"></text></g><g><title>do_futex [linux] (19 samples, 0.26%)</title><rect x="66.1867%" y="725" width="0.2581%" height="15" fill="rgb(248,166,6)"/><text x="66.4367%" y="735.50"></text></g><g><title>futex_wake [linux] (18 samples, 0.24%)</title><rect x="66.2002%" y="709" width="0.2445%" height="15" fill="rgb(247,89,20)"/><text x="66.4502%" y="719.50"></text></g><g><title>wake_up_q [linux] (17 samples, 0.23%)</title><rect x="66.2138%" y="693" width="0.2309%" height="15" fill="rgb(248,130,54)"/><text x="66.4638%" y="703.50"></text></g><g><title>try_to_wake_up [linux] (17 samples, 0.23%)</title><rect x="66.2138%" y="677" width="0.2309%" height="15" fill="rgb(234,196,4)"/><text x="66.4638%" y="687.50"></text></g><g><title>__lock_text_start [linux] (17 samples, 0.23%)</title><rect x="66.2138%" y="661" width="0.2309%" height="15" fill="rgb(250,143,31)"/><text x="66.4638%" y="671.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (17 samples, 0.23%)</title><rect x="66.2138%" y="645" width="0.2309%" height="15" fill="rgb(211,110,34)"/><text x="66.4638%" y="655.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (10 samples, 0.14%)</title><rect x="66.5670%" y="645" width="0.1359%" height="15" fill="rgb(215,124,48)"/><text x="66.8170%" y="655.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;futures_channel::oneshot::Sender&lt;core::result::Result&lt;mountpoint_s3_client::object_client::HeadObjectResult,mountpoint_s3_client::object_client::ObjectClientError&lt;mountpoint_s3_client::object_client::HeadObjectError,mountpoint_s3_client::s3_crt_client::S3RequestError&gt;&gt;&gt;&gt; [mount-s3] (20 samples, 0.27%)</title><rect x="66.4448%" y="901" width="0.2717%" height="15" fill="rgb(216,46,13)"/><text x="66.6948%" y="911.50"></text></g><g><title>inline &lt;futures_channel::oneshot::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop [mount-s3] (20 samples, 0.27%)</title><rect x="66.4448%" y="885" width="0.2717%" height="15" fill="rgb(205,184,25)"/><text x="66.6948%" y="895.50"></text></g><g><title>inline futures_channel::oneshot::Inner&lt;T&gt;::drop_tx [mount-s3] (20 samples, 0.27%)</title><rect x="66.4448%" y="869" width="0.2717%" height="15" fill="rgb(228,1,10)"/><text x="66.6948%" y="879.50"></text></g><g><title>inline core::task::wake::Waker::wake [mount-s3] (20 samples, 0.27%)</title><rect x="66.4448%" y="853" width="0.2717%" height="15" fill="rgb(213,116,27)"/><text x="66.6948%" y="863.50"></text></g><g><title>futures_task::waker::wake_arc_raw [mount-s3] (20 samples, 0.27%)</title><rect x="66.4448%" y="837" width="0.2717%" height="15" fill="rgb(241,95,50)"/><text x="66.6948%" y="847.50"></text></g><g><title>inline futures_task::arc_wake::ArcWake::wake [mount-s3] (20 samples, 0.27%)</title><rect x="66.4448%" y="821" width="0.2717%" height="15" fill="rgb(238,48,32)"/><text x="66.6948%" y="831.50"></text></g><g><title>std::sys::unix::futex::futex_wake [mount-s3] (16 samples, 0.22%)</title><rect x="66.4991%" y="805" width="0.2174%" height="15" fill="rgb(235,113,49)"/><text x="66.7491%" y="815.50"></text></g><g><title>syscall [libc-2.17.so] (16 samples, 0.22%)</title><rect x="66.4991%" y="789" width="0.2174%" height="15" fill="rgb(205,127,43)"/><text x="66.7491%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (16 samples, 0.22%)</title><rect x="66.4991%" y="773" width="0.2174%" height="15" fill="rgb(250,162,2)"/><text x="66.7491%" y="783.50"></text></g><g><title>do_syscall_64 [linux] (16 samples, 0.22%)</title><rect x="66.4991%" y="757" width="0.2174%" height="15" fill="rgb(220,13,41)"/><text x="66.7491%" y="767.50"></text></g><g><title>__x64_sys_futex [linux] (16 samples, 0.22%)</title><rect x="66.4991%" y="741" width="0.2174%" height="15" fill="rgb(249,221,25)"/><text x="66.7491%" y="751.50"></text></g><g><title>do_futex [linux] (15 samples, 0.20%)</title><rect x="66.5127%" y="725" width="0.2038%" height="15" fill="rgb(215,208,19)"/><text x="66.7627%" y="735.50"></text></g><g><title>futex_wake [linux] (15 samples, 0.20%)</title><rect x="66.5127%" y="709" width="0.2038%" height="15" fill="rgb(236,175,2)"/><text x="66.7627%" y="719.50"></text></g><g><title>wake_up_q [linux] (11 samples, 0.15%)</title><rect x="66.5670%" y="693" width="0.1494%" height="15" fill="rgb(241,52,2)"/><text x="66.8170%" y="703.50"></text></g><g><title>try_to_wake_up [linux] (11 samples, 0.15%)</title><rect x="66.5670%" y="677" width="0.1494%" height="15" fill="rgb(248,140,14)"/><text x="66.8170%" y="687.50"></text></g><g><title>__lock_text_start [linux] (11 samples, 0.15%)</title><rect x="66.5670%" y="661" width="0.1494%" height="15" fill="rgb(253,22,42)"/><text x="66.8170%" y="671.50"></text></g><g><title>futures_channel::oneshot::Sender&lt;T&gt;::send [mount-s3] (47 samples, 0.64%)</title><rect x="66.1323%" y="917" width="0.6385%" height="15" fill="rgb(234,61,47)"/><text x="66.3823%" y="927.50"></text></g><g><title>inline std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key [mount-s3] (9 samples, 0.12%)</title><rect x="67.2055%" y="885" width="0.1223%" height="15" fill="rgb(208,226,15)"/><text x="67.4555%" y="895.50"></text></g><g><title>inline hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key [mount-s3] (9 samples, 0.12%)</title><rect x="67.2055%" y="869" width="0.1223%" height="15" fill="rgb(217,221,4)"/><text x="67.4555%" y="879.50"></text></g><g><title>inline hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner [mount-s3] (9 samples, 0.12%)</title><rect x="67.2055%" y="853" width="0.1223%" height="15" fill="rgb(212,174,34)"/><text x="67.4555%" y="863.50"></text></g><g><title>mountpoint_s3::metrics::recorder::&lt;impl mountpoint_s3::metrics::ThreadMetricsSinkHandle&gt;::increment_counter [mount-s3] (16 samples, 0.22%)</title><rect x="67.1512%" y="917" width="0.2174%" height="15" fill="rgb(253,83,4)"/><text x="67.4012%" y="927.50"></text></g><g><title>mountpoint_s3::metrics::data::Metrics::get_mut [mount-s3] (12 samples, 0.16%)</title><rect x="67.2055%" y="901" width="0.1630%" height="15" fill="rgb(250,195,49)"/><text x="67.4555%" y="911.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} [mount-s3] (105 samples, 1.43%)</title><rect x="65.9557%" y="949" width="1.4264%" height="15" fill="rgb(241,192,25)"/><text x="66.2057%" y="959.50"></text></g><g><title>inline mountpoint_s3_client::s3_crt_client::S3CrtClient::make_meta_request::{{closure}} [mount-s3] (104 samples, 1.41%)</title><rect x="65.9693%" y="933" width="1.4129%" height="15" fill="rgb(208,124,10)"/><text x="66.2193%" y="943.50"></text></g><g><title>mountpoint_s3_crt::s3::client::meta_request_finish_callback [mount-s3] (108 samples, 1.47%)</title><rect x="65.9557%" y="981" width="1.4672%" height="15" fill="rgb(222,33,0)"/><text x="66.2057%" y="991.50"></text></g><g><title>inline &lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once [mount-s3] (108 samples, 1.47%)</title><rect x="65.9557%" y="965" width="1.4672%" height="15" fill="rgb(234,209,28)"/><text x="66.2057%" y="975.50"></text></g><g><title>mountpoint_s3_crt::s3::client::meta_request_headers_callback [mount-s3] (11 samples, 0.15%)</title><rect x="67.4229%" y="981" width="0.1494%" height="15" fill="rgb(224,11,23)"/><text x="67.6729%" y="991.50"></text></g><g><title>inline &lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut [mount-s3] (11 samples, 0.15%)</title><rect x="67.4229%" y="965" width="0.1494%" height="15" fill="rgb(232,99,1)"/><text x="67.6729%" y="975.50"></text></g><g><title>mountpoint_s3_client::s3_crt_client::S3CrtClient::make_meta_request::{{closure}} [mount-s3] (11 samples, 0.15%)</title><rect x="67.4229%" y="949" width="0.1494%" height="15" fill="rgb(237,95,45)"/><text x="67.6729%" y="959.50"></text></g><g><title>aws_s3_meta_request_finish_default [mount-s3] (195 samples, 2.65%)</title><rect x="64.9504%" y="997" width="2.6491%" height="15" fill="rgb(208,109,11)"/><text x="65.2004%" y="1007.50">aw..</text></g><g><title>s_s3_meta_request_default_update [mount-s3] (213 samples, 2.89%)</title><rect x="64.7195%" y="1013" width="2.8936%" height="15" fill="rgb(216,190,48)"/><text x="64.9695%" y="1023.50">s_..</text></g><g><title>aws_s3_client_update_meta_requests_threaded [mount-s3] (331 samples, 4.50%)</title><rect x="63.5376%" y="1029" width="4.4967%" height="15" fill="rgb(251,171,36)"/><text x="63.7876%" y="1039.50">aws_s..</text></g><g><title>s_schedule_task_common [mount-s3] (31 samples, 0.42%)</title><rect x="67.6131%" y="1013" width="0.4211%" height="15" fill="rgb(230,62,22)"/><text x="67.8631%" y="1023.50"></text></g><g><title>write [libpthread-2.17.so] (28 samples, 0.38%)</title><rect x="67.6539%" y="997" width="0.3804%" height="15" fill="rgb(225,114,35)"/><text x="67.9039%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (27 samples, 0.37%)</title><rect x="67.6674%" y="981" width="0.3668%" height="15" fill="rgb(215,118,42)"/><text x="67.9174%" y="991.50"></text></g><g><title>do_syscall_64 [linux] (27 samples, 0.37%)</title><rect x="67.6674%" y="965" width="0.3668%" height="15" fill="rgb(243,119,21)"/><text x="67.9174%" y="975.50"></text></g><g><title>__x64_sys_write [linux] (25 samples, 0.34%)</title><rect x="67.6946%" y="949" width="0.3396%" height="15" fill="rgb(252,177,53)"/><text x="67.9446%" y="959.50"></text></g><g><title>ksys_write [linux] (25 samples, 0.34%)</title><rect x="67.6946%" y="933" width="0.3396%" height="15" fill="rgb(237,209,29)"/><text x="67.9446%" y="943.50"></text></g><g><title>vfs_write [linux] (23 samples, 0.31%)</title><rect x="67.7218%" y="917" width="0.3125%" height="15" fill="rgb(212,65,23)"/><text x="67.9718%" y="927.50"></text></g><g><title>__vfs_write [linux] (22 samples, 0.30%)</title><rect x="67.7354%" y="901" width="0.2989%" height="15" fill="rgb(230,222,46)"/><text x="67.9854%" y="911.50"></text></g><g><title>eventfd_write [linux] (22 samples, 0.30%)</title><rect x="67.7354%" y="885" width="0.2989%" height="15" fill="rgb(215,135,32)"/><text x="67.9854%" y="895.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (22 samples, 0.30%)</title><rect x="67.7354%" y="869" width="0.2989%" height="15" fill="rgb(246,101,22)"/><text x="67.9854%" y="879.50"></text></g><g><title>s_s3_client_process_work_default [mount-s3] (651 samples, 8.84%)</title><rect x="59.2583%" y="1045" width="8.8439%" height="15" fill="rgb(206,107,13)"/><text x="59.5083%" y="1055.50">s_s3_client_..</text></g><g><title>s_shutdown_task [mount-s3] (9 samples, 0.12%)</title><rect x="68.1293%" y="1045" width="0.1223%" height="15" fill="rgb(250,100,44)"/><text x="68.3793%" y="1055.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (12 samples, 0.16%)</title><rect x="68.4418%" y="965" width="0.1630%" height="15" fill="rgb(231,147,38)"/><text x="68.6918%" y="975.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (13 samples, 0.18%)</title><rect x="68.4418%" y="981" width="0.1766%" height="15" fill="rgb(229,8,40)"/><text x="68.6918%" y="991.50"></text></g><g><title>s_schedule_task_common [mount-s3] (14 samples, 0.19%)</title><rect x="68.4418%" y="997" width="0.1902%" height="15" fill="rgb(221,135,30)"/><text x="68.6918%" y="1007.50"></text></g><g><title>tcp_ack [linux] (8 samples, 0.11%)</title><rect x="68.8086%" y="805" width="0.1087%" height="15" fill="rgb(249,193,18)"/><text x="69.0586%" y="815.50"></text></g><g><title>release_sock [linux] (15 samples, 0.20%)</title><rect x="68.7542%" y="869" width="0.2038%" height="15" fill="rgb(209,133,39)"/><text x="69.0042%" y="879.50"></text></g><g><title>__release_sock [linux] (14 samples, 0.19%)</title><rect x="68.7678%" y="853" width="0.1902%" height="15" fill="rgb(232,100,14)"/><text x="69.0178%" y="863.50"></text></g><g><title>tcp_v4_do_rcv [linux] (14 samples, 0.19%)</title><rect x="68.7678%" y="837" width="0.1902%" height="15" fill="rgb(224,185,1)"/><text x="69.0178%" y="847.50"></text></g><g><title>tcp_rcv_established [linux] (14 samples, 0.19%)</title><rect x="68.7678%" y="821" width="0.1902%" height="15" fill="rgb(223,139,8)"/><text x="69.0178%" y="831.50"></text></g><g><title>__ip_local_out [linux] (9 samples, 0.12%)</title><rect x="69.1754%" y="741" width="0.1223%" height="15" fill="rgb(232,213,38)"/><text x="69.4254%" y="751.50"></text></g><g><title>__tcp_ack_snd_check [linux] (10 samples, 0.14%)</title><rect x="69.4199%" y="421" width="0.1359%" height="15" fill="rgb(207,94,22)"/><text x="69.6699%" y="431.50"></text></g><g><title>tcp_send_ack [linux] (10 samples, 0.14%)</title><rect x="69.4199%" y="405" width="0.1359%" height="15" fill="rgb(219,183,54)"/><text x="69.6699%" y="415.50"></text></g><g><title>__tcp_send_ack.part.0 [linux] (10 samples, 0.14%)</title><rect x="69.4199%" y="389" width="0.1359%" height="15" fill="rgb(216,185,54)"/><text x="69.6699%" y="399.50"></text></g><g><title>__tcp_transmit_skb [linux] (9 samples, 0.12%)</title><rect x="69.4335%" y="373" width="0.1223%" height="15" fill="rgb(254,217,39)"/><text x="69.6835%" y="383.50"></text></g><g><title>ip_queue_xmit [linux] (9 samples, 0.12%)</title><rect x="69.4335%" y="357" width="0.1223%" height="15" fill="rgb(240,178,23)"/><text x="69.6835%" y="367.50"></text></g><g><title>__ip_queue_xmit [linux] (9 samples, 0.12%)</title><rect x="69.4335%" y="341" width="0.1223%" height="15" fill="rgb(218,11,47)"/><text x="69.6835%" y="351.50"></text></g><g><title>ip_local_out [linux] (9 samples, 0.12%)</title><rect x="69.4335%" y="325" width="0.1223%" height="15" fill="rgb(218,51,51)"/><text x="69.6835%" y="335.50"></text></g><g><title>tcp_data_queue [linux] (10 samples, 0.14%)</title><rect x="69.5965%" y="421" width="0.1359%" height="15" fill="rgb(238,126,27)"/><text x="69.8465%" y="431.50"></text></g><g><title>ip_local_deliver_finish [linux] (26 samples, 0.35%)</title><rect x="69.3927%" y="501" width="0.3532%" height="15" fill="rgb(249,202,22)"/><text x="69.6427%" y="511.50"></text></g><g><title>ip_protocol_deliver_rcu [linux] (26 samples, 0.35%)</title><rect x="69.3927%" y="485" width="0.3532%" height="15" fill="rgb(254,195,49)"/><text x="69.6427%" y="495.50"></text></g><g><title>tcp_v4_rcv [linux] (25 samples, 0.34%)</title><rect x="69.4063%" y="469" width="0.3396%" height="15" fill="rgb(208,123,14)"/><text x="69.6563%" y="479.50"></text></g><g><title>tcp_v4_do_rcv [linux] (24 samples, 0.33%)</title><rect x="69.4199%" y="453" width="0.3260%" height="15" fill="rgb(224,200,8)"/><text x="69.6699%" y="463.50"></text></g><g><title>tcp_rcv_established [linux] (24 samples, 0.33%)</title><rect x="69.4199%" y="437" width="0.3260%" height="15" fill="rgb(217,61,36)"/><text x="69.6699%" y="447.50"></text></g><g><title>ip_rcv_finish [linux] (28 samples, 0.38%)</title><rect x="69.3792%" y="533" width="0.3804%" height="15" fill="rgb(206,35,45)"/><text x="69.6292%" y="543.50"></text></g><g><title>ip_local_deliver [linux] (28 samples, 0.38%)</title><rect x="69.3792%" y="517" width="0.3804%" height="15" fill="rgb(217,65,33)"/><text x="69.6292%" y="527.50"></text></g><g><title>net_rx_action [linux] (29 samples, 0.39%)</title><rect x="69.3792%" y="613" width="0.3940%" height="15" fill="rgb(222,158,48)"/><text x="69.6292%" y="623.50"></text></g><g><title>process_backlog [linux] (29 samples, 0.39%)</title><rect x="69.3792%" y="597" width="0.3940%" height="15" fill="rgb(254,2,54)"/><text x="69.6292%" y="607.50"></text></g><g><title>__netif_receive_skb [linux] (29 samples, 0.39%)</title><rect x="69.3792%" y="581" width="0.3940%" height="15" fill="rgb(250,143,38)"/><text x="69.6292%" y="591.50"></text></g><g><title>__netif_receive_skb_one_core [linux] (29 samples, 0.39%)</title><rect x="69.3792%" y="565" width="0.3940%" height="15" fill="rgb(248,25,0)"/><text x="69.6292%" y="575.50"></text></g><g><title>ip_rcv [linux] (29 samples, 0.39%)</title><rect x="69.3792%" y="549" width="0.3940%" height="15" fill="rgb(206,152,27)"/><text x="69.6292%" y="559.50"></text></g><g><title>__local_bh_enable_ip [linux] (33 samples, 0.45%)</title><rect x="69.3384%" y="677" width="0.4483%" height="15" fill="rgb(240,77,30)"/><text x="69.5884%" y="687.50"></text></g><g><title>do_softirq.part.0 [linux] (33 samples, 0.45%)</title><rect x="69.3384%" y="661" width="0.4483%" height="15" fill="rgb(231,5,3)"/><text x="69.5884%" y="671.50"></text></g><g><title>do_softirq_own_stack [linux] (31 samples, 0.42%)</title><rect x="69.3656%" y="645" width="0.4211%" height="15" fill="rgb(207,226,32)"/><text x="69.6156%" y="655.50"></text></g><g><title>__softirqentry_text_start [linux] (31 samples, 0.42%)</title><rect x="69.3656%" y="629" width="0.4211%" height="15" fill="rgb(222,207,47)"/><text x="69.6156%" y="639.50"></text></g><g><title>ip_local_out [linux] (52 samples, 0.71%)</title><rect x="69.1754%" y="757" width="0.7064%" height="15" fill="rgb(229,115,45)"/><text x="69.4254%" y="767.50"></text></g><g><title>ip_output [linux] (43 samples, 0.58%)</title><rect x="69.2976%" y="741" width="0.5842%" height="15" fill="rgb(224,191,6)"/><text x="69.5476%" y="751.50"></text></g><g><title>ip_finish_output [linux] (43 samples, 0.58%)</title><rect x="69.2976%" y="725" width="0.5842%" height="15" fill="rgb(230,227,24)"/><text x="69.5476%" y="735.50"></text></g><g><title>__ip_finish_output [linux] (43 samples, 0.58%)</title><rect x="69.2976%" y="709" width="0.5842%" height="15" fill="rgb(228,80,19)"/><text x="69.5476%" y="719.50"></text></g><g><title>ip_finish_output2 [linux] (42 samples, 0.57%)</title><rect x="69.3112%" y="693" width="0.5706%" height="15" fill="rgb(247,229,0)"/><text x="69.5612%" y="703.50"></text></g><g><title>ip_queue_xmit [linux] (53 samples, 0.72%)</title><rect x="69.1754%" y="789" width="0.7200%" height="15" fill="rgb(237,194,15)"/><text x="69.4254%" y="799.50"></text></g><g><title>__ip_queue_xmit [linux] (53 samples, 0.72%)</title><rect x="69.1754%" y="773" width="0.7200%" height="15" fill="rgb(219,203,20)"/><text x="69.4254%" y="783.50"></text></g><g><title>__tcp_transmit_skb [linux] (55 samples, 0.75%)</title><rect x="69.1618%" y="805" width="0.7472%" height="15" fill="rgb(234,128,8)"/><text x="69.4118%" y="815.50"></text></g><g><title>tcp_push [linux] (66 samples, 0.90%)</title><rect x="69.1482%" y="853" width="0.8966%" height="15" fill="rgb(248,202,8)"/><text x="69.3982%" y="863.50"></text></g><g><title>__tcp_push_pending_frames [linux] (66 samples, 0.90%)</title><rect x="69.1482%" y="837" width="0.8966%" height="15" fill="rgb(206,104,37)"/><text x="69.3982%" y="847.50"></text></g><g><title>tcp_write_xmit [linux] (66 samples, 0.90%)</title><rect x="69.1482%" y="821" width="0.8966%" height="15" fill="rgb(223,8,27)"/><text x="69.3982%" y="831.50"></text></g><g><title>__sys_sendto [linux] (99 samples, 1.34%)</title><rect x="68.7271%" y="933" width="1.3449%" height="15" fill="rgb(216,217,28)"/><text x="68.9771%" y="943.50"></text></g><g><title>sock_sendmsg [linux] (98 samples, 1.33%)</title><rect x="68.7407%" y="917" width="1.3313%" height="15" fill="rgb(249,199,1)"/><text x="68.9907%" y="927.50"></text></g><g><title>inet_sendmsg [linux] (97 samples, 1.32%)</title><rect x="68.7542%" y="901" width="1.3178%" height="15" fill="rgb(240,85,17)"/><text x="69.0042%" y="911.50"></text></g><g><title>tcp_sendmsg [linux] (97 samples, 1.32%)</title><rect x="68.7542%" y="885" width="1.3178%" height="15" fill="rgb(206,108,45)"/><text x="69.0042%" y="895.50"></text></g><g><title>tcp_sendmsg_locked [linux] (79 samples, 1.07%)</title><rect x="68.9988%" y="869" width="1.0732%" height="15" fill="rgb(245,210,41)"/><text x="69.2488%" y="879.50"></text></g><g><title>s_write_outgoing_stream.part.10 [mount-s3] (134 samples, 1.82%)</title><rect x="68.2652%" y="1045" width="1.8204%" height="15" fill="rgb(206,13,37)"/><text x="68.5152%" y="1055.50">s..</text></g><g><title>s_socket_process_write_message [mount-s3] (127 samples, 1.73%)</title><rect x="68.3603%" y="1029" width="1.7253%" height="15" fill="rgb(250,61,18)"/><text x="68.6103%" y="1039.50"></text></g><g><title>s_process_socket_write_requests [mount-s3] (123 samples, 1.67%)</title><rect x="68.4146%" y="1013" width="1.6710%" height="15" fill="rgb(235,172,48)"/><text x="68.6646%" y="1023.50"></text></g><g><title>send [libpthread-2.17.so] (107 samples, 1.45%)</title><rect x="68.6320%" y="997" width="1.4536%" height="15" fill="rgb(249,201,17)"/><text x="68.8820%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (101 samples, 1.37%)</title><rect x="68.7135%" y="981" width="1.3721%" height="15" fill="rgb(219,208,6)"/><text x="68.9635%" y="991.50"></text></g><g><title>do_syscall_64 [linux] (100 samples, 1.36%)</title><rect x="68.7271%" y="965" width="1.3585%" height="15" fill="rgb(248,31,23)"/><text x="68.9771%" y="975.50"></text></g><g><title>__x64_sys_sendto [linux] (100 samples, 1.36%)</title><rect x="68.7271%" y="949" width="1.3585%" height="15" fill="rgb(245,15,42)"/><text x="68.9771%" y="959.50"></text></g><g><title>AwsEventLoop 1 [THREAD=8926] (5,177 samples, 70.33%)</title><rect x="0.0000%" y="1141" width="70.3301%" height="15" fill="rgb(222,217,39)"/><text x="0.2500%" y="1151.50">AwsEventLoop 1 [THREAD=8926]</text></g><g><title>clone [libc-2.17.so] (5,168 samples, 70.21%)</title><rect x="0.1223%" y="1125" width="70.2079%" height="15" fill="rgb(210,219,27)"/><text x="0.3723%" y="1135.50">clone [libc-2.17.so]</text></g><g><title>start_thread [libpthread-2.17.so] (5,168 samples, 70.21%)</title><rect x="0.1223%" y="1109" width="70.2079%" height="15" fill="rgb(252,166,36)"/><text x="0.3723%" y="1119.50">start_thread [libpthread-2.17.so]</text></g><g><title>thread_fn [mount-s3] (5,168 samples, 70.21%)</title><rect x="0.1223%" y="1093" width="70.2079%" height="15" fill="rgb(245,132,34)"/><text x="0.3723%" y="1103.50">thread_fn [mount-s3]</text></g><g><title>aws_event_loop_thread [mount-s3] (5,168 samples, 70.21%)</title><rect x="0.1223%" y="1077" width="70.2079%" height="15" fill="rgb(236,54,3)"/><text x="0.3723%" y="1087.50">aws_event_loop_thread [mount-s3]</text></g><g><title>s_run_all [mount-s3] (2,389 samples, 32.45%)</title><rect x="37.8753%" y="1061" width="32.4548%" height="15" fill="rgb(241,173,43)"/><text x="38.1253%" y="1071.50">s_run_all [mount-s3]</text></g><g><title>s_written_task [mount-s3] (18 samples, 0.24%)</title><rect x="70.0856%" y="1045" width="0.2445%" height="15" fill="rgb(215,190,9)"/><text x="70.3356%" y="1055.50"></text></g><g><title>s_on_socket_write_complete [mount-s3] (12 samples, 0.16%)</title><rect x="70.1671%" y="1029" width="0.1630%" height="15" fill="rgb(242,101,16)"/><text x="70.4171%" y="1039.50"></text></g><g><title>s_schedule_task_common [mount-s3] (12 samples, 0.16%)</title><rect x="70.1671%" y="1013" width="0.1630%" height="15" fill="rgb(223,190,21)"/><text x="70.4171%" y="1023.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (12 samples, 0.16%)</title><rect x="70.1671%" y="997" width="0.1630%" height="15" fill="rgb(215,228,25)"/><text x="70.4171%" y="1007.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (11 samples, 0.15%)</title><rect x="70.1807%" y="981" width="0.1494%" height="15" fill="rgb(225,36,22)"/><text x="70.4307%" y="991.50"></text></g><g><title>aws_high_res_clock_get_ticks [mount-s3] (14 samples, 0.19%)</title><rect x="70.5067%" y="1061" width="0.1902%" height="15" fill="rgb(251,106,46)"/><text x="70.7567%" y="1071.50"></text></g><g><title>__clock_gettime [libc-2.17.so] (12 samples, 0.16%)</title><rect x="70.5339%" y="1045" width="0.1630%" height="15" fill="rgb(208,90,1)"/><text x="70.7839%" y="1055.50"></text></g><g><title>ep_scan_ready_list.constprop.0 [linux] (8 samples, 0.11%)</title><rect x="70.9414%" y="965" width="0.1087%" height="15" fill="rgb(243,10,4)"/><text x="71.1914%" y="975.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (31 samples, 0.42%)</title><rect x="71.2811%" y="885" width="0.4211%" height="15" fill="rgb(212,137,27)"/><text x="71.5311%" y="895.50"></text></g><g><title>schedule_hrtimeout_range [linux] (49 samples, 0.67%)</title><rect x="71.0501%" y="965" width="0.6657%" height="15" fill="rgb(231,220,49)"/><text x="71.3001%" y="975.50"></text></g><g><title>schedule_hrtimeout_range_clock [linux] (47 samples, 0.64%)</title><rect x="71.0773%" y="949" width="0.6385%" height="15" fill="rgb(237,96,20)"/><text x="71.3273%" y="959.50"></text></g><g><title>schedule [linux] (33 samples, 0.45%)</title><rect x="71.2675%" y="933" width="0.4483%" height="15" fill="rgb(239,229,30)"/><text x="71.5175%" y="943.50"></text></g><g><title>__sched_text_start [linux] (32 samples, 0.43%)</title><rect x="71.2811%" y="917" width="0.4347%" height="15" fill="rgb(219,65,33)"/><text x="71.5311%" y="927.50"></text></g><g><title>finish_task_switch [linux] (32 samples, 0.43%)</title><rect x="71.2811%" y="901" width="0.4347%" height="15" fill="rgb(243,134,7)"/><text x="71.5311%" y="911.50"></text></g><g><title>ep_poll [linux] (63 samples, 0.86%)</title><rect x="70.8871%" y="981" width="0.8559%" height="15" fill="rgb(216,177,54)"/><text x="71.1371%" y="991.50"></text></g><g><title>__x64_sys_epoll_wait [linux] (67 samples, 0.91%)</title><rect x="70.8464%" y="1013" width="0.9102%" height="15" fill="rgb(211,160,20)"/><text x="71.0964%" y="1023.50"></text></g><g><title>do_epoll_wait [linux] (67 samples, 0.91%)</title><rect x="70.8464%" y="997" width="0.9102%" height="15" fill="rgb(239,85,39)"/><text x="71.0964%" y="1007.50"></text></g><g><title>epoll_wait [libc-2.17.so] (77 samples, 1.05%)</title><rect x="70.7241%" y="1061" width="1.0461%" height="15" fill="rgb(232,125,22)"/><text x="70.9741%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (68 samples, 0.92%)</title><rect x="70.8464%" y="1045" width="0.9238%" height="15" fill="rgb(244,57,34)"/><text x="71.0964%" y="1055.50"></text></g><g><title>do_syscall_64 [linux] (68 samples, 0.92%)</title><rect x="70.8464%" y="1029" width="0.9238%" height="15" fill="rgb(214,203,32)"/><text x="71.0964%" y="1039.50"></text></g><g><title>aws_mem_calloc [mount-s3] (15 samples, 0.20%)</title><rect x="71.9603%" y="1013" width="0.2038%" height="15" fill="rgb(207,58,43)"/><text x="72.2103%" y="1023.50"></text></g><g><title>s_default_calloc [mount-s3] (15 samples, 0.20%)</title><rect x="71.9603%" y="997" width="0.2038%" height="15" fill="rgb(215,193,15)"/><text x="72.2103%" y="1007.50"></text></g><g><title>s_default_malloc [mount-s3] (15 samples, 0.20%)</title><rect x="71.9603%" y="981" width="0.2038%" height="15" fill="rgb(232,15,44)"/><text x="72.2103%" y="991.50"></text></g><g><title>posix_memalign [libc-2.17.so] (14 samples, 0.19%)</title><rect x="71.9739%" y="965" width="0.1902%" height="15" fill="rgb(212,3,48)"/><text x="72.2239%" y="975.50"></text></g><g><title>__libc_malloc [libc-2.17.so] (14 samples, 0.19%)</title><rect x="71.9739%" y="949" width="0.1902%" height="15" fill="rgb(218,128,7)"/><text x="72.2239%" y="959.50"></text></g><g><title>_int_malloc [libc-2.17.so] (9 samples, 0.12%)</title><rect x="72.0418%" y="933" width="0.1223%" height="15" fill="rgb(226,216,39)"/><text x="72.2918%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled [mount-s3] (8 samples, 0.11%)</title><rect x="72.3407%" y="805" width="0.1087%" height="15" fill="rgb(243,47,51)"/><text x="72.5907%" y="815.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}}::{{closure}} [mount-s3] (12 samples, 0.16%)</title><rect x="72.3135%" y="853" width="0.1630%" height="15" fill="rgb(241,183,40)"/><text x="72.5635%" y="863.50"></text></g><g><title>inline tracing_core::dispatcher::Dispatch::enabled [mount-s3] (10 samples, 0.14%)</title><rect x="72.3407%" y="837" width="0.1359%" height="15" fill="rgb(231,217,32)"/><text x="72.5907%" y="847.50"></text></g><g><title>inline &lt;alloc::sync::Arc&lt;S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled [mount-s3] (10 samples, 0.14%)</title><rect x="72.3407%" y="821" width="0.1359%" height="15" fill="rgb(229,61,38)"/><text x="72.5907%" y="831.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled [mount-s3] (15 samples, 0.20%)</title><rect x="72.2864%" y="949" width="0.2038%" height="15" fill="rgb(225,210,5)"/><text x="72.5364%" y="959.50"></text></g><g><title>inline tracing_log::log_tracer::try_cache_interest [mount-s3] (14 samples, 0.19%)</title><rect x="72.3000%" y="933" width="0.1902%" height="15" fill="rgb(231,79,45)"/><text x="72.5500%" y="943.50"></text></g><g><title>inline &lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}} [mount-s3] (14 samples, 0.19%)</title><rect x="72.3000%" y="917" width="0.1902%" height="15" fill="rgb(224,100,7)"/><text x="72.5500%" y="927.50"></text></g><g><title>tracing_core::dispatcher::get_default [mount-s3] (14 samples, 0.19%)</title><rect x="72.3000%" y="901" width="0.1902%" height="15" fill="rgb(241,198,18)"/><text x="72.5500%" y="911.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (14 samples, 0.19%)</title><rect x="72.3000%" y="885" width="0.1902%" height="15" fill="rgb(252,97,53)"/><text x="72.5500%" y="895.50"></text></g><g><title>inline tracing_core::dispatcher::get_default::{{closure}} [mount-s3] (13 samples, 0.18%)</title><rect x="72.3135%" y="869" width="0.1766%" height="15" fill="rgb(220,88,7)"/><text x="72.5635%" y="879.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (34 samples, 0.46%)</title><rect x="72.1641%" y="997" width="0.4619%" height="15" fill="rgb(213,176,14)"/><text x="72.4141%" y="1007.50"></text></g><g><title>log::__private_api_log [mount-s3] (25 samples, 0.34%)</title><rect x="72.2864%" y="981" width="0.3396%" height="15" fill="rgb(246,73,7)"/><text x="72.5364%" y="991.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log [mount-s3] (25 samples, 0.34%)</title><rect x="72.2864%" y="965" width="0.3396%" height="15" fill="rgb(245,64,36)"/><text x="72.5364%" y="975.50"></text></g><g><title>inline tracing_log::dispatch_record [mount-s3] (10 samples, 0.14%)</title><rect x="72.4902%" y="949" width="0.1359%" height="15" fill="rgb(245,80,10)"/><text x="72.7402%" y="959.50"></text></g><g><title>tracing_core::dispatcher::get_default [mount-s3] (10 samples, 0.14%)</title><rect x="72.4902%" y="933" width="0.1359%" height="15" fill="rgb(232,107,50)"/><text x="72.7402%" y="943.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (10 samples, 0.14%)</title><rect x="72.4902%" y="917" width="0.1359%" height="15" fill="rgb(253,3,0)"/><text x="72.7402%" y="927.50"></text></g><g><title>inline tracing_core::dispatcher::get_default::{{closure}} [mount-s3] (10 samples, 0.14%)</title><rect x="72.4902%" y="901" width="0.1359%" height="15" fill="rgb(212,99,53)"/><text x="72.7402%" y="911.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} [mount-s3] (10 samples, 0.14%)</title><rect x="72.4902%" y="885" width="0.1359%" height="15" fill="rgb(249,111,54)"/><text x="72.7402%" y="895.50"></text></g><g><title>inline tracing_core::dispatcher::Dispatch::event [mount-s3] (8 samples, 0.11%)</title><rect x="72.5173%" y="869" width="0.1087%" height="15" fill="rgb(249,55,30)"/><text x="72.7673%" y="879.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (36 samples, 0.49%)</title><rect x="72.1641%" y="1013" width="0.4891%" height="15" fill="rgb(237,47,42)"/><text x="72.4141%" y="1023.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (12 samples, 0.16%)</title><rect x="72.8162%" y="981" width="0.1630%" height="15" fill="rgb(211,20,18)"/><text x="73.0662%" y="991.50"></text></g><g><title>aws_task_scheduler_schedule_now [mount-s3] (80 samples, 1.09%)</title><rect x="71.9060%" y="1045" width="1.0868%" height="15" fill="rgb(231,203,46)"/><text x="72.1560%" y="1055.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (78 samples, 1.06%)</title><rect x="71.9332%" y="1029" width="1.0596%" height="15" fill="rgb(237,142,3)"/><text x="72.1832%" y="1039.50"></text></g><g><title>vsnprintf [libc-2.17.so] (25 samples, 0.34%)</title><rect x="72.6532%" y="1013" width="0.3396%" height="15" fill="rgb(241,107,1)"/><text x="72.9032%" y="1023.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (24 samples, 0.33%)</title><rect x="72.6668%" y="997" width="0.3260%" height="15" fill="rgb(229,83,13)"/><text x="72.9168%" y="1007.50"></text></g><g><title>__x64_sys_read [linux] (16 samples, 0.22%)</title><rect x="73.2102%" y="997" width="0.2174%" height="15" fill="rgb(241,91,40)"/><text x="73.4602%" y="1007.50"></text></g><g><title>ksys_read [linux] (16 samples, 0.22%)</title><rect x="73.2102%" y="981" width="0.2174%" height="15" fill="rgb(225,3,45)"/><text x="73.4602%" y="991.50"></text></g><g><title>inline s_process_task_pre_queue [mount-s3] (126 samples, 1.71%)</title><rect x="71.7701%" y="1061" width="1.7117%" height="15" fill="rgb(244,223,14)"/><text x="72.0201%" y="1071.50"></text></g><g><title>read [libpthread-2.17.so] (34 samples, 0.46%)</title><rect x="73.0200%" y="1045" width="0.4619%" height="15" fill="rgb(224,124,37)"/><text x="73.2700%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (25 samples, 0.34%)</title><rect x="73.1422%" y="1029" width="0.3396%" height="15" fill="rgb(251,171,30)"/><text x="73.3922%" y="1039.50"></text></g><g><title>do_syscall_64 [linux] (24 samples, 0.33%)</title><rect x="73.1558%" y="1013" width="0.3260%" height="15" fill="rgb(236,46,54)"/><text x="73.4058%" y="1023.50"></text></g><g><title>aws_byte_buf_init [mount-s3] (12 samples, 0.16%)</title><rect x="73.6313%" y="997" width="0.1630%" height="15" fill="rgb(245,213,5)"/><text x="73.8813%" y="1007.50"></text></g><g><title>aws_mem_acquire [mount-s3] (11 samples, 0.15%)</title><rect x="73.6449%" y="981" width="0.1494%" height="15" fill="rgb(230,144,27)"/><text x="73.8949%" y="991.50"></text></g><g><title>s_default_malloc [mount-s3] (11 samples, 0.15%)</title><rect x="73.6449%" y="965" width="0.1494%" height="15" fill="rgb(220,86,6)"/><text x="73.8949%" y="975.50"></text></g><g><title>posix_memalign [libc-2.17.so] (11 samples, 0.15%)</title><rect x="73.6449%" y="949" width="0.1494%" height="15" fill="rgb(240,20,13)"/><text x="73.8949%" y="959.50"></text></g><g><title>__libc_malloc [libc-2.17.so] (11 samples, 0.15%)</title><rect x="73.6449%" y="933" width="0.1494%" height="15" fill="rgb(217,89,34)"/><text x="73.8949%" y="943.50"></text></g><g><title>_int_malloc [libc-2.17.so] (10 samples, 0.14%)</title><rect x="73.6585%" y="917" width="0.1359%" height="15" fill="rgb(229,13,5)"/><text x="73.9085%" y="927.50"></text></g><g><title>aws_signing_state_new [mount-s3] (21 samples, 0.29%)</title><rect x="73.6177%" y="1013" width="0.2853%" height="15" fill="rgb(244,67,35)"/><text x="73.8677%" y="1023.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (10 samples, 0.14%)</title><rect x="73.9573%" y="965" width="0.1359%" height="15" fill="rgb(221,40,2)"/><text x="74.2073%" y="975.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (11 samples, 0.15%)</title><rect x="73.9573%" y="981" width="0.1494%" height="15" fill="rgb(237,157,21)"/><text x="74.2073%" y="991.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (21 samples, 0.29%)</title><rect x="73.9166%" y="997" width="0.2853%" height="15" fill="rgb(222,94,11)"/><text x="74.1666%" y="1007.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (11 samples, 0.15%)</title><rect x="74.2426%" y="981" width="0.1494%" height="15" fill="rgb(249,113,6)"/><text x="74.4926%" y="991.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (9 samples, 0.12%)</title><rect x="74.4192%" y="965" width="0.1223%" height="15" fill="rgb(238,137,36)"/><text x="74.6692%" y="975.50"></text></g><g><title>aws_signing_state_destroy [mount-s3] (12 samples, 0.16%)</title><rect x="74.5415%" y="965" width="0.1630%" height="15" fill="rgb(210,102,26)"/><text x="74.7915%" y="975.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (13 samples, 0.18%)</title><rect x="74.8540%" y="933" width="0.1766%" height="15" fill="rgb(218,30,30)"/><text x="75.1040%" y="943.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (13 samples, 0.18%)</title><rect x="74.8540%" y="917" width="0.1766%" height="15" fill="rgb(214,67,26)"/><text x="75.1040%" y="927.50"></text></g><g><title>_IO_strn_overflow [libc-2.17.so] (14 samples, 0.19%)</title><rect x="75.3566%" y="885" width="0.1902%" height="15" fill="rgb(251,9,53)"/><text x="75.6066%" y="895.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (30 samples, 0.41%)</title><rect x="75.1664%" y="901" width="0.4076%" height="15" fill="rgb(228,204,25)"/><text x="75.4164%" y="911.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (65 samples, 0.88%)</title><rect x="74.7453%" y="949" width="0.8830%" height="15" fill="rgb(207,153,8)"/><text x="74.9953%" y="959.50"></text></g><g><title>vsnprintf [libc-2.17.so] (44 samples, 0.60%)</title><rect x="75.0306%" y="933" width="0.5977%" height="15" fill="rgb(242,9,16)"/><text x="75.2806%" y="943.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (43 samples, 0.58%)</title><rect x="75.0442%" y="917" width="0.5842%" height="15" fill="rgb(217,211,10)"/><text x="75.2942%" y="927.50"></text></g><g><title>_IO_default_xsputn [libc-2.17.so] (12 samples, 0.16%)</title><rect x="75.8185%" y="885" width="0.1630%" height="15" fill="rgb(219,228,52)"/><text x="76.0685%" y="895.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (24 samples, 0.33%)</title><rect x="75.6691%" y="933" width="0.3260%" height="15" fill="rgb(231,92,29)"/><text x="75.9191%" y="943.50"></text></g><g><title>vsnprintf [libc-2.17.so] (18 samples, 0.24%)</title><rect x="75.7506%" y="917" width="0.2445%" height="15" fill="rgb(232,8,23)"/><text x="76.0006%" y="927.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (17 samples, 0.23%)</title><rect x="75.7642%" y="901" width="0.2309%" height="15" fill="rgb(216,211,34)"/><text x="76.0142%" y="911.50"></text></g><g><title>inline s_add_authorization_to_result [mount-s3] (12 samples, 0.16%)</title><rect x="75.9951%" y="933" width="0.1630%" height="15" fill="rgb(236,151,0)"/><text x="76.2451%" y="943.50"></text></g><g><title>inline s_add_signature_property_to_result_set [mount-s3] (9 samples, 0.12%)</title><rect x="76.0359%" y="917" width="0.1223%" height="15" fill="rgb(209,168,3)"/><text x="76.2859%" y="927.50"></text></g><g><title>aws_sha256_hmac_compute [mount-s3] (18 samples, 0.24%)</title><rect x="76.2804%" y="901" width="0.2445%" height="15" fill="rgb(208,129,28)"/><text x="76.5304%" y="911.50"></text></g><g><title>aws_hmac_finalize [mount-s3] (22 samples, 0.30%)</title><rect x="76.5793%" y="869" width="0.2989%" height="15" fill="rgb(229,78,22)"/><text x="76.8293%" y="879.50"></text></g><g><title>s_finalize [mount-s3] (22 samples, 0.30%)</title><rect x="76.5793%" y="853" width="0.2989%" height="15" fill="rgb(228,187,13)"/><text x="76.8293%" y="863.50"></text></g><g><title>HMAC_Final [mount-s3] (22 samples, 0.30%)</title><rect x="76.5793%" y="837" width="0.2989%" height="15" fill="rgb(240,119,24)"/><text x="76.8293%" y="847.50"></text></g><g><title>sha256_final_impl [mount-s3] (22 samples, 0.30%)</title><rect x="76.5793%" y="821" width="0.2989%" height="15" fill="rgb(209,194,42)"/><text x="76.8293%" y="831.50"></text></g><g><title>inline crypto_md32_final [mount-s3] (20 samples, 0.27%)</title><rect x="76.6064%" y="805" width="0.2717%" height="15" fill="rgb(247,200,46)"/><text x="76.8564%" y="815.50"></text></g><g><title>sha256_block_data_order_avx [mount-s3] (18 samples, 0.24%)</title><rect x="76.6336%" y="789" width="0.2445%" height="15" fill="rgb(218,76,16)"/><text x="76.8836%" y="799.50"></text></g><g><title>HMAC_Init_ex [mount-s3] (12 samples, 0.16%)</title><rect x="77.0276%" y="853" width="0.1630%" height="15" fill="rgb(225,21,48)"/><text x="77.2776%" y="863.50"></text></g><g><title>SHA256_Update [mount-s3] (11 samples, 0.15%)</title><rect x="77.0412%" y="837" width="0.1494%" height="15" fill="rgb(239,223,50)"/><text x="77.2912%" y="847.50"></text></g><g><title>inline crypto_md32_update [mount-s3] (11 samples, 0.15%)</title><rect x="77.0412%" y="821" width="0.1494%" height="15" fill="rgb(244,45,21)"/><text x="77.2912%" y="831.50"></text></g><g><title>sha256_block_data_order_avx [mount-s3] (11 samples, 0.15%)</title><rect x="77.0412%" y="805" width="0.1494%" height="15" fill="rgb(232,33,43)"/><text x="77.2912%" y="815.50"></text></g><g><title>aws_sha256_hmac_default_new [mount-s3] (23 samples, 0.31%)</title><rect x="76.9053%" y="869" width="0.3125%" height="15" fill="rgb(209,8,3)"/><text x="77.1553%" y="879.50"></text></g><g><title>aws_sha256_hmac_compute [mount-s3] (57 samples, 0.77%)</title><rect x="76.5793%" y="885" width="0.7744%" height="15" fill="rgb(214,25,53)"/><text x="76.8293%" y="895.50"></text></g><g><title>aws_signing_build_authorization_value [mount-s3] (127 samples, 1.73%)</title><rect x="75.6419%" y="949" width="1.7253%" height="15" fill="rgb(254,186,54)"/><text x="75.8919%" y="959.50"></text></g><g><title>s_calculate_signature_value [mount-s3] (86 samples, 1.17%)</title><rect x="76.1989%" y="933" width="1.1683%" height="15" fill="rgb(208,174,49)"/><text x="76.4489%" y="943.50"></text></g><g><title>inline s_calculate_sigv4_signature_value [mount-s3] (86 samples, 1.17%)</title><rect x="76.1989%" y="917" width="1.1683%" height="15" fill="rgb(233,191,51)"/><text x="76.4489%" y="927.50"></text></g><g><title>inline s_compute_sigv4_signing_key [mount-s3] (62 samples, 0.84%)</title><rect x="76.5249%" y="901" width="0.8423%" height="15" fill="rgb(222,134,10)"/><text x="76.7749%" y="911.50"></text></g><g><title>aws_string_new_from_array [mount-s3] (8 samples, 0.11%)</title><rect x="77.8834%" y="885" width="0.1087%" height="15" fill="rgb(230,226,20)"/><text x="78.1334%" y="895.50"></text></g><g><title>inline s_append_canonical_query_string [mount-s3] (31 samples, 0.42%)</title><rect x="77.6389%" y="917" width="0.4211%" height="15" fill="rgb(251,111,25)"/><text x="77.8889%" y="927.50"></text></g><g><title>s_transform_query_params [mount-s3] (20 samples, 0.27%)</title><rect x="77.7883%" y="901" width="0.2717%" height="15" fill="rgb(224,40,46)"/><text x="78.0383%" y="911.50"></text></g><g><title>inline s_append_canonical_header [mount-s3] (9 samples, 0.12%)</title><rect x="78.1416%" y="885" width="0.1223%" height="15" fill="rgb(236,108,47)"/><text x="78.3916%" y="895.50"></text></g><g><title>aws_signing_result_append_property_list [mount-s3] (11 samples, 0.15%)</title><rect x="78.3182%" y="853" width="0.1494%" height="15" fill="rgb(234,93,0)"/><text x="78.5682%" y="863.50"></text></g><g><title>inline s_get_or_create_property_list [mount-s3] (8 samples, 0.11%)</title><rect x="78.3589%" y="837" width="0.1087%" height="15" fill="rgb(224,213,32)"/><text x="78.6089%" y="847.50"></text></g><g><title>inline s_build_canonical_stable_header_list [mount-s3] (16 samples, 0.22%)</title><rect x="78.2638%" y="885" width="0.2174%" height="15" fill="rgb(251,11,48)"/><text x="78.5138%" y="895.50"></text></g><g><title>s_add_authorization_header [mount-s3] (13 samples, 0.18%)</title><rect x="78.3046%" y="869" width="0.1766%" height="15" fill="rgb(236,173,5)"/><text x="78.5546%" y="879.50"></text></g><g><title>qsort_r [libc-2.17.so] (9 samples, 0.12%)</title><rect x="78.5219%" y="885" width="0.1223%" height="15" fill="rgb(230,95,12)"/><text x="78.7719%" y="895.50"></text></g><g><title>inline s_build_canonical_headers [mount-s3] (44 samples, 0.60%)</title><rect x="78.0600%" y="917" width="0.5977%" height="15" fill="rgb(232,209,1)"/><text x="78.3100%" y="927.50"></text></g><g><title>s_canonicalize_headers [mount-s3] (44 samples, 0.60%)</title><rect x="78.0600%" y="901" width="0.5977%" height="15" fill="rgb(232,6,1)"/><text x="78.3100%" y="911.50"></text></g><g><title>s_build_canonical_request_hash [mount-s3] (36 samples, 0.49%)</title><rect x="78.6714%" y="917" width="0.4891%" height="15" fill="rgb(210,224,50)"/><text x="78.9214%" y="927.50"></text></g><g><title>aws_sha256_compute [mount-s3] (33 samples, 0.45%)</title><rect x="78.7121%" y="901" width="0.4483%" height="15" fill="rgb(228,127,35)"/><text x="78.9621%" y="911.50"></text></g><g><title>inline compute_hash [mount-s3] (25 samples, 0.34%)</title><rect x="78.8208%" y="885" width="0.3396%" height="15" fill="rgb(245,102,45)"/><text x="79.0708%" y="895.50"></text></g><g><title>s_update [mount-s3] (20 samples, 0.27%)</title><rect x="78.8887%" y="869" width="0.2717%" height="15" fill="rgb(214,1,49)"/><text x="79.1387%" y="879.50"></text></g><g><title>EVP_DigestUpdate [mount-s3] (19 samples, 0.26%)</title><rect x="78.9023%" y="853" width="0.2581%" height="15" fill="rgb(226,163,40)"/><text x="79.1523%" y="863.50"></text></g><g><title>SHA256_Update [mount-s3] (19 samples, 0.26%)</title><rect x="78.9023%" y="837" width="0.2581%" height="15" fill="rgb(239,212,28)"/><text x="79.1523%" y="847.50"></text></g><g><title>inline crypto_md32_update [mount-s3] (19 samples, 0.26%)</title><rect x="78.9023%" y="821" width="0.2581%" height="15" fill="rgb(220,20,13)"/><text x="79.1523%" y="831.50"></text></g><g><title>sha256_block_data_order_avx [mount-s3] (18 samples, 0.24%)</title><rect x="78.9159%" y="805" width="0.2445%" height="15" fill="rgb(210,164,35)"/><text x="79.1659%" y="815.50"></text></g><g><title>aws_signing_build_canonical_request [mount-s3] (135 samples, 1.83%)</title><rect x="77.3672%" y="949" width="1.8340%" height="15" fill="rgb(248,109,41)"/><text x="77.6172%" y="959.50">a..</text></g><g><title>s_build_canonical_request_sigv4 [mount-s3] (122 samples, 1.66%)</title><rect x="77.5438%" y="933" width="1.6574%" height="15" fill="rgb(238,23,50)"/><text x="77.7938%" y="943.50"></text></g><g><title>s_s3_meta_request_request_on_signed [mount-s3] (12 samples, 0.16%)</title><rect x="79.2284%" y="949" width="0.1630%" height="15" fill="rgb(211,48,49)"/><text x="79.4784%" y="959.50"></text></g><g><title>aws_apply_signing_result_to_http_request [mount-s3] (11 samples, 0.15%)</title><rect x="79.2420%" y="933" width="0.1494%" height="15" fill="rgb(223,36,21)"/><text x="79.4920%" y="943.50"></text></g><g><title>__x64_sys_write [linux] (20 samples, 0.27%)</title><rect x="79.5816%" y="821" width="0.2717%" height="15" fill="rgb(207,123,46)"/><text x="79.8316%" y="831.50"></text></g><g><title>ksys_write [linux] (19 samples, 0.26%)</title><rect x="79.5952%" y="805" width="0.2581%" height="15" fill="rgb(240,218,32)"/><text x="79.8452%" y="815.50"></text></g><g><title>vfs_write [linux] (19 samples, 0.26%)</title><rect x="79.5952%" y="789" width="0.2581%" height="15" fill="rgb(252,5,43)"/><text x="79.8452%" y="799.50"></text></g><g><title>__vfs_write [linux] (19 samples, 0.26%)</title><rect x="79.5952%" y="773" width="0.2581%" height="15" fill="rgb(252,84,19)"/><text x="79.8452%" y="783.50"></text></g><g><title>eventfd_write [linux] (19 samples, 0.26%)</title><rect x="79.5952%" y="757" width="0.2581%" height="15" fill="rgb(243,152,39)"/><text x="79.8452%" y="767.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (19 samples, 0.26%)</title><rect x="79.5952%" y="741" width="0.2581%" height="15" fill="rgb(234,160,15)"/><text x="79.8452%" y="751.50"></text></g><g><title>aws_sign_request_aws [mount-s3] (462 samples, 6.28%)</title><rect x="73.5905%" y="1029" width="6.2763%" height="15" fill="rgb(237,34,20)"/><text x="73.8405%" y="1039.50">aws_sign..</text></g><g><title>s_credentials_provider_default_chain_get_credentials_async [mount-s3] (439 samples, 5.96%)</title><rect x="73.9030%" y="1013" width="5.9639%" height="15" fill="rgb(229,97,13)"/><text x="74.1530%" y="1023.50">s_creden..</text></g><g><title>s_cached_credentials_provider_get_credentials_async [mount-s3] (416 samples, 5.65%)</title><rect x="74.2155%" y="997" width="5.6514%" height="15" fill="rgb(234,71,50)"/><text x="74.4655%" y="1007.50">s_cache..</text></g><g><title>s_aws_provider_default_chain_callback [mount-s3] (401 samples, 5.45%)</title><rect x="74.4192%" y="981" width="5.4476%" height="15" fill="rgb(253,155,4)"/><text x="74.6692%" y="991.50">s_aws_p..</text></g><g><title>s_perform_signing [mount-s3] (380 samples, 5.16%)</title><rect x="74.7045%" y="965" width="5.1623%" height="15" fill="rgb(222,185,37)"/><text x="74.9545%" y="975.50">s_perf..</text></g><g><title>s_s3_prepare_request_payload_callback_and_destroy [mount-s3] (35 samples, 0.48%)</title><rect x="79.3914%" y="949" width="0.4755%" height="15" fill="rgb(251,177,13)"/><text x="79.6414%" y="959.50"></text></g><g><title>s_s3_client_prepare_callback_queue_request [mount-s3] (32 samples, 0.43%)</title><rect x="79.4321%" y="933" width="0.4347%" height="15" fill="rgb(250,179,40)"/><text x="79.6821%" y="943.50"></text></g><g><title>inline s_s3_client_schedule_process_work_synced [mount-s3] (32 samples, 0.43%)</title><rect x="79.4321%" y="917" width="0.4347%" height="15" fill="rgb(242,44,2)"/><text x="79.6821%" y="927.50"></text></g><g><title>s_s3_client_schedule_process_work_synced_default [mount-s3] (32 samples, 0.43%)</title><rect x="79.4321%" y="901" width="0.4347%" height="15" fill="rgb(216,177,13)"/><text x="79.6821%" y="911.50"></text></g><g><title>s_schedule_task_common [mount-s3] (32 samples, 0.43%)</title><rect x="79.4321%" y="885" width="0.4347%" height="15" fill="rgb(216,106,43)"/><text x="79.6821%" y="895.50"></text></g><g><title>write [libpthread-2.17.so] (30 samples, 0.41%)</title><rect x="79.4593%" y="869" width="0.4076%" height="15" fill="rgb(216,183,2)"/><text x="79.7093%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (25 samples, 0.34%)</title><rect x="79.5272%" y="853" width="0.3396%" height="15" fill="rgb(249,75,3)"/><text x="79.7772%" y="863.50"></text></g><g><title>do_syscall_64 [linux] (25 samples, 0.34%)</title><rect x="79.5272%" y="837" width="0.3396%" height="15" fill="rgb(219,67,39)"/><text x="79.7772%" y="847.50"></text></g><g><title>aws_gmtime [mount-s3] (11 samples, 0.15%)</title><rect x="79.9076%" y="965" width="0.1494%" height="15" fill="rgb(253,228,2)"/><text x="80.1576%" y="975.50"></text></g><g><title>__tz_convert [libc-2.17.so] (9 samples, 0.12%)</title><rect x="79.9348%" y="949" width="0.1223%" height="15" fill="rgb(235,138,27)"/><text x="80.1848%" y="959.50"></text></g><g><title>_IO_sscanf [libc-2.17.so] (20 samples, 0.27%)</title><rect x="80.0706%" y="901" width="0.2717%" height="15" fill="rgb(236,97,51)"/><text x="80.3206%" y="911.50"></text></g><g><title>vsscanf [libc-2.17.so] (20 samples, 0.27%)</title><rect x="80.0706%" y="885" width="0.2717%" height="15" fill="rgb(240,80,30)"/><text x="80.3206%" y="895.50"></text></g><g><title>_IO_vfscanf [libc-2.17.so] (17 samples, 0.23%)</title><rect x="80.1114%" y="869" width="0.2309%" height="15" fill="rgb(230,178,19)"/><text x="80.3614%" y="879.50"></text></g><g><title>aws_s3_meta_request_sign_request_default [mount-s3] (500 samples, 6.79%)</title><rect x="73.5905%" y="1045" width="6.7926%" height="15" fill="rgb(210,190,27)"/><text x="73.8405%" y="1055.50">aws_s3_me..</text></g><g><title>inline s_s3_meta_request_init_signing_date_time [mount-s3] (35 samples, 0.48%)</title><rect x="79.9076%" y="1029" width="0.4755%" height="15" fill="rgb(222,107,31)"/><text x="80.1576%" y="1039.50"></text></g><g><title>aws_date_time_init_now [mount-s3] (35 samples, 0.48%)</title><rect x="79.9076%" y="1013" width="0.4755%" height="15" fill="rgb(216,127,34)"/><text x="80.1576%" y="1023.50"></text></g><g><title>aws_date_time_init_epoch_millis [mount-s3] (35 samples, 0.48%)</title><rect x="79.9076%" y="997" width="0.4755%" height="15" fill="rgb(234,116,52)"/><text x="80.1576%" y="1007.50"></text></g><g><title>s_get_time_struct [mount-s3] (35 samples, 0.48%)</title><rect x="79.9076%" y="981" width="0.4755%" height="15" fill="rgb(222,124,15)"/><text x="80.1576%" y="991.50"></text></g><g><title>aws_localtime [mount-s3] (24 samples, 0.33%)</title><rect x="80.0571%" y="965" width="0.3260%" height="15" fill="rgb(231,179,28)"/><text x="80.3071%" y="975.50"></text></g><g><title>__tz_convert [libc-2.17.so] (24 samples, 0.33%)</title><rect x="80.0571%" y="949" width="0.3260%" height="15" fill="rgb(226,93,45)"/><text x="80.3071%" y="959.50"></text></g><g><title>__tzfile_compute [libc-2.17.so] (24 samples, 0.33%)</title><rect x="80.0571%" y="933" width="0.3260%" height="15" fill="rgb(215,8,51)"/><text x="80.3071%" y="943.50"></text></g><g><title>__tzset_parse_tz [libc-2.17.so] (24 samples, 0.33%)</title><rect x="80.0571%" y="917" width="0.3260%" height="15" fill="rgb(223,106,5)"/><text x="80.3071%" y="927.50"></text></g><g><title>aws_task_run [mount-s3] (18 samples, 0.24%)</title><rect x="80.3831%" y="1045" width="0.2445%" height="15" fill="rgb(250,191,5)"/><text x="80.6331%" y="1055.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (18 samples, 0.24%)</title><rect x="80.3831%" y="1029" width="0.2445%" height="15" fill="rgb(242,132,44)"/><text x="80.6331%" y="1039.50"></text></g><g><title>vsnprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="80.5054%" y="1013" width="0.1223%" height="15" fill="rgb(251,152,29)"/><text x="80.7554%" y="1023.50"></text></g><g><title>_IO_vfprintf [libc-2.17.so] (9 samples, 0.12%)</title><rect x="80.5054%" y="997" width="0.1223%" height="15" fill="rgb(218,179,5)"/><text x="80.7554%" y="1007.50"></text></g><g><title>aws_http_headers_clear [mount-s3] (10 samples, 0.14%)</title><rect x="80.7091%" y="965" width="0.1359%" height="15" fill="rgb(227,67,19)"/><text x="80.9591%" y="975.50"></text></g><g><title>aws_http_headers_release [mount-s3] (11 samples, 0.15%)</title><rect x="80.7091%" y="981" width="0.1494%" height="15" fill="rgb(233,119,31)"/><text x="80.9591%" y="991.50"></text></g><g><title>inline s_s3_request_clean_up_send_data_message [mount-s3] (9 samples, 0.12%)</title><rect x="80.8722%" y="981" width="0.1223%" height="15" fill="rgb(241,120,22)"/><text x="81.1222%" y="991.50"></text></g><g><title>aws_http_message_release [mount-s3] (9 samples, 0.12%)</title><rect x="80.8722%" y="965" width="0.1223%" height="15" fill="rgb(224,102,30)"/><text x="81.1222%" y="975.50"></text></g><g><title>aws_ref_count_release [mount-s3] (26 samples, 0.35%)</title><rect x="80.6548%" y="1029" width="0.3532%" height="15" fill="rgb(210,164,37)"/><text x="80.9048%" y="1039.50"></text></g><g><title>s_s3_request_destroy [mount-s3] (25 samples, 0.34%)</title><rect x="80.6684%" y="1013" width="0.3396%" height="15" fill="rgb(226,191,16)"/><text x="80.9184%" y="1023.50"></text></g><g><title>aws_s3_request_clean_up_send_data [mount-s3] (24 samples, 0.33%)</title><rect x="80.6820%" y="997" width="0.3260%" height="15" fill="rgb(214,40,45)"/><text x="80.9320%" y="1007.50"></text></g><g><title>__vfs_write [linux] (16 samples, 0.22%)</title><rect x="81.1031%" y="869" width="0.2174%" height="15" fill="rgb(244,29,26)"/><text x="81.3531%" y="879.50"></text></g><g><title>eventfd_write [linux] (16 samples, 0.22%)</title><rect x="81.1031%" y="853" width="0.2174%" height="15" fill="rgb(216,16,5)"/><text x="81.3531%" y="863.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (16 samples, 0.22%)</title><rect x="81.1031%" y="837" width="0.2174%" height="15" fill="rgb(249,76,35)"/><text x="81.3531%" y="847.50"></text></g><g><title>__x64_sys_write [linux] (18 samples, 0.24%)</title><rect x="81.0895%" y="917" width="0.2445%" height="15" fill="rgb(207,11,44)"/><text x="81.3395%" y="927.50"></text></g><g><title>ksys_write [linux] (18 samples, 0.24%)</title><rect x="81.0895%" y="901" width="0.2445%" height="15" fill="rgb(228,190,49)"/><text x="81.3395%" y="911.50"></text></g><g><title>vfs_write [linux] (17 samples, 0.23%)</title><rect x="81.1031%" y="885" width="0.2309%" height="15" fill="rgb(214,173,12)"/><text x="81.3531%" y="895.50"></text></g><g><title>aws_s3_client_schedule_process_work [mount-s3] (26 samples, 0.35%)</title><rect x="81.0080%" y="1029" width="0.3532%" height="15" fill="rgb(218,26,35)"/><text x="81.2580%" y="1039.50"></text></g><g><title>inline s_s3_client_schedule_process_work_synced [mount-s3] (24 samples, 0.33%)</title><rect x="81.0352%" y="1013" width="0.3260%" height="15" fill="rgb(220,200,19)"/><text x="81.2852%" y="1023.50"></text></g><g><title>s_s3_client_schedule_process_work_synced_default [mount-s3] (24 samples, 0.33%)</title><rect x="81.0352%" y="997" width="0.3260%" height="15" fill="rgb(239,95,49)"/><text x="81.2852%" y="1007.50"></text></g><g><title>s_schedule_task_common [mount-s3] (23 samples, 0.31%)</title><rect x="81.0488%" y="981" width="0.3125%" height="15" fill="rgb(235,85,53)"/><text x="81.2988%" y="991.50"></text></g><g><title>write [libpthread-2.17.so] (23 samples, 0.31%)</title><rect x="81.0488%" y="965" width="0.3125%" height="15" fill="rgb(233,133,31)"/><text x="81.2988%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (22 samples, 0.30%)</title><rect x="81.0624%" y="949" width="0.2989%" height="15" fill="rgb(218,25,20)"/><text x="81.3124%" y="959.50"></text></g><g><title>do_syscall_64 [linux] (22 samples, 0.30%)</title><rect x="81.0624%" y="933" width="0.2989%" height="15" fill="rgb(252,210,38)"/><text x="81.3124%" y="943.50"></text></g><g><title>inline &lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut [mount-s3] (28 samples, 0.38%)</title><rect x="81.4292%" y="1013" width="0.3804%" height="15" fill="rgb(242,134,21)"/><text x="81.6792%" y="1023.50"></text></g><g><title>mountpoint_s3_client::s3_crt_client::S3CrtClient::make_meta_request::{{closure}} [mount-s3] (28 samples, 0.38%)</title><rect x="81.4292%" y="997" width="0.3804%" height="15" fill="rgb(213,28,48)"/><text x="81.6792%" y="1007.50"></text></g><g><title>s_s3_meta_request_body_streaming_task [mount-s3] (87 samples, 1.18%)</title><rect x="80.6412%" y="1045" width="1.1819%" height="15" fill="rgb(250,196,2)"/><text x="80.8912%" y="1055.50"></text></g><g><title>mountpoint_s3_crt::s3::client::meta_request_receive_body_callback [mount-s3] (31 samples, 0.42%)</title><rect x="81.4020%" y="1029" width="0.4211%" height="15" fill="rgb(227,5,17)"/><text x="81.6520%" y="1039.50"></text></g><g><title>aws_s3_add_user_agent_header [mount-s3] (10 samples, 0.14%)</title><rect x="81.8367%" y="1029" width="0.1359%" height="15" fill="rgb(221,226,24)"/><text x="82.0867%" y="1039.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (8 samples, 0.11%)</title><rect x="81.9997%" y="1013" width="0.1087%" height="15" fill="rgb(211,5,48)"/><text x="82.2497%" y="1023.50"></text></g><g><title>aws_http_message_new_request [mount-s3] (9 samples, 0.12%)</title><rect x="82.2171%" y="997" width="0.1223%" height="15" fill="rgb(219,150,6)"/><text x="82.4671%" y="1007.50"></text></g><g><title>inline s_message_new_request_common [mount-s3] (9 samples, 0.12%)</title><rect x="82.2171%" y="981" width="0.1223%" height="15" fill="rgb(251,46,16)"/><text x="82.4671%" y="991.50"></text></g><g><title>s_message_new_common [mount-s3] (8 samples, 0.11%)</title><rect x="82.2307%" y="965" width="0.1087%" height="15" fill="rgb(220,204,40)"/><text x="82.4807%" y="975.50"></text></g><g><title>aws_s3_message_util_copy_http_message_no_body_filter_headers [mount-s3] (20 samples, 0.27%)</title><rect x="82.1899%" y="1013" width="0.2717%" height="15" fill="rgb(211,85,2)"/><text x="82.4399%" y="1023.50"></text></g><g><title>aws_s3_message_util_copy_headers [mount-s3] (9 samples, 0.12%)</title><rect x="82.3394%" y="997" width="0.1223%" height="15" fill="rgb(229,17,7)"/><text x="82.5894%" y="1007.50"></text></g><g><title>AwsEventLoop 1 [THREAD=8927] (894 samples, 12.15%)</title><rect x="70.3301%" y="1141" width="12.1451%" height="15" fill="rgb(239,72,28)"/><text x="70.5801%" y="1151.50">AwsEventLoop 1 [TH..</text></g><g><title>clone [libc-2.17.so] (886 samples, 12.04%)</title><rect x="70.4388%" y="1125" width="12.0364%" height="15" fill="rgb(230,47,54)"/><text x="70.6888%" y="1135.50">clone [libc-2.17.s..</text></g><g><title>start_thread [libpthread-2.17.so] (886 samples, 12.04%)</title><rect x="70.4388%" y="1109" width="12.0364%" height="15" fill="rgb(214,50,8)"/><text x="70.6888%" y="1119.50">start_thread [libp..</text></g><g><title>thread_fn [mount-s3] (886 samples, 12.04%)</title><rect x="70.4388%" y="1093" width="12.0364%" height="15" fill="rgb(216,198,43)"/><text x="70.6888%" y="1103.50">thread_fn [mount-s..</text></g><g><title>aws_event_loop_thread [mount-s3] (886 samples, 12.04%)</title><rect x="70.4388%" y="1077" width="12.0364%" height="15" fill="rgb(234,20,35)"/><text x="70.6888%" y="1087.50">aws_event_loop_thr..</text></g><g><title>s_run_all [mount-s3] (657 samples, 8.93%)</title><rect x="73.5498%" y="1061" width="8.9254%" height="15" fill="rgb(254,45,19)"/><text x="73.7998%" y="1071.50">s_run_all [mo..</text></g><g><title>s_s3_meta_request_prepare_request_task [mount-s3] (48 samples, 0.65%)</title><rect x="81.8231%" y="1045" width="0.6521%" height="15" fill="rgb(219,14,44)"/><text x="82.0731%" y="1055.50"></text></g><g><title>s_s3_meta_request_default_prepare_request [mount-s3] (37 samples, 0.50%)</title><rect x="81.9726%" y="1029" width="0.5026%" height="15" fill="rgb(217,220,26)"/><text x="82.2226%" y="1039.50"></text></g><g><title>fuse_dev_do_read.isra.0.constprop.0 [linux:fuse] (31 samples, 0.42%)</title><rect x="82.8012%" y="725" width="0.4211%" height="15" fill="rgb(213,158,28)"/><text x="83.0512%" y="735.50"></text></g><g><title>schedule [linux] (16 samples, 0.22%)</title><rect x="83.0050%" y="709" width="0.2174%" height="15" fill="rgb(252,51,52)"/><text x="83.2550%" y="719.50"></text></g><g><title>__sched_text_start [linux] (16 samples, 0.22%)</title><rect x="83.0050%" y="693" width="0.2174%" height="15" fill="rgb(246,89,16)"/><text x="83.2550%" y="703.50"></text></g><g><title>finish_task_switch [linux] (16 samples, 0.22%)</title><rect x="83.0050%" y="677" width="0.2174%" height="15" fill="rgb(216,158,49)"/><text x="83.2550%" y="687.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (16 samples, 0.22%)</title><rect x="83.0050%" y="661" width="0.2174%" height="15" fill="rgb(236,107,19)"/><text x="83.2550%" y="671.50"></text></g><g><title>__x64_sys_read [linux] (41 samples, 0.56%)</title><rect x="82.6926%" y="821" width="0.5570%" height="15" fill="rgb(228,185,30)"/><text x="82.9426%" y="831.50"></text></g><g><title>ksys_read [linux] (41 samples, 0.56%)</title><rect x="82.6926%" y="805" width="0.5570%" height="15" fill="rgb(246,134,8)"/><text x="82.9426%" y="815.50"></text></g><g><title>vfs_read [linux] (41 samples, 0.56%)</title><rect x="82.6926%" y="789" width="0.5570%" height="15" fill="rgb(214,143,50)"/><text x="82.9426%" y="799.50"></text></g><g><title>__vfs_read [linux] (38 samples, 0.52%)</title><rect x="82.7333%" y="773" width="0.5162%" height="15" fill="rgb(228,75,8)"/><text x="82.9833%" y="783.50"></text></g><g><title>new_sync_read [linux] (35 samples, 0.48%)</title><rect x="82.7741%" y="757" width="0.4755%" height="15" fill="rgb(207,175,4)"/><text x="83.0241%" y="767.50"></text></g><g><title>fuse_dev_read [linux:fuse] (34 samples, 0.46%)</title><rect x="82.7877%" y="741" width="0.4619%" height="15" fill="rgb(205,108,24)"/><text x="83.0377%" y="751.50"></text></g><g><title>fuser::channel::Channel::receive [mount-s3] (44 samples, 0.60%)</title><rect x="82.6654%" y="885" width="0.5977%" height="15" fill="rgb(244,120,49)"/><text x="82.9154%" y="895.50"></text></g><g><title>read [libpthread-2.17.so] (44 samples, 0.60%)</title><rect x="82.6654%" y="869" width="0.5977%" height="15" fill="rgb(223,47,38)"/><text x="82.9154%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (42 samples, 0.57%)</title><rect x="82.6926%" y="853" width="0.5706%" height="15" fill="rgb(229,179,11)"/><text x="82.9426%" y="863.50"></text></g><g><title>do_syscall_64 [linux] (42 samples, 0.57%)</title><rect x="82.6926%" y="837" width="0.5706%" height="15" fill="rgb(231,122,1)"/><text x="82.9426%" y="847.50"></text></g><g><title>do_iter_write [linux] (8 samples, 0.11%)</title><rect x="83.4805%" y="645" width="0.1087%" height="15" fill="rgb(245,119,9)"/><text x="83.7305%" y="655.50"></text></g><g><title>fuser::ll::reply::Response::with_iovec [mount-s3] (10 samples, 0.14%)</title><rect x="83.4669%" y="789" width="0.1359%" height="15" fill="rgb(241,163,25)"/><text x="83.7169%" y="799.50"></text></g><g><title>inline fuser::reply::ReplyRaw::send_ll_mut::{{closure}} [mount-s3] (10 samples, 0.14%)</title><rect x="83.4669%" y="773" width="0.1359%" height="15" fill="rgb(217,214,3)"/><text x="83.7169%" y="783.50"></text></g><g><title>&lt;fuser::channel::ChannelSender as fuser::reply::ReplySender&gt;::send [mount-s3] (10 samples, 0.14%)</title><rect x="83.4669%" y="757" width="0.1359%" height="15" fill="rgb(240,86,28)"/><text x="83.7169%" y="767.50"></text></g><g><title>writev [libc-2.17.so] (10 samples, 0.14%)</title><rect x="83.4669%" y="741" width="0.1359%" height="15" fill="rgb(215,47,9)"/><text x="83.7169%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (10 samples, 0.14%)</title><rect x="83.4669%" y="725" width="0.1359%" height="15" fill="rgb(252,25,45)"/><text x="83.7169%" y="735.50"></text></g><g><title>do_syscall_64 [linux] (10 samples, 0.14%)</title><rect x="83.4669%" y="709" width="0.1359%" height="15" fill="rgb(251,164,9)"/><text x="83.7169%" y="719.50"></text></g><g><title>__x64_sys_writev [linux] (9 samples, 0.12%)</title><rect x="83.4805%" y="693" width="0.1223%" height="15" fill="rgb(233,194,0)"/><text x="83.7305%" y="703.50"></text></g><g><title>do_writev [linux] (9 samples, 0.12%)</title><rect x="83.4805%" y="677" width="0.1223%" height="15" fill="rgb(249,111,24)"/><text x="83.7305%" y="687.50"></text></g><g><title>vfs_writev [linux] (9 samples, 0.12%)</title><rect x="83.4805%" y="661" width="0.1223%" height="15" fill="rgb(250,223,3)"/><text x="83.7305%" y="671.50"></text></g><g><title>fuser::reply::ReplyAttr::attr [mount-s3] (14 samples, 0.19%)</title><rect x="83.4533%" y="837" width="0.1902%" height="15" fill="rgb(236,178,37)"/><text x="83.7033%" y="847.50"></text></g><g><title>inline fuser::reply::ReplyRaw::send_ll [mount-s3] (13 samples, 0.18%)</title><rect x="83.4669%" y="821" width="0.1766%" height="15" fill="rgb(241,158,50)"/><text x="83.7169%" y="831.50"></text></g><g><title>fuser::reply::ReplyRaw::send_ll_mut [mount-s3] (13 samples, 0.18%)</title><rect x="83.4669%" y="805" width="0.1766%" height="15" fill="rgb(213,121,41)"/><text x="83.7169%" y="815.50"></text></g><g><title>futures_executor::local_pool::block_on [mount-s3] (10 samples, 0.14%)</title><rect x="83.6435%" y="837" width="0.1359%" height="15" fill="rgb(240,92,3)"/><text x="83.8935%" y="847.50"></text></g><g><title>inline futures_executor::local_pool::run_executor [mount-s3] (9 samples, 0.12%)</title><rect x="83.6571%" y="821" width="0.1223%" height="15" fill="rgb(205,123,3)"/><text x="83.9071%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with [mount-s3] (9 samples, 0.12%)</title><rect x="83.6571%" y="805" width="0.1223%" height="15" fill="rgb(205,97,47)"/><text x="83.9071%" y="815.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (9 samples, 0.12%)</title><rect x="83.6571%" y="789" width="0.1223%" height="15" fill="rgb(247,152,14)"/><text x="83.9071%" y="799.50"></text></g><g><title>inline futures_executor::local_pool::run_executor::{{closure}} [mount-s3] (9 samples, 0.12%)</title><rect x="83.6571%" y="773" width="0.1223%" height="15" fill="rgb(248,195,53)"/><text x="83.9071%" y="783.50"></text></g><g><title>inline futures_executor::local_pool::block_on::{{closure}} [mount-s3] (9 samples, 0.12%)</title><rect x="83.6571%" y="757" width="0.1223%" height="15" fill="rgb(226,201,16)"/><text x="83.9071%" y="767.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll [mount-s3] (9 samples, 0.12%)</title><rect x="83.6571%" y="741" width="0.1223%" height="15" fill="rgb(205,98,0)"/><text x="83.9071%" y="751.50"></text></g><g><title>inline mountpoint_s3::fs::S3Filesystem&lt;Client,Runtime&gt;::getattr::{{closure}} [mount-s3] (8 samples, 0.11%)</title><rect x="83.6707%" y="725" width="0.1087%" height="15" fill="rgb(214,191,48)"/><text x="83.9207%" y="735.50"></text></g><g><title>&lt;mountpoint_s3::fuse::S3FuseFilesystem&lt;Client,Runtime&gt; as fuser::Filesystem&gt;::getattr [mount-s3] (39 samples, 0.53%)</title><rect x="83.3582%" y="853" width="0.5298%" height="15" fill="rgb(237,112,39)"/><text x="83.6082%" y="863.50"></text></g><g><title>inline &lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close [mount-s3] (17 samples, 0.23%)</title><rect x="83.9152%" y="789" width="0.2309%" height="15" fill="rgb(247,203,27)"/><text x="84.1652%" y="799.50"></text></g><g><title>&lt;mountpoint_s3::metrics::tracing_span::MetricsTracingSpanLayer as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close [mount-s3] (17 samples, 0.23%)</title><rect x="83.9152%" y="773" width="0.2309%" height="15" fill="rgb(235,124,28)"/><text x="84.1652%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close [mount-s3] (20 samples, 0.27%)</title><rect x="83.9152%" y="805" width="0.2717%" height="15" fill="rgb(208,207,46)"/><text x="84.1652%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; [mount-s3] (21 samples, 0.29%)</title><rect x="83.9152%" y="837" width="0.2853%" height="15" fill="rgb(234,176,4)"/><text x="84.1652%" y="847.50"></text></g><g><title>inline &lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop [mount-s3] (21 samples, 0.29%)</title><rect x="83.9152%" y="821" width="0.2853%" height="15" fill="rgb(230,133,28)"/><text x="84.1652%" y="831.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (20 samples, 0.27%)</title><rect x="84.6081%" y="517" width="0.2717%" height="15" fill="rgb(211,137,40)"/><text x="84.8581%" y="527.50"></text></g><g><title>do_iter_readv_writev [linux] (35 samples, 0.48%)</title><rect x="84.4179%" y="629" width="0.4755%" height="15" fill="rgb(254,35,13)"/><text x="84.6679%" y="639.50"></text></g><g><title>fuse_dev_write [linux:fuse] (34 samples, 0.46%)</title><rect x="84.4315%" y="613" width="0.4619%" height="15" fill="rgb(225,49,51)"/><text x="84.6815%" y="623.50"></text></g><g><title>fuse_dev_do_write [linux:fuse] (32 samples, 0.43%)</title><rect x="84.4586%" y="597" width="0.4347%" height="15" fill="rgb(251,10,15)"/><text x="84.7086%" y="607.50"></text></g><g><title>fuse_request_end [linux:fuse] (21 samples, 0.29%)</title><rect x="84.6081%" y="581" width="0.2853%" height="15" fill="rgb(228,207,15)"/><text x="84.8581%" y="591.50"></text></g><g><title>__wake_up [linux] (21 samples, 0.29%)</title><rect x="84.6081%" y="565" width="0.2853%" height="15" fill="rgb(241,99,19)"/><text x="84.8581%" y="575.50"></text></g><g><title>__wake_up_common_lock [linux] (21 samples, 0.29%)</title><rect x="84.6081%" y="549" width="0.2853%" height="15" fill="rgb(207,104,49)"/><text x="84.8581%" y="559.50"></text></g><g><title>__lock_text_start [linux] (21 samples, 0.29%)</title><rect x="84.6081%" y="533" width="0.2853%" height="15" fill="rgb(234,99,18)"/><text x="84.8581%" y="543.50"></text></g><g><title>do_iter_write [linux] (38 samples, 0.52%)</title><rect x="84.3907%" y="645" width="0.5162%" height="15" fill="rgb(213,191,49)"/><text x="84.6407%" y="655.50"></text></g><g><title>__x64_sys_writev [linux] (42 samples, 0.57%)</title><rect x="84.3500%" y="693" width="0.5706%" height="15" fill="rgb(210,226,19)"/><text x="84.6000%" y="703.50"></text></g><g><title>do_writev [linux] (42 samples, 0.57%)</title><rect x="84.3500%" y="677" width="0.5706%" height="15" fill="rgb(229,97,18)"/><text x="84.6000%" y="687.50"></text></g><g><title>vfs_writev [linux] (39 samples, 0.53%)</title><rect x="84.3907%" y="661" width="0.5298%" height="15" fill="rgb(211,167,15)"/><text x="84.6407%" y="671.50"></text></g><g><title>fuser::ll::reply::Response::with_iovec [mount-s3] (53 samples, 0.72%)</title><rect x="84.2277%" y="789" width="0.7200%" height="15" fill="rgb(210,169,34)"/><text x="84.4777%" y="799.50"></text></g><g><title>inline fuser::reply::ReplyRaw::send_ll_mut::{{closure}} [mount-s3] (53 samples, 0.72%)</title><rect x="84.2277%" y="773" width="0.7200%" height="15" fill="rgb(241,121,31)"/><text x="84.4777%" y="783.50"></text></g><g><title>&lt;fuser::channel::ChannelSender as fuser::reply::ReplySender&gt;::send [mount-s3] (53 samples, 0.72%)</title><rect x="84.2277%" y="757" width="0.7200%" height="15" fill="rgb(232,40,11)"/><text x="84.4777%" y="767.50"></text></g><g><title>writev [libc-2.17.so] (51 samples, 0.69%)</title><rect x="84.2549%" y="741" width="0.6928%" height="15" fill="rgb(205,86,26)"/><text x="84.5049%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (48 samples, 0.65%)</title><rect x="84.2956%" y="725" width="0.6521%" height="15" fill="rgb(231,126,28)"/><text x="84.5456%" y="735.50"></text></g><g><title>do_syscall_64 [linux] (48 samples, 0.65%)</title><rect x="84.2956%" y="709" width="0.6521%" height="15" fill="rgb(219,221,18)"/><text x="84.5456%" y="719.50"></text></g><g><title>fuser::reply::ReplyEntry::entry [mount-s3] (59 samples, 0.80%)</title><rect x="84.2005%" y="837" width="0.8015%" height="15" fill="rgb(211,40,0)"/><text x="84.4505%" y="847.50"></text></g><g><title>inline fuser::reply::ReplyRaw::send_ll [mount-s3] (57 samples, 0.77%)</title><rect x="84.2277%" y="821" width="0.7744%" height="15" fill="rgb(239,85,43)"/><text x="84.4777%" y="831.50"></text></g><g><title>fuser::reply::ReplyRaw::send_ll_mut [mount-s3] (57 samples, 0.77%)</title><rect x="84.2277%" y="805" width="0.7744%" height="15" fill="rgb(231,55,21)"/><text x="84.4777%" y="815.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;tracing::span::Entered&gt; [mount-s3] (8 samples, 0.11%)</title><rect x="85.1651%" y="725" width="0.1087%" height="15" fill="rgb(225,184,43)"/><text x="85.4151%" y="735.50"></text></g><g><title>inline &lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop [mount-s3] (8 samples, 0.11%)</title><rect x="85.1651%" y="709" width="0.1087%" height="15" fill="rgb(251,158,41)"/><text x="85.4151%" y="719.50"></text></g><g><title>inline tracing::span::Span::do_exit [mount-s3] (8 samples, 0.11%)</title><rect x="85.1651%" y="693" width="0.1087%" height="15" fill="rgb(234,159,37)"/><text x="85.4151%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit [mount-s3] (8 samples, 0.11%)</title><rect x="85.1651%" y="677" width="0.1087%" height="15" fill="rgb(216,204,22)"/><text x="85.4151%" y="687.50"></text></g><g><title>inline metrics::handles::Gauge::set [mount-s3] (17 samples, 0.23%)</title><rect x="85.9122%" y="501" width="0.2309%" height="15" fill="rgb(214,17,3)"/><text x="86.1622%" y="511.50"></text></g><g><title>mountpoint_s3::metrics::recorder::&lt;impl mountpoint_s3::metrics::ThreadMetricsSinkHandle&gt;::set_gauge [mount-s3] (14 samples, 0.19%)</title><rect x="85.9530%" y="485" width="0.1902%" height="15" fill="rgb(212,111,17)"/><text x="86.2030%" y="495.50"></text></g><g><title>mountpoint_s3::metrics::data::Metrics::get_mut [mount-s3] (12 samples, 0.16%)</title><rect x="85.9802%" y="469" width="0.1630%" height="15" fill="rgb(221,157,24)"/><text x="86.2302%" y="479.50"></text></g><g><title>mountpoint_s3_client::s3_crt_client::S3CrtClient::poll_client_metrics [mount-s3] (23 samples, 0.31%)</title><rect x="85.8443%" y="517" width="0.3125%" height="15" fill="rgb(252,16,13)"/><text x="86.0943%" y="527.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (9 samples, 0.12%)</title><rect x="86.2247%" y="453" width="0.1223%" height="15" fill="rgb(221,62,2)"/><text x="86.4747%" y="463.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (11 samples, 0.15%)</title><rect x="86.2247%" y="469" width="0.1494%" height="15" fill="rgb(247,87,22)"/><text x="86.4747%" y="479.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (19 samples, 0.26%)</title><rect x="86.2247%" y="485" width="0.2581%" height="15" fill="rgb(215,73,9)"/><text x="86.4747%" y="495.50"></text></g><g><title>vsnprintf [libc-2.17.so] (8 samples, 0.11%)</title><rect x="86.3741%" y="469" width="0.1087%" height="15" fill="rgb(207,175,33)"/><text x="86.6241%" y="479.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (9 samples, 0.12%)</title><rect x="86.5643%" y="453" width="0.1223%" height="15" fill="rgb(243,129,54)"/><text x="86.8143%" y="463.50"></text></g><g><title>default_resolve_host [mount-s3] (21 samples, 0.29%)</title><rect x="86.5372%" y="469" width="0.2853%" height="15" fill="rgb(227,119,45)"/><text x="86.7872%" y="479.50"></text></g><g><title>aws_s3_endpoint_new [mount-s3] (35 samples, 0.48%)</title><rect x="86.5236%" y="485" width="0.4755%" height="15" fill="rgb(205,109,36)"/><text x="86.7736%" y="495.50"></text></g><g><title>s_s3_endpoint_create_http_connection_manager [mount-s3] (13 samples, 0.18%)</title><rect x="86.8224%" y="469" width="0.1766%" height="15" fill="rgb(205,6,39)"/><text x="87.0724%" y="479.50"></text></g><g><title>__vfs_write [linux] (24 samples, 0.33%)</title><rect x="87.1757%" y="341" width="0.3260%" height="15" fill="rgb(221,32,16)"/><text x="87.4257%" y="351.50"></text></g><g><title>eventfd_write [linux] (24 samples, 0.33%)</title><rect x="87.1757%" y="325" width="0.3260%" height="15" fill="rgb(228,144,50)"/><text x="87.4257%" y="335.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (24 samples, 0.33%)</title><rect x="87.1757%" y="309" width="0.3260%" height="15" fill="rgb(229,201,53)"/><text x="87.4257%" y="319.50"></text></g><g><title>__x64_sys_write [linux] (32 samples, 0.43%)</title><rect x="87.0806%" y="389" width="0.4347%" height="15" fill="rgb(249,153,27)"/><text x="87.3306%" y="399.50"></text></g><g><title>ksys_write [linux] (32 samples, 0.43%)</title><rect x="87.0806%" y="373" width="0.4347%" height="15" fill="rgb(227,106,25)"/><text x="87.3306%" y="383.50"></text></g><g><title>vfs_write [linux] (28 samples, 0.38%)</title><rect x="87.1349%" y="357" width="0.3804%" height="15" fill="rgb(230,65,29)"/><text x="87.3849%" y="367.50"></text></g><g><title>s_schedule_task_common [mount-s3] (38 samples, 0.52%)</title><rect x="87.0262%" y="453" width="0.5162%" height="15" fill="rgb(221,57,46)"/><text x="87.2762%" y="463.50"></text></g><g><title>write [libpthread-2.17.so] (37 samples, 0.50%)</title><rect x="87.0398%" y="437" width="0.5026%" height="15" fill="rgb(229,161,17)"/><text x="87.2898%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (36 samples, 0.49%)</title><rect x="87.0534%" y="421" width="0.4891%" height="15" fill="rgb(222,213,11)"/><text x="87.3034%" y="431.50"></text></g><g><title>do_syscall_64 [linux] (36 samples, 0.49%)</title><rect x="87.0534%" y="405" width="0.4891%" height="15" fill="rgb(235,35,13)"/><text x="87.3034%" y="415.50"></text></g><g><title>inline s_s3_client_schedule_process_work_synced [mount-s3] (39 samples, 0.53%)</title><rect x="87.0262%" y="485" width="0.5298%" height="15" fill="rgb(233,158,34)"/><text x="87.2762%" y="495.50"></text></g><g><title>s_s3_client_schedule_process_work_synced_default [mount-s3] (39 samples, 0.53%)</title><rect x="87.0262%" y="469" width="0.5298%" height="15" fill="rgb(215,151,48)"/><text x="87.2762%" y="479.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (12 samples, 0.16%)</title><rect x="87.6919%" y="453" width="0.1630%" height="15" fill="rgb(229,84,14)"/><text x="87.9419%" y="463.50"></text></g><g><title>aws_cached_signing_config_new [mount-s3] (10 samples, 0.14%)</title><rect x="87.8549%" y="437" width="0.1359%" height="15" fill="rgb(229,68,14)"/><text x="88.1049%" y="447.50"></text></g><g><title>__x64_sys_read [linux] (12 samples, 0.16%)</title><rect x="88.0723%" y="325" width="0.1630%" height="15" fill="rgb(243,106,26)"/><text x="88.3223%" y="335.50"></text></g><g><title>ksys_read [linux] (12 samples, 0.16%)</title><rect x="88.0723%" y="309" width="0.1630%" height="15" fill="rgb(206,45,38)"/><text x="88.3223%" y="319.50"></text></g><g><title>vfs_read [linux] (8 samples, 0.11%)</title><rect x="88.1266%" y="293" width="0.1087%" height="15" fill="rgb(226,6,15)"/><text x="88.3766%" y="303.50"></text></g><g><title>aws_device_random_u32 [mount-s3] (20 samples, 0.27%)</title><rect x="87.9908%" y="421" width="0.2717%" height="15" fill="rgb(232,22,54)"/><text x="88.2408%" y="431.50"></text></g><g><title>aws_device_random_buffer [mount-s3] (20 samples, 0.27%)</title><rect x="87.9908%" y="405" width="0.2717%" height="15" fill="rgb(229,222,32)"/><text x="88.2408%" y="415.50"></text></g><g><title>inline s_fallback_device_random_buffer [mount-s3] (20 samples, 0.27%)</title><rect x="87.9908%" y="389" width="0.2717%" height="15" fill="rgb(228,62,29)"/><text x="88.2408%" y="399.50"></text></g><g><title>read [libpthread-2.17.so] (17 samples, 0.23%)</title><rect x="88.0315%" y="373" width="0.2309%" height="15" fill="rgb(251,103,34)"/><text x="88.2815%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (16 samples, 0.22%)</title><rect x="88.0451%" y="357" width="0.2174%" height="15" fill="rgb(233,12,30)"/><text x="88.2951%" y="367.50"></text></g><g><title>do_syscall_64 [linux] (16 samples, 0.22%)</title><rect x="88.0451%" y="341" width="0.2174%" height="15" fill="rgb(238,52,0)"/><text x="88.2951%" y="351.50"></text></g><g><title>aws_event_loop_group_get_next_loop [mount-s3] (21 samples, 0.29%)</title><rect x="87.9908%" y="437" width="0.2853%" height="15" fill="rgb(223,98,5)"/><text x="88.2408%" y="447.50"></text></g><g><title>mountpoint_s3_crt::s3::client::Client::make_meta_request [mount-s3] (158 samples, 2.15%)</title><rect x="86.1568%" y="517" width="2.1464%" height="15" fill="rgb(228,75,37)"/><text x="86.4068%" y="527.50">m..</text></g><g><title>aws_s3_client_make_meta_request [mount-s3] (157 samples, 2.13%)</title><rect x="86.1704%" y="501" width="2.1329%" height="15" fill="rgb(205,115,49)"/><text x="86.4204%" y="511.50">a..</text></g><g><title>s_s3_client_meta_request_factory_default [mount-s3] (46 samples, 0.62%)</title><rect x="87.6783%" y="485" width="0.6249%" height="15" fill="rgb(250,154,43)"/><text x="87.9283%" y="495.50"></text></g><g><title>aws_s3_meta_request_default_new [mount-s3] (46 samples, 0.62%)</title><rect x="87.6783%" y="469" width="0.6249%" height="15" fill="rgb(226,43,29)"/><text x="87.9283%" y="479.50"></text></g><g><title>aws_s3_meta_request_init_base [mount-s3] (33 samples, 0.45%)</title><rect x="87.8549%" y="453" width="0.4483%" height="15" fill="rgb(249,228,39)"/><text x="88.1049%" y="463.50"></text></g><g><title>inline mountpoint_s3_client::s3_crt_client::S3CrtClient::make_meta_request [mount-s3] (192 samples, 2.61%)</title><rect x="85.8036%" y="533" width="2.6083%" height="15" fill="rgb(216,79,43)"/><text x="86.0536%" y="543.50">in..</text></g><g><title>&lt;mountpoint_s3_crt::common::uri::Uri as core::clone::Clone&gt;::clone [mount-s3] (12 samples, 0.16%)</title><rect x="88.5885%" y="501" width="0.1630%" height="15" fill="rgb(228,95,12)"/><text x="88.8385%" y="511.50"></text></g><g><title>s_init_from_uri_str [mount-s3] (8 samples, 0.11%)</title><rect x="88.6428%" y="485" width="0.1087%" height="15" fill="rgb(249,221,15)"/><text x="88.8928%" y="495.50"></text></g><g><title>mountpoint_s3_client::endpoint::Endpoint::for_bucket [mount-s3] (18 samples, 0.24%)</title><rect x="88.5749%" y="517" width="0.2445%" height="15" fill="rgb(233,34,13)"/><text x="88.8249%" y="527.50"></text></g><g><title>mountpoint_s3_client::s3_crt_client::S3CrtClient::new_request_template [mount-s3] (39 samples, 0.53%)</title><rect x="88.4119%" y="533" width="0.5298%" height="15" fill="rgb(214,103,39)"/><text x="88.6619%" y="543.50"></text></g><g><title>&lt;mountpoint_s3_client::s3_crt_client::S3CrtClient as mountpoint_s3_client::object_client::ObjectClient&gt;::head_object::{{closure}} [mount-s3] (255 samples, 3.46%)</title><rect x="85.5726%" y="565" width="3.4642%" height="15" fill="rgb(251,126,39)"/><text x="85.8226%" y="575.50">&lt;mo..</text></g><g><title>inline mountpoint_s3_client::s3_crt_client::head_object::&lt;impl mountpoint_s3_client::s3_crt_client::S3CrtClient&gt;::head_object::{{closure}} [mount-s3] (254 samples, 3.45%)</title><rect x="85.5862%" y="549" width="3.4506%" height="15" fill="rgb(214,216,36)"/><text x="85.8362%" y="559.50">inl..</text></g><g><title>mountpoint_s3_client::s3_crt_client::S3CrtClient::poll_client_metrics [mount-s3] (15 samples, 0.20%)</title><rect x="89.2678%" y="501" width="0.2038%" height="15" fill="rgb(220,221,8)"/><text x="89.5178%" y="511.50"></text></g><g><title>inline metrics::handles::Gauge::set [mount-s3] (10 samples, 0.14%)</title><rect x="89.3357%" y="485" width="0.1359%" height="15" fill="rgb(240,216,3)"/><text x="89.5857%" y="495.50"></text></g><g><title>mountpoint_s3::metrics::recorder::&lt;impl mountpoint_s3::metrics::ThreadMetricsSinkHandle&gt;::set_gauge [mount-s3] (10 samples, 0.14%)</title><rect x="89.3357%" y="469" width="0.1359%" height="15" fill="rgb(232,218,17)"/><text x="89.5857%" y="479.50"></text></g><g><title>mountpoint_s3::metrics::data::Metrics::get_mut [mount-s3] (9 samples, 0.12%)</title><rect x="89.3493%" y="453" width="0.1223%" height="15" fill="rgb(229,163,45)"/><text x="89.5993%" y="463.50"></text></g><g><title>logger_vtable_log_fn [mount-s3] (9 samples, 0.12%)</title><rect x="89.4987%" y="453" width="0.1223%" height="15" fill="rgb(231,110,42)"/><text x="89.7487%" y="463.50"></text></g><g><title>&lt;mountpoint_s3_crt::common::rust_log_adapter::RustLogAdapter as mountpoint_s3_crt::common::logging::LoggerImpl&gt;::log [mount-s3] (9 samples, 0.12%)</title><rect x="89.4987%" y="437" width="0.1223%" height="15" fill="rgb(208,170,48)"/><text x="89.7487%" y="447.50"></text></g><g><title>aws_crt_s3_rs_logging_shim_log_fn_trampoline [mount-s3] (14 samples, 0.19%)</title><rect x="89.4987%" y="469" width="0.1902%" height="15" fill="rgb(239,116,25)"/><text x="89.7487%" y="479.50"></text></g><g><title>mountpoint_s3_crt::s3::client::Client::make_meta_request [mount-s3] (38 samples, 0.52%)</title><rect x="89.4715%" y="501" width="0.5162%" height="15" fill="rgb(219,200,50)"/><text x="89.7215%" y="511.50"></text></g><g><title>aws_s3_client_make_meta_request [mount-s3] (37 samples, 0.50%)</title><rect x="89.4851%" y="485" width="0.5026%" height="15" fill="rgb(245,200,0)"/><text x="89.7351%" y="495.50"></text></g><g><title>s_s3_client_meta_request_factory_default [mount-s3] (13 samples, 0.18%)</title><rect x="89.8112%" y="469" width="0.1766%" height="15" fill="rgb(245,119,33)"/><text x="90.0612%" y="479.50"></text></g><g><title>aws_s3_meta_request_default_new [mount-s3] (13 samples, 0.18%)</title><rect x="89.8112%" y="453" width="0.1766%" height="15" fill="rgb(231,125,12)"/><text x="90.0612%" y="463.50"></text></g><g><title>aws_s3_meta_request_init_base [mount-s3] (9 samples, 0.12%)</title><rect x="89.8655%" y="437" width="0.1223%" height="15" fill="rgb(216,96,41)"/><text x="90.1155%" y="447.50"></text></g><g><title>inline mountpoint_s3_client::s3_crt_client::S3CrtClient::make_simple_http_request [mount-s3] (59 samples, 0.80%)</title><rect x="89.2270%" y="533" width="0.8015%" height="15" fill="rgb(248,43,45)"/><text x="89.4770%" y="543.50"></text></g><g><title>inline mountpoint_s3_client::s3_crt_client::S3CrtClient::make_meta_request [mount-s3] (59 samples, 0.80%)</title><rect x="89.2270%" y="517" width="0.8015%" height="15" fill="rgb(217,222,7)"/><text x="89.4770%" y="527.50"></text></g><g><title>inline mountpoint_s3_client::s3_crt_client::S3Message::set_request_path_and_query [mount-s3] (10 samples, 0.14%)</title><rect x="90.0285%" y="533" width="0.1359%" height="15" fill="rgb(233,28,6)"/><text x="90.2785%" y="543.50"></text></g><g><title>mountpoint_s3_client::endpoint::Endpoint::for_bucket [mount-s3] (8 samples, 0.11%)</title><rect x="90.2595%" y="517" width="0.1087%" height="15" fill="rgb(231,218,15)"/><text x="90.5095%" y="527.50"></text></g><g><title>mountpoint_s3_client::s3_crt_client::S3CrtClient::new_request_template [mount-s3] (21 samples, 0.29%)</title><rect x="90.1644%" y="533" width="0.2853%" height="15" fill="rgb(226,171,48)"/><text x="90.4144%" y="543.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;xmltree::XMLNode&gt;&gt; [mount-s3] (13 samples, 0.18%)</title><rect x="90.4633%" y="501" width="0.1766%" height="15" fill="rgb(235,201,9)"/><text x="90.7133%" y="511.50"></text></g><g><title>inline &lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop [mount-s3] (13 samples, 0.18%)</title><rect x="90.4633%" y="485" width="0.1766%" height="15" fill="rgb(217,80,15)"/><text x="90.7133%" y="495.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;[xmltree::XMLNode]&gt; [mount-s3] (13 samples, 0.18%)</title><rect x="90.4633%" y="469" width="0.1766%" height="15" fill="rgb(219,152,8)"/><text x="90.7133%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;xmltree::XMLNode&gt; [mount-s3] (12 samples, 0.16%)</title><rect x="90.4768%" y="453" width="0.1630%" height="15" fill="rgb(243,107,38)"/><text x="90.7268%" y="463.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;xmltree::Element&gt; [mount-s3] (12 samples, 0.16%)</title><rect x="90.4768%" y="437" width="0.1630%" height="15" fill="rgb(231,17,5)"/><text x="90.7268%" y="447.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;core::option::Option&lt;xml::namespace::Namespace&gt;&gt; [mount-s3] (10 samples, 0.14%)</title><rect x="90.5040%" y="421" width="0.1359%" height="15" fill="rgb(209,25,54)"/><text x="90.7540%" y="431.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;xml::namespace::Namespace&gt; [mount-s3] (10 samples, 0.14%)</title><rect x="90.5040%" y="405" width="0.1359%" height="15" fill="rgb(219,0,2)"/><text x="90.7540%" y="415.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,alloc::string::String&gt;&gt; [mount-s3] (10 samples, 0.14%)</title><rect x="90.5040%" y="389" width="0.1359%" height="15" fill="rgb(246,9,5)"/><text x="90.7540%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop [mount-s3] (10 samples, 0.14%)</title><rect x="90.5040%" y="373" width="0.1359%" height="15" fill="rgb(226,159,4)"/><text x="90.7540%" y="383.50"></text></g><g><title>inline core::mem::drop [mount-s3] (10 samples, 0.14%)</title><rect x="90.5040%" y="357" width="0.1359%" height="15" fill="rgb(219,175,34)"/><text x="90.7540%" y="367.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,alloc::string::String&gt;&gt; [mount-s3] (10 samples, 0.14%)</title><rect x="90.5040%" y="341" width="0.1359%" height="15" fill="rgb(236,10,46)"/><text x="90.7540%" y="351.50"></text></g><g><title>inline &lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop [mount-s3] (10 samples, 0.14%)</title><rect x="90.5040%" y="325" width="0.1359%" height="15" fill="rgb(240,211,16)"/><text x="90.7540%" y="335.50"></text></g><g><title>inline alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val [mount-s3] (9 samples, 0.12%)</title><rect x="90.5176%" y="309" width="0.1223%" height="15" fill="rgb(205,3,43)"/><text x="90.7676%" y="319.50"></text></g><g><title>inline core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop [mount-s3] (9 samples, 0.12%)</title><rect x="90.5176%" y="293" width="0.1223%" height="15" fill="rgb(245,7,22)"/><text x="90.7676%" y="303.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;alloc::string::String&gt; [mount-s3] (9 samples, 0.12%)</title><rect x="90.5176%" y="277" width="0.1223%" height="15" fill="rgb(239,132,32)"/><text x="90.7676%" y="287.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; [mount-s3] (9 samples, 0.12%)</title><rect x="90.5176%" y="261" width="0.1223%" height="15" fill="rgb(228,202,34)"/><text x="90.7676%" y="271.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; [mount-s3] (9 samples, 0.12%)</title><rect x="90.5176%" y="245" width="0.1223%" height="15" fill="rgb(254,200,22)"/><text x="90.7676%" y="255.50"></text></g><g><title>inline &lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop [mount-s3] (9 samples, 0.12%)</title><rect x="90.5176%" y="229" width="0.1223%" height="15" fill="rgb(219,10,39)"/><text x="90.7676%" y="239.50"></text></g><g><title>inline &lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate [mount-s3] (9 samples, 0.12%)</title><rect x="90.5176%" y="213" width="0.1223%" height="15" fill="rgb(226,210,39)"/><text x="90.7676%" y="223.50"></text></g><g><title>inline alloc::alloc::dealloc [mount-s3] (9 samples, 0.12%)</title><rect x="90.5176%" y="197" width="0.1223%" height="15" fill="rgb(208,219,16)"/><text x="90.7676%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;xmltree::Element&gt; [mount-s3] (15 samples, 0.20%)</title><rect x="90.4497%" y="517" width="0.2038%" height="15" fill="rgb(216,158,51)"/><text x="90.6997%" y="527.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;xmltree::XMLNode&gt;&gt; [mount-s3] (10 samples, 0.14%)</title><rect x="90.6806%" y="485" width="0.1359%" height="15" fill="rgb(233,14,44)"/><text x="90.9306%" y="495.50"></text></g><g><title>inline &lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop [mount-s3] (10 samples, 0.14%)</title><rect x="90.6806%" y="469" width="0.1359%" height="15" fill="rgb(237,97,39)"/><text x="90.9306%" y="479.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;[xmltree::XMLNode]&gt; [mount-s3] (10 samples, 0.14%)</title><rect x="90.6806%" y="453" width="0.1359%" height="15" fill="rgb(218,198,43)"/><text x="90.9306%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;xmltree::XMLNode&gt; [mount-s3] (10 samples, 0.14%)</title><rect x="90.6806%" y="437" width="0.1359%" height="15" fill="rgb(231,104,20)"/><text x="90.9306%" y="447.50"></text></g><g><title>inline core::ptr::drop_in_place&lt;xmltree::Element&gt; [mount-s3] (10 samples, 0.14%)</title><rect x="90.6806%" y="421" width="0.1359%" height="15" fill="rgb(254,36,13)"/><text x="90.9306%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;xmltree::Element&gt; [mount-s3] (13 samples, 0.18%)</title><rect x="90.6806%" y="501" width="0.1766%" height="15" fill="rgb(248,14,50)"/><text x="90.9306%" y="511.50"></text></g><g><title>inline mountpoint_s3_client::s3_crt_client::list_objects::&lt;impl mountpoint_s3_client::object_client::ObjectInfo&gt;::parse_from_xml [mount-s3] (10 samples, 0.14%)</title><rect x="90.8980%" y="501" width="0.1359%" height="15" fill="rgb(217,107,29)"/><text x="91.1480%" y="511.50"></text></g><g><title>inline mountpoint_s3_client::s3_crt_client::list_objects::&lt;impl mountpoint_s3_client::object_client::ListObjectsResult&gt;::parse_from_xml [mount-s3] (35 samples, 0.48%)</title><rect x="90.6534%" y="517" width="0.4755%" height="15" fill="rgb(251,169,33)"/><text x="90.9034%" y="527.50"></text></g><g><title>inline xml::namespace::NamespaceStack::default [mount-s3] (12 samples, 0.16%)</title><rect x="91.3327%" y="453" width="0.1630%" height="15" fill="rgb(217,108,32)"/><text x="91.5827%" y="463.50"></text></g><g><title>inline xml::namespace::NamespaceStack::put [mount-s3] (12 samples, 0.16%)</title><rect x="91.3327%" y="437" width="0.1630%" height="15" fill="rgb(219,66,42)"/><text x="91.5827%" y="447.50"></text></g><g><title>xml::namespace::Namespace::put [mount-s3] (12 samples, 0.16%)</title><rect x="91.3327%" y="421" width="0.1630%" height="15" fill="rgb(206,180,7)"/><text x="91.5827%" y="431.50"></text></g><g><title>inline xml::reader::EventReader&lt;R&gt;::new_with_config [mount-s3] (18 samples, 0.24%)</title><rect x="91.2784%" y="485" width="0.2445%" height="15" fill="rgb(208,226,31)"/><text x="91.5284%" y="495.50"></text></g><g><title>xml::reader::parser::PullParser::new [mount-s3] (18 samples, 0.24%)</title><rect x="91.2784%" y="469" width="0.2445%" height="15" fill="rgb(218,26,49)"/><text x="91.5284%" y="479.50"></text></g><g><title>inline xml::reader::lexer::Lexer::read_next_token [mount-s3] (11 samples, 0.15%)</title><rect x="91.7131%" y="437" width="0.1494%" height="15" fill="rgb(233,197,48)"/><text x="91.9631%" y="447.50"></text></g><g><title>xml::reader::lexer::Lexer::dispatch_char [mount-s3] (10 samples, 0.14%)</title><rect x="91.7267%" y="421" width="0.1359%" height="15" fill="rgb(252,181,51)"/><text x="91.9767%" y="431.50"></text></g><g><title>xml::reader::lexer::Lexer::next_token [mount-s3] (23 samples, 0.31%)</title><rect x="91.6316%" y="453" width="0.3125%" height="15" fill="rgb(253,90,19)"/><text x="91.8816%" y="463.50"></text></g><g><title>inline xml::reader::parser::PullParser::read_qualified_name [mount-s3] (8 samples, 0.11%)</title><rect x="92.1478%" y="421" width="0.1087%" height="15" fill="rgb(215,171,30)"/><text x="92.3978%" y="431.50"></text></g><g><title>xml::reader::parser::PullParser::read_qualified_name::{{closure}} [mount-s3] (8 samples, 0.11%)</title><rect x="92.1478%" y="405" width="0.1087%" height="15" fill="rgb(214,222,9)"/><text x="92.3978%" y="415.50"></text></g><g><title>inline xml::reader::parser::inside_declaration::&lt;impl xml::reader::parser::PullParser&gt;::inside_declaration [mount-s3] (10 samples, 0.14%)</title><rect x="92.1342%" y="437" width="0.1359%" height="15" fill="rgb(223,3,22)"/><text x="92.3842%" y="447.50"></text></g><g><title>inline xml::reader::parser::PullParser::read_qualified_name [mount-s3] (8 samples, 0.11%)</title><rect x="92.3380%" y="421" width="0.1087%" height="15" fill="rgb(225,196,46)"/><text x="92.5880%" y="431.50"></text></g><g><title>inline xml::reader::parser::inside_opening_tag::&lt;impl xml::reader::parser::PullParser&gt;::inside_opening_tag [mount-s3] (30 samples, 0.41%)</title><rect x="92.2701%" y="437" width="0.4076%" height="15" fill="rgb(209,110,37)"/><text x="92.5201%" y="447.50"></text></g><g><title>xml::reader::parser::PullParser::emit_start_element [mount-s3] (16 samples, 0.22%)</title><rect x="92.4603%" y="421" width="0.2174%" height="15" fill="rgb(249,89,12)"/><text x="92.7103%" y="431.50"></text></g><g><title>inline alloc::string::String::push [mount-s3] (9 samples, 0.12%)</title><rect x="92.8271%" y="421" width="0.1223%" height="15" fill="rgb(226,27,33)"/><text x="93.0771%" y="431.50"></text></g><g><title>inline alloc::vec::Vec&lt;T,A&gt;::push [mount-s3] (9 samples, 0.12%)</title><rect x="92.8271%" y="405" width="0.1223%" height="15" fill="rgb(213,82,22)"/><text x="93.0771%" y="415.50"></text></g><g><title>xml::reader::lexer::Token::push_to_string [mount-s3] (11 samples, 0.15%)</title><rect x="92.8135%" y="437" width="0.1494%" height="15" fill="rgb(248,140,0)"/><text x="93.0635%" y="447.50"></text></g><g><title>inline xml::reader::EventReader&lt;R&gt;::next [mount-s3] (109 samples, 1.48%)</title><rect x="91.5229%" y="485" width="1.4808%" height="15" fill="rgb(228,106,3)"/><text x="91.7729%" y="495.50"></text></g><g><title>xml::reader::parser::PullParser::next [mount-s3] (109 samples, 1.48%)</title><rect x="91.5229%" y="469" width="1.4808%" height="15" fill="rgb(209,23,37)"/><text x="91.7729%" y="479.50"></text></g><g><title>xml::reader::parser::PullParser::dispatch_token [mount-s3] (78 samples, 1.06%)</title><rect x="91.9440%" y="453" width="1.0596%" height="15" fill="rgb(241,93,50)"/><text x="92.1940%" y="463.50"></text></g><g><title>inline alloc::vec::Vec&lt;T,A&gt;::push [mount-s3] (32 samples, 0.43%)</title><rect x="93.0308%" y="469" width="0.4347%" height="15" fill="rgb(253,46,43)"/><text x="93.2808%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push [mount-s3] (32 samples, 0.43%)</title><rect x="93.0308%" y="453" width="0.4347%" height="15" fill="rgb(226,206,43)"/><text x="93.2808%" y="463.50"></text></g><g><title>inline alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized [mount-s3] (32 samples, 0.43%)</title><rect x="93.0308%" y="437" width="0.4347%" height="15" fill="rgb(217,54,7)"/><text x="93.2808%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow [mount-s3] (32 samples, 0.43%)</title><rect x="93.0308%" y="421" width="0.4347%" height="15" fill="rgb(223,5,52)"/><text x="93.2808%" y="431.50"></text></g><g><title>inline &lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow [mount-s3] (30 samples, 0.41%)</title><rect x="93.0580%" y="405" width="0.4076%" height="15" fill="rgb(206,52,46)"/><text x="93.3080%" y="415.50"></text></g><g><title>inline alloc::alloc::Global::grow_impl [mount-s3] (30 samples, 0.41%)</title><rect x="93.0580%" y="389" width="0.4076%" height="15" fill="rgb(253,136,11)"/><text x="93.3080%" y="399.50"></text></g><g><title>inline alloc::alloc::realloc [mount-s3] (30 samples, 0.41%)</title><rect x="93.0580%" y="373" width="0.4076%" height="15" fill="rgb(208,106,33)"/><text x="93.3080%" y="383.50"></text></g><g><title>realloc [libc-2.17.so] (30 samples, 0.41%)</title><rect x="93.0580%" y="357" width="0.4076%" height="15" fill="rgb(206,54,4)"/><text x="93.3080%" y="367.50"></text></g><g><title>_int_realloc [libc-2.17.so] (30 samples, 0.41%)</title><rect x="93.0580%" y="341" width="0.4076%" height="15" fill="rgb(213,3,15)"/><text x="93.3080%" y="351.50"></text></g><g><title>_int_malloc [libc-2.17.so] (27 samples, 0.37%)</title><rect x="93.0988%" y="325" width="0.3668%" height="15" fill="rgb(252,211,39)"/><text x="93.3488%" y="335.50"></text></g><g><title>malloc_consolidate [libc-2.17.so] (22 samples, 0.30%)</title><rect x="93.1667%" y="309" width="0.2989%" height="15" fill="rgb(223,6,36)"/><text x="93.4167%" y="319.50"></text></g><g><title>xml::reader::lexer::Lexer::next_token [mount-s3] (11 samples, 0.15%)</title><rect x="93.4656%" y="437" width="0.1494%" height="15" fill="rgb(252,169,45)"/><text x="93.7156%" y="447.50"></text></g><g><title>inline core::iter::traits::iterator::Iterator::for_each::call::{{closure}} [mount-s3] (10 samples, 0.14%)</title><rect x="94.0361%" y="245" width="0.1359%" height="15" fill="rgb(212,48,26)"/><text x="94.2861%" y="255.50"></text></g><g><title>inline &lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} [mount-s3] (10 samples, 0.14%)</title><rect x="94.0361%" y="229" width="0.1359%" height="15" fill="rgb(251,102,48)"/><text x="94.2861%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert [mount-s3] (9 samples, 0.12%)</title><rect x="94.0497%" y="213" width="0.1223%" height="15" fill="rgb(243,208,16)"/><text x="94.2997%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert [mount-s3] (9 samples, 0.12%)</title><rect x="94.0497%" y="197" width="0.1223%" height="15" fill="rgb(219,96,24)"/><text x="94.2997%" y="207.50"></text></g><g><title>__libc_malloc [libc-2.17.so] (11 samples, 0.15%)</title><rect x="94.2671%" y="53" width="0.1494%" height="15" fill="rgb(219,33,29)"/><text x="94.5171%" y="63.50"></text></g><g><title>_int_malloc [libc-2.17.so] (8 samples, 0.11%)</title><rect x="94.3078%" y="37" width="0.1087%" height="15" fill="rgb(223,176,5)"/><text x="94.5578%" y="47.50"></text></g><g><title>inline alloc::vec::Vec&lt;T,A&gt;::with_capacity_in [mount-s3] (12 samples, 0.16%)</title><rect x="94.2671%" y="149" width="0.1630%" height="15" fill="rgb(228,140,14)"/><text x="94.5171%" y="159.50"></text></g><g><title>inline alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in [mount-s3] (12 samples, 0.16%)</title><rect x="94.2671%" y="133" width="0.1630%" height="15" fill="rgb(217,179,31)"/><text x="94.5171%" y="143.50"></text></g><g><title>inline alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in [mount-s3] (12 samples, 0.16%)</title><rect x="94.2671%" y="117" width="0.1630%" height="15" fill="rgb(230,9,30)"/><text x="94.5171%" y="127.50"></text></g><g><title>inline &lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate [mount-s3] (12 samples, 0.16%)</title><rect x="94.2671%" y="101" width="0.1630%" height="15" fill="rgb(230,136,20)"/><text x="94.5171%" y="111.50"></text></g><g><title>inline alloc::alloc::Global::alloc_impl [mount-s3] (12 samples, 0.16%)</title><rect x="94.2671%" y="85" width="0.1630%" height="15" fill="rgb(215,210,22)"/><text x="94.5171%" y="95.50"></text></g><g><title>inline alloc::alloc::alloc [mount-s3] (12 samples, 0.16%)</title><rect x="94.2671%" y="69" width="0.1630%" height="15" fill="rgb(218,43,5)"/><text x="94.5171%" y="79.50"></text></g><g><title>inline xml::reader::parser::inside_opening_tag::&lt;impl xml::reader::parser::PullParser&gt;::inside_opening_tag [mount-s3] (57 samples, 0.77%)</title><rect x="93.6693%" y="421" width="0.7744%" height="15" fill="rgb(216,11,5)"/><text x="93.9193%" y="431.50"></text></g><g><title>inline xml::reader::parser::PullParser::read_qualified_name [mount-s3] (56 samples, 0.76%)</title><rect x="93.6829%" y="405" width="0.7608%" height="15" fill="rgb(209,82,29)"/><text x="93.9329%" y="415.50"></text></g><g><title>xml::reader::parser::PullParser::read_qualified_name::{{closure}} [mount-s3] (54 samples, 0.73%)</title><rect x="93.7101%" y="389" width="0.7336%" height="15" fill="rgb(244,115,12)"/><text x="93.9601%" y="399.50"></text></g><g><title>inline xml::reader::parser::inside_opening_tag::&lt;impl xml::reader::parser::PullParser&gt;::inside_opening_tag::{{closure}} [mount-s3] (48 samples, 0.65%)</title><rect x="93.7916%" y="373" width="0.6521%" height="15" fill="rgb(222,82,18)"/><text x="94.0416%" y="383.50"></text></g><g><title>xml::reader::parser::PullParser::emit_start_element [mount-s3] (41 samples, 0.56%)</title><rect x="93.8867%" y="357" width="0.5570%" height="15" fill="rgb(249,227,8)"/><text x="94.1367%" y="367.50"></text></g><g><title>inline xml::namespace::NamespaceStack::squash [mount-s3] (32 samples, 0.43%)</title><rect x="94.0090%" y="341" width="0.4347%" height="15" fill="rgb(253,141,45)"/><text x="94.2590%" y="351.50"></text></g><g><title>inline &lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend [mount-s3] (31 samples, 0.42%)</title><rect x="94.0226%" y="325" width="0.4211%" height="15" fill="rgb(234,184,4)"/><text x="94.2726%" y="335.50"></text></g><g><title>inline core::iter::traits::iterator::Iterator::for_each [mount-s3] (31 samples, 0.42%)</title><rect x="94.0226%" y="309" width="0.4211%" height="15" fill="rgb(218,194,23)"/><text x="94.2726%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold [mount-s3] (31 samples, 0.42%)</title><rect x="94.0226%" y="293" width="0.4211%" height="15" fill="rgb(235,66,41)"/><text x="94.2726%" y="303.50"></text></g><g><title>inline core::iter::traits::iterator::Iterator::fold [mount-s3] (30 samples, 0.41%)</title><rect x="94.0361%" y="277" width="0.4076%" height="15" fill="rgb(245,217,1)"/><text x="94.2861%" y="287.50"></text></g><g><title>inline core::iter::adapters::map::map_fold::{{closure}} [mount-s3] (30 samples, 0.41%)</title><rect x="94.0361%" y="261" width="0.4076%" height="15" fill="rgb(229,91,1)"/><text x="94.2861%" y="271.50"></text></g><g><title>inline xml::namespace::NamespaceStack::squash::{{closure}} [mount-s3] (20 samples, 0.27%)</title><rect x="94.1720%" y="245" width="0.2717%" height="15" fill="rgb(207,101,30)"/><text x="94.4220%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone [mount-s3] (14 samples, 0.19%)</title><rect x="94.2535%" y="229" width="0.1902%" height="15" fill="rgb(223,82,49)"/><text x="94.5035%" y="239.50"></text></g><g><title>inline &lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone [mount-s3] (13 samples, 0.18%)</title><rect x="94.2671%" y="213" width="0.1766%" height="15" fill="rgb(218,167,17)"/><text x="94.5171%" y="223.50"></text></g><g><title>inline alloc::slice::&lt;impl [T]&gt;::to_vec_in [mount-s3] (13 samples, 0.18%)</title><rect x="94.2671%" y="197" width="0.1766%" height="15" fill="rgb(208,103,14)"/><text x="94.5171%" y="207.50"></text></g><g><title>inline alloc::slice::hack::to_vec [mount-s3] (13 samples, 0.18%)</title><rect x="94.2671%" y="181" width="0.1766%" height="15" fill="rgb(238,20,8)"/><text x="94.5171%" y="191.50"></text></g><g><title>inline &lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec [mount-s3] (13 samples, 0.18%)</title><rect x="94.2671%" y="165" width="0.1766%" height="15" fill="rgb(218,80,54)"/><text x="94.5171%" y="175.50"></text></g><g><title>inline xml::reader::EventReader&lt;R&gt;::next [mount-s3] (77 samples, 1.05%)</title><rect x="93.4656%" y="469" width="1.0461%" height="15" fill="rgb(240,144,17)"/><text x="93.7156%" y="479.50"></text></g><g><title>xml::reader::parser::PullParser::next [mount-s3] (77 samples, 1.05%)</title><rect x="93.4656%" y="453" width="1.0461%" height="15" fill="rgb(245,27,50)"/><text x="93.7156%" y="463.50"></text></g><g><title>xml::reader::parser::PullParser::dispatch_token [mount-s3] (66 samples, 0.90%)</title><rect x="93.6150%" y="437" width="0.8966%" height="15" fill="rgb(251,51,7)"/><text x="93.8650%" y="447.50"></text></g><g><title>inline alloc::vec::Vec&lt;T,A&gt;::push [mount-s3] (8 samples, 0.11%)</title><rect x="94.5660%" y="453" width="0.1087%" height="15" fill="rgb(245,217,29)"/><text x="94.8160%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push [mount-s3] (8 samples, 0.11%)</title><rect x="94.5660%" y="437" width="0.1087%" height="15" fill="rgb(221,176,29)"/><text x="94.8160%" y="447.50"></text></g><g><title>inline alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized [mount-s3] (8 samples, 0.11%)</title><rect x="94.5660%" y="421" width="0.1087%" height="15" fill="rgb(212,180,24)"/><text x="94.8160%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow [mount-s3] (8 samples, 0.11%)</title><rect x="94.5660%" y="405" width="0.1087%" height="15" fill="rgb(254,24,2)"/><text x="94.8160%" y="415.50"></text></g><g><title>inline xml::reader::lexer::Lexer::read_next_token [mount-s3] (8 samples, 0.11%)</title><rect x="94.8241%" y="405" width="0.1087%" height="15" fill="rgb(230,100,2)"/><text x="95.0741%" y="415.50"></text></g><g><title>xml::reader::lexer::Lexer::next_token [mount-s3] (24 samples, 0.33%)</title><rect x="94.7154%" y="421" width="0.3260%" height="15" fill="rgb(219,142,25)"/><text x="94.9654%" y="431.50"></text></g><g><title>xml::util::next_char_from [mount-s3] (8 samples, 0.11%)</title><rect x="94.9328%" y="405" width="0.1087%" height="15" fill="rgb(240,73,43)"/><text x="95.1828%" y="415.50"></text></g><g><title>inline xml::reader::parser::inside_closing_tag_name::&lt;impl xml::reader::parser::PullParser&gt;::inside_closing_tag_name [mount-s3] (24 samples, 0.33%)</title><rect x="95.1637%" y="405" width="0.3260%" height="15" fill="rgb(214,114,15)"/><text x="95.4137%" y="415.50"></text></g><g><title>inline xml::reader::parser::PullParser::read_qualified_name [mount-s3] (23 samples, 0.31%)</title><rect x="95.1773%" y="389" width="0.3125%" height="15" fill="rgb(207,130,4)"/><text x="95.4273%" y="399.50"></text></g><g><title>xml::reader::parser::PullParser::read_qualified_name::{{closure}} [mount-s3] (22 samples, 0.30%)</title><rect x="95.1909%" y="373" width="0.2989%" height="15" fill="rgb(221,25,40)"/><text x="95.4409%" y="383.50"></text></g><g><title>inline xml::reader::parser::inside_closing_tag_name::&lt;impl xml::reader::parser::PullParser&gt;::inside_closing_tag_name::{{closure}} [mount-s3] (19 samples, 0.26%)</title><rect x="95.2316%" y="357" width="0.2581%" height="15" fill="rgb(241,184,7)"/><text x="95.4816%" y="367.50"></text></g><g><title>xml::reader::parser::PullParser::emit_end_element [mount-s3] (13 samples, 0.18%)</title><rect x="95.3131%" y="341" width="0.1766%" height="15" fill="rgb(235,159,4)"/><text x="95.5631%" y="351.50"></text></g><g><title>inline xml::namespace::NamespaceStack::squash [mount-s3] (10 samples, 0.14%)</title><rect x="95.5305%" y="325" width="0.1359%" height="15" fill="rgb(214,87,48)"/><text x="95.7805%" y="335.50"></text></g><g><title>inline &lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend [mount-s3] (10 samples, 0.14%)</title><rect x="95.5305%" y="309" width="0.1359%" height="15" fill="rgb(246,198,24)"/><text x="95.7805%" y="319.50"></text></g><g><title>inline core::iter::traits::iterator::Iterator::for_each [mount-s3] (10 samples, 0.14%)</title><rect x="95.5305%" y="293" width="0.1359%" height="15" fill="rgb(209,66,40)"/><text x="95.7805%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold [mount-s3] (10 samples, 0.14%)</title><rect x="95.5305%" y="277" width="0.1359%" height="15" fill="rgb(233,147,39)"/><text x="95.7805%" y="287.50"></text></g><g><title>inline core::iter::traits::iterator::Iterator::fold [mount-s3] (10 samples, 0.14%)</title><rect x="95.5305%" y="261" width="0.1359%" height="15" fill="rgb(231,145,52)"/><text x="95.7805%" y="271.50"></text></g><g><title>inline core::iter::adapters::map::map_fold::{{closure}} [mount-s3] (10 samples, 0.14%)</title><rect x="95.5305%" y="245" width="0.1359%" height="15" fill="rgb(206,20,26)"/><text x="95.7805%" y="255.50"></text></g><g><title>inline xml::reader::parser::inside_opening_tag::&lt;impl xml::reader::parser::PullParser&gt;::inside_opening_tag [mount-s3] (14 samples, 0.19%)</title><rect x="95.4897%" y="405" width="0.1902%" height="15" fill="rgb(238,220,4)"/><text x="95.7397%" y="415.50"></text></g><g><title>inline xml::reader::parser::PullParser::read_qualified_name [mount-s3] (14 samples, 0.19%)</title><rect x="95.4897%" y="389" width="0.1902%" height="15" fill="rgb(252,195,42)"/><text x="95.7397%" y="399.50"></text></g><g><title>xml::reader::parser::PullParser::read_qualified_name::{{closure}} [mount-s3] (14 samples, 0.19%)</title><rect x="95.4897%" y="373" width="0.1902%" height="15" fill="rgb(209,10,6)"/><text x="95.7397%" y="383.50"></text></g><g><title>inline xml::reader::parser::inside_opening_tag::&lt;impl xml::reader::parser::PullParser&gt;::inside_opening_tag::{{closure}} [mount-s3] (11 samples, 0.15%)</title><rect x="95.5305%" y="357" width="0.1494%" height="15" fill="rgb(229,3,52)"/><text x="95.7805%" y="367.50"></text></g><g><title>xml::reader::parser::PullParser::emit_start_element [mount-s3] (11 samples, 0.15%)</title><rect x="95.5305%" y="341" width="0.1494%" height="15" fill="rgb(253,49,37)"/><text x="95.7805%" y="351.50"></text></g><g><title>inline alloc::string::String::push [mount-s3] (8 samples, 0.11%)</title><rect x="95.7479%" y="389" width="0.1087%" height="15" fill="rgb(240,103,49)"/><text x="95.9979%" y="399.50"></text></g><g><title>inline alloc::vec::Vec&lt;T,A&gt;::push [mount-s3] (8 samples, 0.11%)</title><rect x="95.7479%" y="373" width="0.1087%" height="15" fill="rgb(250,182,30)"/><text x="95.9979%" y="383.50"></text></g><g><title>inline xml::reader::EventReader&lt;R&gt;::next [mount-s3] (87 samples, 1.18%)</title><rect x="94.6882%" y="453" width="1.1819%" height="15" fill="rgb(248,8,30)"/><text x="94.9382%" y="463.50"></text></g><g><title>xml::reader::parser::PullParser::next [mount-s3] (87 samples, 1.18%)</title><rect x="94.6882%" y="437" width="1.1819%" height="15" fill="rgb(237,120,30)"/><text x="94.9382%" y="447.50"></text></g><g><title>xml::reader::parser::PullParser::dispatch_token [mount-s3] (61 samples, 0.83%)</title><rect x="95.0414%" y="421" width="0.8287%" height="15" fill="rgb(221,146,34)"/><text x="95.2914%" y="431.50"></text></g><g><title>xml::reader::lexer::Token::push_to_string [mount-s3] (11 samples, 0.15%)</title><rect x="95.7207%" y="405" width="0.1494%" height="15" fill="rgb(242,55,13)"/><text x="95.9707%" y="415.50"></text></g><g><title>xml::reader::lexer::Lexer::next_token [mount-s3] (12 samples, 0.16%)</title><rect x="95.9381%" y="405" width="0.1630%" height="15" fill="rgb(242,112,31)"/><text x="96.1881%" y="415.50"></text></g><g><title>inline xml::reader::parser::inside_closing_tag_name::&lt;impl xml::reader::parser::PullParser&gt;::inside_closing_tag_name [mount-s3] (10 samples, 0.14%)</title><rect x="96.2777%" y="389" width="0.1359%" height="15" fill="rgb(249,192,27)"/><text x="96.5277%" y="399.50"></text></g><g><title>inline xml::reader::parser::PullParser::read_qualified_name [mount-s3] (10 samples, 0.14%)</title><rect x="96.2777%" y="373" width="0.1359%" height="15" fill="rgb(208,204,44)"/><text x="96.5277%" y="383.50"></text></g><g><title>xml::reader::parser::PullParser::read_qualified_name::{{closure}} [mount-s3] (9 samples, 0.12%)</title><rect x="96.2913%" y="357" width="0.1223%" height="15" fill="rgb(208,93,54)"/><text x="96.5413%" y="367.50"></text></g><g><title>inline xml::reader::EventReader&lt;R&gt;::next [mount-s3] (52 samples, 0.71%)</title><rect x="95.9245%" y="437" width="0.7064%" height="15" fill="rgb(242,1,31)"/><text x="96.1745%" y="447.50"></text></g><g><title>xml::reader::parser::PullParser::next [mount-s3] (52 samples, 0.71%)</title><rect x="95.9245%" y="421" width="0.7064%" height="15" fill="rgb(241,83,25)"/><text x="96.1745%" y="431.50"></text></g><g><title>xml::reader::parser::PullParser::dispatch_token [mount-s3] (39 samples, 0.53%)</title><rect x="96.1011%" y="405" width="0.5298%" height="15" fill="rgb(205,169,50)"/><text x="96.3511%" y="415.50"></text></g><g><title>mountpoint_s3_client::s3_crt_client::list_objects::&lt;impl mountpoint_s3_client::object_client::ListObjectsResult&gt;::parse_from_bytes [mount-s3] (469 samples, 6.37%)</title><rect x="90.4497%" y="533" width="6.3714%" height="15" fill="rgb(239,186,37)"/><text x="90.6997%" y="543.50">mountpoi..</text></g><g><title>xmltree::Element::parse [mount-s3] (419 samples, 5.69%)</title><rect x="91.1289%" y="517" width="5.6922%" height="15" fill="rgb(205,221,10)"/><text x="91.3789%" y="527.50">xmltree..</text></g><g><title>inline xmltree::Element::parse_all [mount-s3] (418 samples, 5.68%)</title><rect x="91.1425%" y="501" width="5.6786%" height="15" fill="rgb(218,196,15)"/><text x="91.3925%" y="511.50">inline ..</text></g><g><title>xmltree::build [mount-s3] (281 samples, 3.82%)</title><rect x="93.0037%" y="485" width="3.8174%" height="15" fill="rgb(218,196,35)"/><text x="93.2537%" y="495.50">xmlt..</text></g><g><title>xmltree::build [mount-s3] (170 samples, 2.31%)</title><rect x="94.5116%" y="469" width="2.3095%" height="15" fill="rgb(233,63,24)"/><text x="94.7616%" y="479.50">x..</text></g><g><title>xmltree::build [mount-s3] (70 samples, 0.95%)</title><rect x="95.8701%" y="453" width="0.9510%" height="15" fill="rgb(225,8,4)"/><text x="96.1201%" y="463.50"></text></g><g><title>xmltree::build [mount-s3] (14 samples, 0.19%)</title><rect x="96.6309%" y="437" width="0.1902%" height="15" fill="rgb(234,105,35)"/><text x="96.8809%" y="447.50"></text></g><g><title>inline xml::reader::EventReader&lt;R&gt;::next [mount-s3] (13 samples, 0.18%)</title><rect x="96.6445%" y="421" width="0.1766%" height="15" fill="rgb(236,21,32)"/><text x="96.8945%" y="431.50"></text></g><g><title>xml::reader::parser::PullParser::next [mount-s3] (13 samples, 0.18%)</title><rect x="96.6445%" y="405" width="0.1766%" height="15" fill="rgb(228,109,6)"/><text x="96.8945%" y="415.50"></text></g><g><title>inline &lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll [mount-s3] (829 samples, 11.26%)</title><rect x="85.5726%" y="581" width="11.2621%" height="15" fill="rgb(229,215,31)"/><text x="85.8226%" y="591.50">inline &lt;core::pin..</text></g><g><title>&lt;mountpoint_s3_client::s3_crt_client::S3CrtClient as mountpoint_s3_client::object_client::ObjectClient&gt;::list_objects::{{closure}} [mount-s3] (574 samples, 7.80%)</title><rect x="89.0368%" y="565" width="7.7979%" height="15" fill="rgb(221,52,54)"/><text x="89.2868%" y="575.50">&lt;mountpoint..</text></g><g><title>inline mountpoint_s3_client::s3_crt_client::list_objects::&lt;impl mountpoint_s3_client::s3_crt_client::S3CrtClient&gt;::list_objects::{{closure}} [mount-s3] (572 samples, 7.77%)</title><rect x="89.0640%" y="549" width="7.7707%" height="15" fill="rgb(252,129,43)"/><text x="89.3140%" y="559.50">inline moun..</text></g><g><title>inline &lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll [mount-s3] (835 samples, 11.34%)</title><rect x="85.5047%" y="693" width="11.3436%" height="15" fill="rgb(248,183,27)"/><text x="85.7547%" y="703.50">inline &lt;futures_u..</text></g><g><title>inline mountpoint_s3::inode::Superblock::lookup::{{closure}}::{{closure}} [mount-s3] (835 samples, 11.34%)</title><rect x="85.5047%" y="677" width="11.3436%" height="15" fill="rgb(250,0,22)"/><text x="85.7547%" y="687.50">inline mountpoint..</text></g><g><title>inline core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut [mount-s3] (834 samples, 11.33%)</title><rect x="85.5183%" y="661" width="11.3300%" height="15" fill="rgb(213,166,10)"/><text x="85.7683%" y="671.50">inline core::ops:..</text></g><g><title>mountpoint_s3::inode::Superblock::lookup::{{closure}}::{{closure}}::{{closure}} [mount-s3] (834 samples, 11.33%)</title><rect x="85.5183%" y="645" width="11.3300%" height="15" fill="rgb(207,163,36)"/><text x="85.7683%" y="655.50">mountpoint_s3::in..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin [mount-s3] (831 samples, 11.29%)</title><rect x="85.5590%" y="629" width="11.2892%" height="15" fill="rgb(208,122,22)"/><text x="85.8090%" y="639.50">futures_util::fut..</text></g><g><title>inline &lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll [mount-s3] (830 samples, 11.28%)</title><rect x="85.5726%" y="613" width="11.2756%" height="15" fill="rgb(207,104,49)"/><text x="85.8226%" y="623.50">inline &lt;core::pin..</text></g><g><title>inline &lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll [mount-s3] (830 samples, 11.28%)</title><rect x="85.5726%" y="597" width="11.2756%" height="15" fill="rgb(248,211,50)"/><text x="85.8226%" y="607.50">inline &lt;futures_u..</text></g><g><title>mountpoint_s3::inode::SuperblockInner::update_or_insert [mount-s3] (14 samples, 0.19%)</title><rect x="97.2286%" y="693" width="0.1902%" height="15" fill="rgb(217,13,45)"/><text x="97.4786%" y="703.50"></text></g><g><title>mountpoint_s3::inode::SuperblockInner::update_if_present [mount-s3] (9 samples, 0.12%)</title><rect x="97.2966%" y="677" width="0.1223%" height="15" fill="rgb(211,216,49)"/><text x="97.5466%" y="687.50"></text></g><g><title>inline mountpoint_s3::fs::S3Filesystem&lt;Client,Runtime&gt;::lookup::{{closure}} [mount-s3] (895 samples, 12.16%)</title><rect x="85.2737%" y="725" width="12.1587%" height="15" fill="rgb(221,58,53)"/><text x="85.5237%" y="735.50">inline mountpoint_..</text></g><g><title>mountpoint_s3::inode::Superblock::lookup::{{closure}} [mount-s3] (888 samples, 12.06%)</title><rect x="85.3688%" y="709" width="12.0636%" height="15" fill="rgb(220,112,41)"/><text x="85.6188%" y="719.50">mountpoint_s3::ino..</text></g><g><title>inline &lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter [mount-s3] (9 samples, 0.12%)</title><rect x="97.4596%" y="677" width="0.1223%" height="15" fill="rgb(236,38,28)"/><text x="97.7096%" y="687.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter [mount-s3] (12 samples, 0.16%)</title><rect x="97.4324%" y="693" width="0.1630%" height="15" fill="rgb(227,195,22)"/><text x="97.6824%" y="703.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll [mount-s3] (916 samples, 12.44%)</title><rect x="85.1651%" y="741" width="12.4440%" height="15" fill="rgb(214,55,33)"/><text x="85.4151%" y="751.50">&lt;tracing::instrumen..</text></g><g><title>inline tracing::span::Span::enter [mount-s3] (13 samples, 0.18%)</title><rect x="97.4324%" y="725" width="0.1766%" height="15" fill="rgb(248,80,13)"/><text x="97.6824%" y="735.50"></text></g><g><title>inline tracing::span::Span::do_enter [mount-s3] (13 samples, 0.18%)</title><rect x="97.4324%" y="709" width="0.1766%" height="15" fill="rgb(238,52,6)"/><text x="97.6824%" y="719.50"></text></g><g><title>inline futures_executor::local_pool::block_on::{{closure}} [mount-s3] (917 samples, 12.46%)</title><rect x="85.1651%" y="757" width="12.4575%" height="15" fill="rgb(224,198,47)"/><text x="85.4151%" y="767.50">inline futures_exec..</text></g><g><title>futex_wait_queue_me [linux] (17 samples, 0.23%)</title><rect x="97.8400%" y="613" width="0.2309%" height="15" fill="rgb(233,171,20)"/><text x="98.0900%" y="623.50"></text></g><g><title>schedule [linux] (16 samples, 0.22%)</title><rect x="97.8536%" y="597" width="0.2174%" height="15" fill="rgb(241,30,25)"/><text x="98.1036%" y="607.50"></text></g><g><title>__sched_text_start [linux] (16 samples, 0.22%)</title><rect x="97.8536%" y="581" width="0.2174%" height="15" fill="rgb(207,171,38)"/><text x="98.1036%" y="591.50"></text></g><g><title>finish_task_switch [linux] (16 samples, 0.22%)</title><rect x="97.8536%" y="565" width="0.2174%" height="15" fill="rgb(234,70,1)"/><text x="98.1036%" y="575.50"></text></g><g><title>0xFFFFFFFFFFFFFF80 (16 samples, 0.22%)</title><rect x="97.8536%" y="549" width="0.2174%" height="15" fill="rgb(232,178,18)"/><text x="98.1036%" y="559.50"></text></g><g><title>__x64_sys_futex [linux] (25 samples, 0.34%)</title><rect x="97.7720%" y="661" width="0.3396%" height="15" fill="rgb(241,78,40)"/><text x="98.0220%" y="671.50"></text></g><g><title>do_futex [linux] (24 samples, 0.33%)</title><rect x="97.7856%" y="645" width="0.3260%" height="15" fill="rgb(222,35,25)"/><text x="98.0356%" y="655.50"></text></g><g><title>futex_wait [linux] (22 samples, 0.30%)</title><rect x="97.8128%" y="629" width="0.2989%" height="15" fill="rgb(207,92,16)"/><text x="98.0628%" y="639.50"></text></g><g><title>inline std::sys_common::thread_parking::futex::Parker::park [mount-s3] (36 samples, 0.49%)</title><rect x="97.6362%" y="741" width="0.4891%" height="15" fill="rgb(216,59,51)"/><text x="97.8862%" y="751.50"></text></g><g><title>inline std::sys::unix::futex::futex_wait [mount-s3] (30 samples, 0.41%)</title><rect x="97.7177%" y="725" width="0.4076%" height="15" fill="rgb(213,80,28)"/><text x="97.9677%" y="735.50"></text></g><g><title>syscall [libc-2.17.so] (30 samples, 0.41%)</title><rect x="97.7177%" y="709" width="0.4076%" height="15" fill="rgb(220,93,7)"/><text x="97.9677%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe [linux] (26 samples, 0.35%)</title><rect x="97.7720%" y="693" width="0.3532%" height="15" fill="rgb(225,24,44)"/><text x="98.0220%" y="703.50"></text></g><g><title>do_syscall_64 [linux] (26 samples, 0.35%)</title><rect x="97.7720%" y="677" width="0.3532%" height="15" fill="rgb(243,74,40)"/><text x="98.0220%" y="687.50"></text></g><g><title>futures_executor::local_pool::block_on [mount-s3] (968 samples, 13.15%)</title><rect x="85.0020%" y="837" width="13.1504%" height="15" fill="rgb(228,39,7)"/><text x="85.2520%" y="847.50">futures_executor::lo..</text></g><g><title>inline futures_executor::local_pool::run_executor [mount-s3] (964 samples, 13.10%)</title><rect x="85.0564%" y="821" width="13.0960%" height="15" fill="rgb(227,79,8)"/><text x="85.3064%" y="831.50">inline futures_execu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with [mount-s3] (964 samples, 13.10%)</title><rect x="85.0564%" y="805" width="13.0960%" height="15" fill="rgb(236,58,11)"/><text x="85.3064%" y="815.50">std::thread::local::..</text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (962 samples, 13.07%)</title><rect x="85.0835%" y="789" width="13.0689%" height="15" fill="rgb(249,63,35)"/><text x="85.3335%" y="799.50">inline std::thread::..</text></g><g><title>inline futures_executor::local_pool::run_executor::{{closure}} [mount-s3] (962 samples, 13.07%)</title><rect x="85.0835%" y="773" width="13.0689%" height="15" fill="rgb(252,114,16)"/><text x="85.3335%" y="783.50">inline futures_execu..</text></g><g><title>std::thread::park [mount-s3] (39 samples, 0.53%)</title><rect x="97.6226%" y="757" width="0.5298%" height="15" fill="rgb(254,151,24)"/><text x="97.8726%" y="767.50"></text></g><g><title>tracing::span::Span::new [mount-s3] (8 samples, 0.11%)</title><rect x="98.2883%" y="837" width="0.1087%" height="15" fill="rgb(253,54,39)"/><text x="98.5383%" y="847.50"></text></g><g><title>&lt;mountpoint_s3::fuse::S3FuseFilesystem&lt;Client,Runtime&gt; as fuser::Filesystem&gt;::lookup [mount-s3] (1,069 samples, 14.52%)</title><rect x="83.8881%" y="853" width="14.5225%" height="15" fill="rgb(243,25,45)"/><text x="84.1381%" y="863.50">&lt;mountpoint_s3::fuse::..</text></g><g><title>inline mountpoint_s3_client::s3_crt_client::list_objects::&lt;impl mountpoint_s3_client::object_client::ListObjectsResult&gt;::parse_from_xml [mount-s3] (9 samples, 0.12%)</title><rect x="98.6687%" y="629" width="0.1223%" height="15" fill="rgb(234,134,9)"/><text x="98.9187%" y="639.50"></text></g><g><title>inline xml::reader::EventReader&lt;R&gt;::next [mount-s3] (12 samples, 0.16%)</title><rect x="98.9539%" y="565" width="0.1630%" height="15" fill="rgb(227,166,31)"/><text x="99.2039%" y="575.50"></text></g><g><title>xml::reader::parser::PullParser::next [mount-s3] (12 samples, 0.16%)</title><rect x="98.9539%" y="549" width="0.1630%" height="15" fill="rgb(245,143,41)"/><text x="99.2039%" y="559.50"></text></g><g><title>xml::reader::parser::PullParser::dispatch_token [mount-s3] (9 samples, 0.12%)</title><rect x="98.9947%" y="533" width="0.1223%" height="15" fill="rgb(238,181,32)"/><text x="99.2447%" y="543.50"></text></g><g><title>inline xml::reader::EventReader&lt;R&gt;::next [mount-s3] (17 samples, 0.23%)</title><rect x="99.1577%" y="549" width="0.2309%" height="15" fill="rgb(224,113,18)"/><text x="99.4077%" y="559.50"></text></g><g><title>xml::reader::parser::PullParser::next [mount-s3] (17 samples, 0.23%)</title><rect x="99.1577%" y="533" width="0.2309%" height="15" fill="rgb(240,229,28)"/><text x="99.4077%" y="543.50"></text></g><g><title>xml::reader::parser::PullParser::dispatch_token [mount-s3] (11 samples, 0.15%)</title><rect x="99.2392%" y="517" width="0.1494%" height="15" fill="rgb(250,185,3)"/><text x="99.4892%" y="527.50"></text></g><g><title>inline &lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll [mount-s3] (65 samples, 0.88%)</title><rect x="98.5871%" y="693" width="0.8830%" height="15" fill="rgb(212,59,25)"/><text x="98.8371%" y="703.50"></text></g><g><title>&lt;mountpoint_s3_client::s3_crt_client::S3CrtClient as mountpoint_s3_client::object_client::ObjectClient&gt;::list_objects::{{closure}} [mount-s3] (65 samples, 0.88%)</title><rect x="98.5871%" y="677" width="0.8830%" height="15" fill="rgb(221,87,20)"/><text x="98.8371%" y="687.50"></text></g><g><title>inline mountpoint_s3_client::s3_crt_client::list_objects::&lt;impl mountpoint_s3_client::s3_crt_client::S3CrtClient&gt;::list_objects::{{closure}} [mount-s3] (65 samples, 0.88%)</title><rect x="98.5871%" y="661" width="0.8830%" height="15" fill="rgb(213,74,28)"/><text x="98.8371%" y="671.50"></text></g><g><title>mountpoint_s3_client::s3_crt_client::list_objects::&lt;impl mountpoint_s3_client::object_client::ListObjectsResult&gt;::parse_from_bytes [mount-s3] (59 samples, 0.80%)</title><rect x="98.6687%" y="645" width="0.8015%" height="15" fill="rgb(224,132,34)"/><text x="98.9187%" y="655.50"></text></g><g><title>xmltree::Element::parse [mount-s3] (50 samples, 0.68%)</title><rect x="98.7909%" y="629" width="0.6793%" height="15" fill="rgb(222,101,24)"/><text x="99.0409%" y="639.50"></text></g><g><title>inline xmltree::Element::parse_all [mount-s3] (50 samples, 0.68%)</title><rect x="98.7909%" y="613" width="0.6793%" height="15" fill="rgb(254,142,4)"/><text x="99.0409%" y="623.50"></text></g><g><title>xmltree::build [mount-s3] (46 samples, 0.62%)</title><rect x="98.8453%" y="597" width="0.6249%" height="15" fill="rgb(230,229,49)"/><text x="99.0953%" y="607.50"></text></g><g><title>xmltree::build [mount-s3] (41 samples, 0.56%)</title><rect x="98.9132%" y="581" width="0.5570%" height="15" fill="rgb(238,70,47)"/><text x="99.1632%" y="591.50"></text></g><g><title>xmltree::build [mount-s3] (26 samples, 0.35%)</title><rect x="99.1170%" y="565" width="0.3532%" height="15" fill="rgb(231,160,17)"/><text x="99.3670%" y="575.50"></text></g><g><title>inline mountpoint_s3::fs::S3Filesystem&lt;Client,Runtime&gt;::readdir::{{closure}} [mount-s3] (74 samples, 1.01%)</title><rect x="98.5192%" y="725" width="1.0053%" height="15" fill="rgb(218,68,53)"/><text x="98.7692%" y="735.50"></text></g><g><title>mountpoint_s3::inode::ReaddirHandle::next::{{closure}} [mount-s3] (71 samples, 0.96%)</title><rect x="98.5600%" y="709" width="0.9645%" height="15" fill="rgb(236,111,10)"/><text x="98.8100%" y="719.50"></text></g><g><title>inline futures_executor::local_pool::block_on::{{closure}} [mount-s3] (76 samples, 1.03%)</title><rect x="98.5192%" y="757" width="1.0325%" height="15" fill="rgb(224,34,41)"/><text x="98.7692%" y="767.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll [mount-s3] (76 samples, 1.03%)</title><rect x="98.5192%" y="741" width="1.0325%" height="15" fill="rgb(241,118,19)"/><text x="98.7692%" y="751.50"></text></g><g><title>futures_executor::local_pool::block_on [mount-s3] (77 samples, 1.05%)</title><rect x="98.5192%" y="837" width="1.0461%" height="15" fill="rgb(238,129,25)"/><text x="98.7692%" y="847.50"></text></g><g><title>inline futures_executor::local_pool::run_executor [mount-s3] (77 samples, 1.05%)</title><rect x="98.5192%" y="821" width="1.0461%" height="15" fill="rgb(238,22,31)"/><text x="98.7692%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with [mount-s3] (77 samples, 1.05%)</title><rect x="98.5192%" y="805" width="1.0461%" height="15" fill="rgb(222,174,48)"/><text x="98.7692%" y="815.50"></text></g><g><title>inline std::thread::local::LocalKey&lt;T&gt;::try_with [mount-s3] (77 samples, 1.05%)</title><rect x="98.5192%" y="789" width="1.0461%" height="15" fill="rgb(206,152,40)"/><text x="98.7692%" y="799.50"></text></g><g><title>inline futures_executor::local_pool::run_executor::{{closure}} [mount-s3] (77 samples, 1.05%)</title><rect x="98.5192%" y="773" width="1.0461%" height="15" fill="rgb(218,99,54)"/><text x="98.7692%" y="783.50"></text></g><g><title>&lt;mountpoint_s3::fuse::S3FuseFilesystem&lt;Client,Runtime&gt; as fuser::Filesystem&gt;::readdirplus [mount-s3] (85 samples, 1.15%)</title><rect x="98.4377%" y="853" width="1.1547%" height="15" fill="rgb(220,174,26)"/><text x="98.6877%" y="863.50"></text></g><g><title>inline fuser::request::Request::dispatch_req [mount-s3] (1,211 samples, 16.45%)</title><rect x="83.3447%" y="869" width="16.4516%" height="15" fill="rgb(245,116,9)"/><text x="83.5947%" y="879.50">inline fuser::request::Re..</text></g><g><title>fuser::request::Request::dispatch [mount-s3] (1,227 samples, 16.67%)</title><rect x="83.2903%" y="885" width="16.6689%" height="15" fill="rgb(209,72,35)"/><text x="83.5403%" y="895.50">fuser::request::Request::d..</text></g><g><title>log::__private_api_log [mount-s3] (12 samples, 0.16%)</title><rect x="99.7962%" y="869" width="0.1630%" height="15" fill="rgb(226,126,21)"/><text x="100.0462%" y="879.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log [mount-s3] (12 samples, 0.16%)</title><rect x="99.7962%" y="853" width="0.1630%" height="15" fill="rgb(227,192,1)"/><text x="100.0462%" y="863.50"></text></g><g><title>all (7,361 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(237,180,29)"/><text x="0.2500%" y="1183.50"></text></g><g><title>mount-s3 [PID=8923] (7,361 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(230,197,35)"/><text x="0.2500%" y="1167.50">mount-s3 [PID=8923]</text></g><g><title>fuse-worker-0 [THREAD=8929] (1,289 samples, 17.51%)</title><rect x="82.4888%" y="1141" width="17.5112%" height="15" fill="rgb(246,193,31)"/><text x="82.7388%" y="1151.50">fuse-worker-0 [THREAD=8929]</text></g><g><title>clone [libc-2.17.so] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="1125" width="17.3618%" height="15" fill="rgb(241,36,4)"/><text x="82.8882%" y="1135.50">clone [libc-2.17.so]</text></g><g><title>start_thread [libpthread-2.17.so] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="1109" width="17.3618%" height="15" fill="rgb(241,130,17)"/><text x="82.8882%" y="1119.50">start_thread [libpthread-2...</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="1093" width="17.3618%" height="15" fill="rgb(206,137,32)"/><text x="82.8882%" y="1103.50">std::sys::unix::thread::Thr..</text></g><g><title>inline &lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="1077" width="17.3618%" height="15" fill="rgb(237,228,51)"/><text x="82.8882%" y="1087.50">inline &lt;alloc::boxed::Box&lt;F..</text></g><g><title>inline &lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="1061" width="17.3618%" height="15" fill="rgb(243,6,42)"/><text x="82.8882%" y="1071.50">inline &lt;alloc::boxed::Box&lt;F..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="1045" width="17.3618%" height="15" fill="rgb(251,74,28)"/><text x="82.8882%" y="1055.50">core::ops::function::FnOnce..</text></g><g><title>inline std::thread::Builder::spawn_unchecked_::{{closure}} [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="1029" width="17.3618%" height="15" fill="rgb(218,20,49)"/><text x="82.8882%" y="1039.50">inline std::thread::Builder..</text></g><g><title>inline std::panic::catch_unwind [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="1013" width="17.3618%" height="15" fill="rgb(238,28,14)"/><text x="82.8882%" y="1023.50">inline std::panic::catch_un..</text></g><g><title>inline std::panicking::try [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="997" width="17.3618%" height="15" fill="rgb(229,40,46)"/><text x="82.8882%" y="1007.50">inline std::panicking::try ..</text></g><g><title>inline std::panicking::try::do_call [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="981" width="17.3618%" height="15" fill="rgb(244,195,20)"/><text x="82.8882%" y="991.50">inline std::panicking::try:..</text></g><g><title>inline &lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="965" width="17.3618%" height="15" fill="rgb(253,56,35)"/><text x="82.8882%" y="975.50">inline &lt;core::panic::unwind..</text></g><g><title>inline std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="949" width="17.3618%" height="15" fill="rgb(210,149,44)"/><text x="82.8882%" y="959.50">inline std::thread::Builder..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="933" width="17.3618%" height="15" fill="rgb(240,135,12)"/><text x="82.8882%" y="943.50">std::sys_common::backtrace:..</text></g><g><title>inline mountpoint_s3::fuse::session::FuseSession::new::{{closure}}::{{closure}} [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="917" width="17.3618%" height="15" fill="rgb(251,24,50)"/><text x="82.8882%" y="927.50">inline mountpoint_s3::fuse:..</text></g><g><title>fuser::session::Session&lt;FS&gt;::run [mount-s3] (1,278 samples, 17.36%)</title><rect x="82.6382%" y="901" width="17.3618%" height="15" fill="rgb(243,200,47)"/><text x="82.8882%" y="911.50">fuser::session::Session&lt;FS&gt;..</text></g></svg></svg>